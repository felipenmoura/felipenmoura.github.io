{"name":"socket_getpeername","purpose":"Queries the remote side of the given socket which may either result in host\/port or in a Unix filesystem path, dependent on its type","manualid":"function.socket-getpeername","version":"PHP 4 >= 4.1.0, PHP 5","params":[{"name":"socket","type":"resource","optional":"false"},{"name":"address","type":"string","optional":"false"},{"name":"port","type":"int","optional":"true"}],"return":{"type":"bool","description":"Returns TRUE on success or FALSE on failure. socket_getpeername may also return\n   FALSE if the socket type is not any of AF_INET,\n   AF_INET6, or AF_UNIX, in which\n   case the last socket error code is not updated."},"errors":null,"notes":[{"type":"note","description":"socket_getpeername should not be used with\n    AF_UNIX sockets created with socket_accept.\n    Only sockets created with socket_connect or a primary\n    server socket following a call to socket_bind will return\n    meaningful values."},{"type":"note","description":"For having socket_getpeername to return a meaningful value,\n    the socket it is applied upon must of course be one for which the concept of \n    \"peer\" makes sense."}],"changelog":[],"seealso":[{"type":"function","name":"socket_getsockname"},{"type":"function","name":"socket_last_error"},{"type":"function","name":"socket_strerror"}]}
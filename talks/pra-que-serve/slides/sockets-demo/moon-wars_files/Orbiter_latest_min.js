//==============================================================================  
// Orbiter_2.1.0.843_Release (Minified)
// www.unionplatform.com
// Release Date: 3-May-2013
// (c) Copyright USER1 Subsystems Corporation
//==============================================================================

(function(b){if(typeof b.net=="undefined"){b.net={}}var a=b.net;a.user1=a.user1?a.user1:{};a.user1.utils=a.user1.utils?a.user1.utils:{};a.user1.utils.createPackage=function(c){var f=c.split(".");var d=b;for(var e=0;e<f.length;e++){d=d[f[e]]===undefined?(d[f[e]]={}):d[f[e]]}};a.user1.utils.createPackage("net.user1.logger");a.user1.utils.createPackage("net.user1.events");a.user1.utils.createPackage("net.user1.orbiter");a.user1.utils.createPackage("net.user1.orbiter.filters");a.user1.utils.createPackage("net.user1.orbiter.snapshot");a.user1.utils.createPackage("net.user1.orbiter.upc");a.user1.utils.createPackage("net.user1.utils");a.user1.utils.extend=function(d,e){function c(){}c.prototype=e.prototype;d.superclass=e.prototype;d.prototype=new c();d.prototype.constructor=d};a.user1.utils.abstractError=function(){throw new Error("Could not invoke abstract method. This method must be implemented by a subclass.")};a.user1.orbiter.ConnectionRefusalReason=new Object();a.user1.orbiter.ConnectionRefusalReason.BANNED="BANNED";a.user1.orbiter.ConnectionRefusal=function(e,c){this.bannedAt=NaN;this.banDuration=NaN;this.banReason=null;this.reason=e;this.description=c;var d;switch(e){case a.user1.orbiter.ConnectionRefusalReason.BANNED:d=c.split(a.user1.orbiter.Tokens.RS);this.bannedAt=parseFloat(d[0]);this.banDuration=parseFloat(d[1]);this.banReason=d[2];break}};a.user1.orbiter.VersionNumber=function(c,e,d,f){this.major=c;this.minor=e;this.revision=d;this.build=f==undefined?-1:f};a.user1.orbiter.VersionNumber.prototype.fromVersionString=function(d){var c=d.split(".");this.major=c[0];this.minor=c[1];this.revision=c[2];this.build=c.length==4?c[4]:-1};a.user1.orbiter.VersionNumber.prototype.toStringVerbose=function(){var c=this.major+"."+this.minor+"."+this.revision+((this.build==-1)?"":" (Build "+this.build+")");return c};a.user1.orbiter.VersionNumber.prototype.toString=function(){var c=this.major+"."+this.minor+"."+this.revision+((this.build==-1)?"":"."+this.build);return c};a.user1.orbiter.Product=new Object();a.user1.orbiter.Product.clientType="Orbiter";a.user1.orbiter.Product.clientVersion=new a.user1.orbiter.VersionNumber(2,1,0,843);a.user1.orbiter.Product.upcVersion=new a.user1.orbiter.VersionNumber(1,10,3);a.user1.utils.ObjectUtil=new Object();a.user1.utils.ObjectUtil.combine=function(){var g=arguments.length==1?arguments[0]:arguments;var f=new Object();var c;for(var e=0;e<g.length;e++){c=g[e];for(var d in c){if(c.hasOwnProperty(d)){f[d]=c[d]}}}return f};a.user1.utils.ObjectUtil.length=function(d){var c=0;for(var e in d){c++}return c};a.user1.utils.ArrayUtil=new Object();a.user1.utils.ArrayUtil.indexOf=function(c,e){if(c.indexOf){return c.indexOf(e)}for(var d=c.length;--d>=0;){if(c[d]===e){return d}}return -1};a.user1.utils.ArrayUtil.remove=function(e,d){var c;if(d==null){return false}else{c=a.user1.utils.ArrayUtil.indexOf(e,d);if(c==-1){return false}else{e.splice(c,1);return true}}};a.user1.utils.ArrayUtil.isArray=function(c){return Object.prototype.toString.call(c)==="[object Array]"};a.user1.utils.MemoryStore=function(){this.clear()};a.user1.utils.MemoryStore.prototype.write=function(c,e,d){if(typeof this.data[c]==="undefined"){this.data[c]=new Object()}this.data[c][e]=d};a.user1.utils.MemoryStore.prototype.read=function(c,d){if(typeof this.data[c]!=="undefined"&&typeof this.data[c][d]!=="undefined"){return this.data[c][d]}else{return null}};a.user1.utils.MemoryStore.prototype.remove=function(c,d){if(typeof this.data[c]!=="undefined"){delete this.data[c][d]}};a.user1.utils.MemoryStore.prototype.clear=function(){this.data=new Object()};a.user1.utils.LocalStorage=function(){this.data=new a.user1.utils.MemoryStore()};a.user1.utils.LocalStorage.prototype.setItem=function(c,d){this.data.write("localStorage",c,d)};a.user1.utils.LocalStorage.prototype.getItem=function(c){return this.data.read("localStorage",c)};a.user1.utils.LocalStorage.prototype.removeItem=function(c){this.data.remove("localStorage",c)};a.user1.utils.LocalData=new Object();if(typeof localStorage==="undefined"){a.user1.utils.LocalData.data=new a.user1.utils.LocalStorage()}else{a.user1.utils.LocalData.data=localStorage}a.user1.utils.LocalData.write=function(c,e,d){a.user1.utils.LocalData.data.setItem(c+e,d)};a.user1.utils.LocalData.read=function(c,e){var d=a.user1.utils.LocalData.data.getItem(c+e);return d==null?null:d};a.user1.utils.LocalData.remove=function(c,e){var d=a.user1.utils.LocalData.data.getItem(c+e);if(d!=null){this.data.removeItem(c+e)}};a.user1.orbiter.Messages=new Object();a.user1.orbiter.Messages.CLIENT_HEARTBEAT="CLIENT_HEARTBEAT";a.user1.orbiter.ReceiveMessageBroadcastType=new Object();a.user1.orbiter.ReceiveMessageBroadcastType.TO_SERVER="0";a.user1.orbiter.ReceiveMessageBroadcastType.TO_ROOMS="1";a.user1.orbiter.ReceiveMessageBroadcastType.TO_CLIENTS="2";a.user1.orbiter.RoomIDParser=new Object();a.user1.orbiter.RoomIDParser.getSimpleRoomID=function(c){if(c.indexOf(".")==-1){return c}else{return c.slice(c.lastIndexOf(".")+1)}};a.user1.orbiter.RoomIDParser.getQualifier=function(c){if(c.indexOf(".")==-1){return""}else{return c.slice(0,c.lastIndexOf("."))}};a.user1.orbiter.RoomIDParser.splitID=function(c){return[getQualifier(c),getSimpleRoomID(c)]};a.user1.utils.UDictionary=function(){};a.user1.orbiter.Tokens=new Object();a.user1.orbiter.Tokens.RS="|";a.user1.orbiter.Tokens.WILDCARD="*";a.user1.orbiter.Tokens.GLOBAL_ATTR="";a.user1.orbiter.Tokens.CUSTOM_CLASS_ATTR="_CLASS";a.user1.orbiter.Tokens.MAX_CLIENTS_ATTR="_MAX_CLIENTS";a.user1.orbiter.Tokens.REMOVE_ON_EMPTY_ATTR="_DIE_ON_EMPTY";a.user1.orbiter.Tokens.PASSWORD_ATTR="_PASSWORD";a.user1.orbiter.Tokens.ROLES_ATTR="_ROLES";a.user1.orbiter.System=function(c){this.window=c;this.clientType=a.user1.orbiter.Product.clientType;this.clientVersion=a.user1.orbiter.Product.clientVersion;this.upcVersion=a.user1.orbiter.Product.upcVersion};a.user1.orbiter.System.prototype.getClientType=function(){return this.clientType};a.user1.orbiter.System.prototype.getClientVersion=function(){return this.clientVersion};a.user1.orbiter.System.prototype.getUPCVersion=function(){return this.upcVersion};a.user1.orbiter.System.prototype.isJavaScriptCompatible=function(){if(this.window==null&&typeof XMLHttpRequest!="undefined"){return true}if(this.window!=null){if(typeof XMLHttpRequest!="undefined"&&typeof new XMLHttpRequest().withCredentials!="undefined"){return true}if(typeof XDomainRequest!="undefined"&&this.window.location.protocol!="file:"){return true}if(this.window.postMessage!=null){return true}}return false};a.user1.orbiter.System.prototype.hasHTTPDirectConnection=function(){if((typeof XMLHttpRequest!="undefined"&&typeof new XMLHttpRequest().withCredentials!="undefined")||(typeof XDomainRequest!="undefined"&&this.window!=null&&this.window.location.protocol!="file:")||(this.window==null&&typeof XMLHttpRequest!="undefined")){return true}else{return false}};a.user1.orbiter.System.prototype.hasWebSocket=function(){return(typeof WebSocket!=="undefined"||typeof MozWebSocket!=="undefined")};a.user1.orbiter.System.prototype.toString=function(){return"[object System]"};a.user1.utils.NumericFormatter=new Object();a.user1.utils.NumericFormatter.dateToLocalHrMinSec=function(c){var d=a.user1.utils.NumericFormatter.addLeadingZero(c.getHours())+":"+a.user1.utils.NumericFormatter.addLeadingZero(c.getMinutes())+":"+a.user1.utils.NumericFormatter.addLeadingZero(c.getSeconds());return d};a.user1.utils.NumericFormatter.dateToLocalHrMinSecMs=function(c){return a.user1.utils.NumericFormatter.dateToLocalHrMinSec(c)+"."+a.user1.utils.NumericFormatter.addTrailingZeros(c.getMilliseconds())};a.user1.utils.NumericFormatter.addLeadingZero=function(c){return((c>9)?"":"0")+c};a.user1.utils.NumericFormatter.addTrailingZeros=function(d){var c=d.toString();if(c.length==1){return c+"00"}else{if(c.length==2){return c+"0"}else{return c}}};a.user1.utils.NumericFormatter.msToElapsedDayHrMinSec=function(d){var h=Math.floor(d/1000);var e=Math.floor(h/60);h=h%60;var g=a.user1.utils.NumericFormatter.addLeadingZero(h);var f=Math.floor(e/60);e=e%60;g=a.user1.utils.NumericFormatter.addLeadingZero(e)+":"+g;var c=Math.floor(f/24);f=f%24;g=a.user1.utils.NumericFormatter.addLeadingZero(f)+":"+g;if(c>0){g=c+"d "+g}return g};a.user1.events.EventListener=function(e,c,d){this.listener=e;this.thisArg=c;this.priority=d};a.user1.events.EventListener.prototype.getListenerFunction=function(){return this.listener};a.user1.events.EventListener.prototype.getThisArg=function(){return this.thisArg};a.user1.events.EventListener.prototype.getPriority=function(){return this.priority};a.user1.events.EventListener.prototype.toString=function(){return"[object EventListener]"};a.user1.events.EventDispatcher=function(c){this.listeners=new Object();if(typeof c!=="undefined"){this.target=c}else{this.target=this}};a.user1.events.EventDispatcher.prototype.addEventListener=function(h,c,k,l){if(typeof this.listeners[h]==="undefined"){this.listeners[h]=new Array()}var g=this.listeners[h];if(this.hasListener(h,c,k)){return false}l=l||0;var d=new a.user1.events.EventListener(c,k,l);var j=false;var f;for(var e=g.length;--e>=0;){f=g[e];if(l<=f.getPriority()){g.splice(e+1,0,d);j=true;break}}if(!j){g.unshift(d)}return true};a.user1.events.EventDispatcher.prototype.removeEventListener=function(g,h,e){var c=this.listeners[g];if(typeof c==="undefined"){return false}var d=false;for(var f=0;f<c.length;f++){if(c[f].getListenerFunction()===h&&c[f].getThisArg()===e){d=true;c.splice(f,1);break}}if(c.length==0){delete this.listeners[g]}return d};a.user1.events.EventDispatcher.prototype.hasListener=function(f,g,d){var c=this.listeners[f];if(typeof c==="undefined"){return false}for(var e=0;e<c.length;e++){if(c[e].getListenerFunction()===g&&c[e].getThisArg()===d){return true}}return false};a.user1.events.EventDispatcher.prototype.getListeners=function(c){return this.listeners[c]};a.user1.events.EventDispatcher.prototype.dispatchEvent=function(f){var c=this.listeners[f.type];if(typeof c==="undefined"){return}if(typeof f.type==="undefined"){throw new Error("Event dispatch failed. No event name specified by "+f)}f.target=this.target;var d=c.length;for(var e=0;e<d;e++){c[e].getListenerFunction().apply(c[e].getThisArg(),[f])}};a.user1.events.EventDispatcher.prototype.toString=function(){return"[object EventDispatcher]"};a.user1.events.Event=function(c){if(c!==undefined){this.type=c}else{throw new Error("Event creation failed. No type specified. Event: "+this)}this.target=null};a.user1.events.Event.prototype.toString=function(){return"[object Event]"};a.user1.logger.ConsoleLogger=function(d){this.log=d;this.log.addEventListener(a.user1.logger.LogEvent.UPDATE,this.updateListener,this);var e=this.log.getHistory();for(var c=0;c<e.length;c++){this.out(e[c])}};a.user1.logger.ConsoleLogger.prototype.updateListener=function(f){var c=f.getTimeStamp();var g=f.getLevel();var d=(g==a.user1.logger.Logger.INFO||g==a.user1.logger.Logger.WARN)?" ":"";this.out(c+(c==""?"":" ")+f.getLevel()+": "+d+f.getMessage())};a.user1.logger.ConsoleLogger.prototype.out=function(c){if(typeof console==="undefined"||typeof console.log==="undefined"){return}console.log(c)};a.user1.logger.ConsoleLogger.prototype.dispose=function(){this.log.removeEventListener(a.user1.logger.LogEvent.UPDATE,this.updateListener,this);this.log=log=null};a.user1.logger.LogEvent=function(d,e,f,c){a.user1.events.Event.call(this,d);this.message=e;this.level=f;this.timeStamp=c};a.user1.utils.extend(a.user1.logger.LogEvent,a.user1.events.Event);a.user1.logger.LogEvent.UPDATE="UPDATE";a.user1.logger.LogEvent.LEVEL_CHANGE="LEVEL_CHANGE";a.user1.logger.LogEvent.prototype.getMessage=function(){return this.message};a.user1.logger.LogEvent.prototype.getLevel=function(){return this.level};a.user1.logger.LogEvent.prototype.getTimeStamp=function(){return this.timeStamp};a.user1.logger.LogEvent.prototype.toString=function(){return"[object LogEvent]"};a.user1.logger.Logger=function(c){a.user1.events.EventDispatcher.call(this);this.suppressionTerms=new Array();this.timeStampEnabled=false;this.logLevel=0;this.messages=new Array();this.historyLength=0;this.setHistoryLength(c==null?100:c);this.enableTimeStamp();this.setLevel(a.user1.logger.Logger.INFO)};a.user1.utils.extend(a.user1.logger.Logger,a.user1.events.EventDispatcher);a.user1.logger.Logger.FATAL="FATAL";a.user1.logger.Logger.ERROR="ERROR";a.user1.logger.Logger.WARN="WARN";a.user1.logger.Logger.INFO="INFO";a.user1.logger.Logger.DEBUG="DEBUG";a.user1.logger.Logger.logLevels=new Array(a.user1.logger.Logger.FATAL,a.user1.logger.Logger.ERROR,a.user1.logger.Logger.WARN,a.user1.logger.Logger.INFO,a.user1.logger.Logger.DEBUG);a.user1.logger.Logger.prototype.setLevel=function(d){if(d!==undefined){for(var c=0;c<a.user1.logger.Logger.logLevels.length;c++){if(a.user1.logger.Logger.logLevels[c].toLowerCase()==d.toLowerCase()){this.logLevel=c;this.dispatchEvent(new a.user1.logger.LogEvent(a.user1.logger.LogEvent.LEVEL_CHANGE,null,d));return}}}this.warn("Invalid log level specified: "+d)};a.user1.logger.Logger.prototype.getLevel=function(){return a.user1.logger.Logger.logLevels[this.logLevel]};a.user1.logger.Logger.prototype.fatal=function(c){this.addEntry(0,a.user1.logger.Logger.FATAL,c)};a.user1.logger.Logger.prototype.error=function(c){this.addEntry(1,a.user1.logger.Logger.ERROR,c)};a.user1.logger.Logger.prototype.warn=function(c){this.addEntry(2,a.user1.logger.Logger.WARN,c)};a.user1.logger.Logger.prototype.info=function(c){this.addEntry(3,a.user1.logger.Logger.INFO,c)};a.user1.logger.Logger.prototype.debug=function(c){this.addEntry(4,a.user1.logger.Logger.DEBUG,c)};a.user1.logger.Logger.prototype.addSuppressionTerm=function(c){this.debug("Added suppression term. Log messages containing '"+c+"' will now be ignored.");this.suppressionTerms.push(c)};a.user1.logger.Logger.prototype.removeSuppressionTerm=function(c){var d=a.user1.utils.ArrayUtil.indexOf(this.suppressionTerms,c);if(d!=-1){this.suppressionTerms.splice(d,1);this.debug("Removed suppression term. Log messages containing '"+c+"' will now be shown.");return true}return false};a.user1.logger.Logger.prototype.addEntry=function(k,c,j){var d="";var h;if(this.logLevel<k){return}for(var f=this.suppressionTerms.length;--f>=0;){if(j.indexOf(this.suppressionTerms[f])!=-1){return}}if(this.timeStampEnabled){h=new Date();d=h.getMonth()+1+"/"+String(h.getDate())+"/"+String(h.getFullYear()).substr(2)+" "+a.user1.utils.NumericFormatter.dateToLocalHrMinSecMs(h)+" UTC"+(h.getTimezoneOffset()>=0?"-":"+")+Math.abs(h.getTimezoneOffset()/60)}this.addToHistory(c,j,d);var g=new a.user1.logger.LogEvent(a.user1.logger.LogEvent.UPDATE,j,c,d);this.dispatchEvent(g)};a.user1.logger.Logger.prototype.setHistoryLength=function(c){this.historyLength=c;if(this.messages.length>this.historyLength){this.messages.splice(this.historyLength)}};a.user1.logger.Logger.prototype.getHistoryLength=function(){return this.historyLength};a.user1.logger.Logger.prototype.addToHistory=function(e,d,c){this.messages.push(c+(c==""?"":" ")+e+": "+d);if(this.messages.length>this.historyLength){this.messages.shift()}};a.user1.logger.Logger.prototype.getHistory=function(){return this.messages.slice(0)};a.user1.logger.Logger.prototype.enableTimeStamp=function(){this.timeStampEnabled=true};a.user1.logger.Logger.prototype.disableTimeStamp=function(){this.timeStampEnabled=false};a.user1.logger.Logger.prototype.toString=function(){return"[object Logger]"};a.user1.orbiter.ConnectionManagerEvent=function(e,d,c){a.user1.events.Event.call(this,e);this.connection=d;this.status=c};a.user1.utils.extend(a.user1.orbiter.ConnectionManagerEvent,a.user1.events.Event);a.user1.orbiter.ConnectionManagerEvent.BEGIN_CONNECT="BEGIN_CONNECT";a.user1.orbiter.ConnectionManagerEvent.SELECT_CONNECTION="SELECT_CONNECTION";a.user1.orbiter.ConnectionManagerEvent.READY="READY";a.user1.orbiter.ConnectionManagerEvent.CONNECT_FAILURE="CONNECT_FAILURE";a.user1.orbiter.ConnectionManagerEvent.CLIENT_KILL_CONNECT="CLIENT_KILL_CONNECT";a.user1.orbiter.ConnectionManagerEvent.SERVER_KILL_CONNECT="SERVER_KILL_CONNECT";a.user1.orbiter.ConnectionManagerEvent.DISCONNECT="DISCONNECT";a.user1.orbiter.ConnectionManagerEvent.prototype.getConnection=function(){return this.connection};a.user1.orbiter.ConnectionManagerEvent.prototype.getStatus=function(){return this.status};a.user1.orbiter.ConnectionManagerEvent.prototype.toString=function(){return"[object ConnectionManagerEvent]"};a.user1.orbiter.ConnectionManager=function(c){a.user1.events.EventDispatcher.call(this);this.orbiter=c;this.connectAttemptCount=0;this.connectAbortCount=0;this.readyCount=0;this.connectFailedCount=0;this.connectionState=a.user1.orbiter.ConnectionState.NOT_CONNECTED;this.readyTimeout=0;this.connections=new Array();this.activeConnection=null;this.inProgressConnection=null;this.currentConnectionIndex=0;this.attemptedConnections=null;this.setReadyTimeout(a.user1.orbiter.ConnectionManager.DEFAULT_READY_TIMEOUT);this.setGlobalAffinity(true)};a.user1.utils.extend(a.user1.orbiter.ConnectionManager,a.user1.events.EventDispatcher);a.user1.orbiter.ConnectionManager.DEFAULT_READY_TIMEOUT=10000;a.user1.orbiter.ConnectionManager.prototype.connect=function(){if(this.connections.length==0){this.orbiter.getLog().error("[CONNECTION_MANAGER] No connections defined. Connection request ignored.");return}this.connectAttemptCount++;this.attemptedConnections=new Array();switch(this.connectionState){case a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS:this.orbiter.getLog().info("[CONNECTION_MANAGER] Connection attempt already in progress. Existing attempt must be aborted before new connection attempt begins...");this.disconnect();break;case a.user1.orbiter.ConnectionState.READY:this.orbiter.getLog().info("[CONNECTION_MANAGER] Existing connection to Union must be disconnected before new connection attempt begins.");this.disconnect();break}this.connectionState=a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS;this.orbiter.getLog().debug("[CONNECTION_MANAGER] Searching for most recent valid connection.");var c=this.currentConnectionIndex;while(!this.getCurrentConnection().isValid()){this.advance();if(this.currentConnectionIndex==c){this.orbiter.getLog().debug("[CONNECTION_MANAGER] No valid connection found. Starting connection attempt with first connection.");this.currentConnectionIndex=0;break}}this.dispatchBeginConnect();this.connectCurrentConnection()};a.user1.orbiter.ConnectionManager.prototype.disconnect=function(){if(this.connections.length==0){this.dispatchConnectFailure("No connections defined. Disconnection attempt failed.");return}switch(this.connectionState){case a.user1.orbiter.ConnectionState.READY:this.orbiter.getLog().info("[CONNECTION_MANAGER] Closing existing connection: "+this.getActiveConnection().toString());this.connectionState=a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS;this.disconnectConnection(this.getActiveConnection());break;case a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS:this.orbiter.getLog().info("[CONNECTION_MANAGER] Aborting existing connection attempt: "+this.getInProgressConnection().toString());this.connectAbortCount++;this.connectionState=a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS;this.disconnectConnection(this.getInProgressConnection());this.orbiter.getLog().info("[CONNECTION_MANAGER] Connection abort complete.");break;case a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS:this.orbiter.getLog().info("[CONNECTION_MANAGER] Disconnection request ignored. Already disconnecting.");break}};a.user1.orbiter.ConnectionManager.prototype.disconnectConnection=function(c){c.disconnect()};a.user1.orbiter.ConnectionManager.prototype.connectCurrentConnection=function(){if(this.connections.length==0){this.connectionState=a.user1.orbiter.ConnectionState.NOT_CONNECTED;this.connectFailedCount++;this.dispatchConnectFailure("No connections defined. Connection attempt failed.");return}this.inProgressConnection=this.getCurrentConnection();if(a.user1.utils.ArrayUtil.indexOf(this.attemptedConnections,this.inProgressConnection)!=-1){this.advanceAndConnect();return}this.dispatchSelectConnection(this.inProgressConnection);this.orbiter.getLog().info("[CONNECTION_MANAGER] Attempting connection via "+this.inProgressConnection.toString()+". (Connection "+(this.attemptedConnections.length+1)+" of "+this.connections.length+". Attempt "+this.connectAttemptCount+" since last successful connection).");this.addConnectionListeners(this.inProgressConnection);this.inProgressConnection.connect()};a.user1.orbiter.ConnectionManager.prototype.advanceAndConnect=function(){if(!this.connectAttemptComplete()){this.advance();this.connectCurrentConnection()}else{this.connectFailedCount++;this.connectionState=a.user1.orbiter.ConnectionState.NOT_CONNECTED;this.orbiter.getLog().info("[CONNECTION_MANAGER] Connection failed for all specified hosts and ports.");this.dispatchConnectFailure("Connection failed for all specified hosts and ports.")}};a.user1.orbiter.ConnectionManager.prototype.connectAttemptComplete=function(){return this.attemptedConnections.length==this.connections.length};a.user1.orbiter.ConnectionManager.prototype.advance=function(){this.currentConnectionIndex++;if(this.currentConnectionIndex==this.connections.length){this.currentConnectionIndex=0}};a.user1.orbiter.ConnectionManager.prototype.addConnection=function(c){if(c!=null){this.orbiter.getLog().info("[CONNECTION_MANAGER] New connection added. "+c.toString()+".");c.setOrbiter(this.orbiter);this.connections.push(c)}};a.user1.orbiter.ConnectionManager.prototype.removeConnection=function(c){if(c!=null){c.disconnect();this.removeConnectionListeners(c);return a.user1.utils.ArrayUtil.remove(this.connections,c)}else{return false}};a.user1.orbiter.ConnectionManager.prototype.removeAllConnections=function(){if(this.connections.length==0){this.orbiter.getLog().info("[CONNECTION_MANAGER] removeAllConnections() ignored.  No connections to remove.");return}this.orbiter.getLog().info("[CONNECTION_MANAGER] Removing all connections...");this.disconnect();while(this.connections.length>0){this.removeConnection(this.connections[0])}this.currentConnectionIndex=0;this.orbiter.getLog().info("[CONNECTION_MANAGER] All connections removed.")};a.user1.orbiter.ConnectionManager.prototype.getActiveConnection=function(){return this.activeConnection};a.user1.orbiter.ConnectionManager.prototype.getInProgressConnection=function(){return this.inProgressConnection};a.user1.orbiter.ConnectionManager.prototype.getConnections=function(){return this.connections.slice()};a.user1.orbiter.ConnectionManager.prototype.getCurrentConnection=function(){return this.connections[this.currentConnectionIndex]};a.user1.orbiter.ConnectionManager.prototype.addConnectionListeners=function(c){if(c!=null){c.addEventListener(a.user1.orbiter.ConnectionEvent.READY,this.readyListener,this);c.addEventListener(a.user1.orbiter.ConnectionEvent.CONNECT_FAILURE,this.connectFailureListener,this);c.addEventListener(a.user1.orbiter.ConnectionEvent.DISCONNECT,this.disconnectListener,this);c.addEventListener(a.user1.orbiter.ConnectionEvent.CLIENT_KILL_CONNECT,this.clientKillConnectListener,this);c.addEventListener(a.user1.orbiter.ConnectionEvent.SERVER_KILL_CONNECT,this.serverKillConnectListener,this)}};a.user1.orbiter.ConnectionManager.prototype.removeConnectionListeners=function(c){if(c!=null){c.removeEventListener(a.user1.orbiter.ConnectionEvent.READY,this.readyListener,this);c.removeEventListener(a.user1.orbiter.ConnectionEvent.CONNECT_FAILURE,this.connectFailureListener,this);c.removeEventListener(a.user1.orbiter.ConnectionEvent.DISCONNECT,this.disconnectListener,this);c.removeEventListener(a.user1.orbiter.ConnectionEvent.CLIENT_KILL_CONNECT,this.clientKillConnectListener,this);c.removeEventListener(a.user1.orbiter.ConnectionEvent.SERVER_KILL_CONNECT,this.serverKillConnectListener,this)}};a.user1.orbiter.ConnectionManager.prototype.isReady=function(){return this.connectionState==a.user1.orbiter.ConnectionState.READY};a.user1.orbiter.ConnectionManager.prototype.getConnectionState=function(){return this.connectionState};a.user1.orbiter.ConnectionManager.prototype.getReadyCount=function(){return this.readyCount};a.user1.orbiter.ConnectionManager.prototype.getConnectFailedCount=function(){return this.connectFailedCount};a.user1.orbiter.ConnectionManager.prototype.getConnectAttemptCount=function(){return this.connectAttemptCount};a.user1.orbiter.ConnectionManager.prototype.getConnectAbortCount=function(){return this.connectAbortCount};a.user1.orbiter.ConnectionManager.prototype.readyListener=function(c){this.connectionState=a.user1.orbiter.ConnectionState.READY;this.inProgressConnection=null;this.activeConnection=c.target;this.readyCount++;this.connectFailedCount=0;this.connectAttemptCount=0;this.connectAbortCount=0;this.dispatchReady()};a.user1.orbiter.ConnectionManager.prototype.connectFailureListener=function(d){var c=d.target;this.orbiter.getLog().warn("[CONNECTION_MANAGER] Connection failed for "+c.toString()+". Status: ["+d.getStatus()+"]");this.removeConnectionListeners(c);this.inProgressConnection=null;if(this.connectionState==a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS){this.dispatchConnectFailure("Connection closed by client.")}else{if(c.getHost()!=c.getRequestedHost()){this.orbiter.getLog().info("[CONNECTION_MANAGER] Connection failed for affinity address ["+c.getHost()+"]. Removing affinity.");this.clearAffinity(c.getRequestedHost())}this.attemptedConnections.push(c);this.advanceAndConnect()}};a.user1.orbiter.ConnectionManager.prototype.disconnectListener=function(c){this.connectionState=a.user1.orbiter.ConnectionState.NOT_CONNECTED;this.removeConnectionListeners(c.target);this.activeConnection=null;this.dispatchDisconnect(c.target)};a.user1.orbiter.ConnectionManager.prototype.clientKillConnectListener=function(c){this.dispatchClientKillConnect(c.target)};a.user1.orbiter.ConnectionManager.prototype.serverKillConnectListener=function(c){this.dispatchServerKillConnect(c.target)};a.user1.orbiter.ConnectionManager.prototype.setReadyTimeout=function(c){if(c>0){this.readyTimeout=c;this.orbiter.getLog().info("[CONNECTION_MANAGER] Ready timeout set to "+c+" ms.");if(c<3000){this.orbiter.getLog().warn("[CONNECTION_MANAGER] Current ready timeout ("+c+") may not allow sufficient time to connect to Union Server over a typical internet connection.")}}else{this.orbiter.getLog().warn("[CONNECTION_MANAGER] Invalid ready timeout specified: "+c+". Duration must be greater than zero.")}};a.user1.orbiter.ConnectionManager.prototype.getReadyTimeout=function(){return this.readyTimeout};a.user1.orbiter.ConnectionManager.prototype.getAffinity=function(e){var c=this.affinityData.read("affinity",e+"address");var f=parseFloat(this.affinityData.read("affinity",e+"until"));if(c!=null){var d=new Date().getTime();if(d>=f){this.orbiter.getLog().warn("[CONNECTION_MANAGER] Affinity duration expired for address ["+c+"], host ["+e+"]. Removing affinity.");this.clearAffinity(e)}else{return c}}return e};a.user1.orbiter.ConnectionManager.prototype.setAffinity=function(d,c,e){var f=new Date().getTime()+(e*60*1000);this.affinityData.write("affinity",d+"address",c);this.affinityData.write("affinity",d+"until",f);this.orbiter.getLog().info("[CONNECTION_MANAGER] Assigning affinity address ["+c+"] for supplied host ["+d+"]. Duration (minutes): "+e)};a.user1.orbiter.ConnectionManager.prototype.clearAffinity=function(c){this.affinityData.remove("affinity",c+"address");this.affinityData.remove("affinity",c+"until")};a.user1.orbiter.ConnectionManager.prototype.setGlobalAffinity=function(c){if(c){this.orbiter.getLog().info("[CONNECTION_MANAGER] Global server affinity selected. Using current environment's shared server affinity.");this.affinityData=a.user1.utils.LocalData}else{this.orbiter.getLog().info("[CONNECTION_MANAGER] Local server affinity selected. The current client will maintain its own, individual server affinity.");this.affinityData=new a.user1.utils.MemoryStore()}};a.user1.orbiter.ConnectionManager.prototype.dispatchBeginConnect=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionManagerEvent(a.user1.orbiter.ConnectionManagerEvent.BEGIN_CONNECT))};a.user1.orbiter.ConnectionManager.prototype.dispatchSelectConnection=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionManagerEvent(a.user1.orbiter.ConnectionManagerEvent.SELECT_CONNECTION,c))};a.user1.orbiter.ConnectionManager.prototype.dispatchConnectFailure=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionManagerEvent(a.user1.orbiter.ConnectionManagerEvent.CONNECT_FAILURE,null,c))};a.user1.orbiter.ConnectionManager.prototype.dispatchDisconnect=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionManagerEvent(a.user1.orbiter.ConnectionManagerEvent.DISCONNECT,c))};a.user1.orbiter.ConnectionManager.prototype.dispatchServerKillConnect=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionManagerEvent(a.user1.orbiter.ConnectionManagerEvent.SERVER_KILL_CONNECT,c))};a.user1.orbiter.ConnectionManager.prototype.dispatchClientKillConnect=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionManagerEvent(a.user1.orbiter.ConnectionManagerEvent.CLIENT_KILL_CONNECT,c))};a.user1.orbiter.ConnectionManager.prototype.dispatchReady=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionManagerEvent(a.user1.orbiter.ConnectionManagerEvent.READY))};a.user1.orbiter.ConnectionManager.prototype.dispose=function(){this.removeAllConnections();this.attemptedConnections=null;this.activeConnection=null;this.inProgressConnection=null;this.connections=null};a.user1.orbiter.ConnectionMonitor=function(c){this.connectionTimeout=0;this.heartbeatIntervalID=-1;this.heartbeatCounter=0;this.heartbeatEnabled=true;this.heartbeats=new a.user1.utils.UDictionary();this.oldestHeartbeat=0;this.heartBeatFrequency=-1;this.sharedPing=false;this.autoReconnectFrequency=-1;this.autoReconnectTimeoutID=-1;this.autoReconnectAttemptLimit=-1;this.orbiter=c;this.msgManager=c.getMessageManager();this.log=c.getLog();this.disposed=false;this.orbiter.addEventListener(a.user1.orbiter.OrbiterEvent.READY,this.connectReadyListener,this);this.orbiter.addEventListener(a.user1.orbiter.OrbiterEvent.CLOSE,this.connectCloseListener,this);this.disableHeartbeatLogging()};a.user1.orbiter.ConnectionMonitor.DEFAULT_HEARTBEAT_FREQUENCY=10000;a.user1.orbiter.ConnectionMonitor.MIN_HEARTBEAT_FREQUENCY=20;a.user1.orbiter.ConnectionMonitor.DEFAULT_AUTORECONNECT_FREQUENCY=-1;a.user1.orbiter.ConnectionMonitor.DEFAULT_AUTORECONNECT_ATTEMPT_LIMIT=-1;a.user1.orbiter.ConnectionMonitor.DEFAULT_CONNECTION_TIMEOUT=60000;a.user1.orbiter.ConnectionMonitor.prototype.connectReadyListener=function(c){this.msgManager.addMessageListener(a.user1.orbiter.Messages.CLIENT_HEARTBEAT,this.heartbeatMessageListener,this);this.startHeartbeat();this.stopReconnect()};a.user1.orbiter.ConnectionMonitor.prototype.connectCloseListener=function(d){this.stopHeartbeat();if(this.autoReconnectFrequency>-1){if(this.autoReconnectTimeoutID!=-1){return}else{var c=this;setTimeout(function(){if(!c.disposed){c.log.warn("[CONNECTION_MONITOR] Disconnection detected.");c.doReconnect()}},1)}}};a.user1.orbiter.ConnectionMonitor.prototype.enableHeartbeat=function(){this.log.info("[CONNECTION_MONITOR] Heartbeat enabled.");this.heartbeatEnabled=true;this.startHeartbeat()};a.user1.orbiter.ConnectionMonitor.prototype.disableHeartbeat=function(){this.log.info("[CONNECTION_MONITOR] Heartbeat disabled.");this.heartbeatEnabled=false;this.stopHeartbeat()};a.user1.orbiter.ConnectionMonitor.prototype.startHeartbeat=function(){if(!this.heartbeatEnabled){this.log.info("[CONNECTION_MONITOR] Heartbeat is currently disabled. Ignoring start request.");return}this.stopHeartbeat();this.heartbeats=new a.user1.utils.UDictionary();var c=this;var d=this.heartbeatTimerListener;this.heartbeatIntervalID=setInterval(function(){d.call(c)},this.heartBeatFrequency)};a.user1.orbiter.ConnectionMonitor.prototype.stopHeartbeat=function(){clearInterval(this.heartbeatIntervalID);this.heartbeats=null};a.user1.orbiter.ConnectionMonitor.prototype.heartbeatTimerListener=function(){if(!this.orbiter.isReady()){this.log.info("[CONNECTION_MONITOR] Orbiter is not connected. Stopping heartbeat.");this.stopHeartbeat();return}var c;var d=new Date().getTime();this.heartbeats[this.heartbeatCounter]=d;this.orbiter.getMessageManager().sendUPC("u2",a.user1.orbiter.Messages.CLIENT_HEARTBEAT,this.orbiter.getClientID(),"",this.heartbeatCounter);this.heartbeatCounter++;if(a.user1.utils.ObjectUtil.length(this.heartbeats)==1){this.oldestHeartbeat=d}else{this.oldestHeartbeat=Number.MAX_VALUE;for(var e in this.heartbeats){if(this.heartbeats[e]<this.oldestHeartbeat){this.oldestHeartbeat=this.heartbeats[e]}}}c=d-this.oldestHeartbeat;if(c>this.connectionTimeout){this.log.warn("[CONNECTION_MONITOR] No response from server in "+c+"ms. Starting automatic disconnect.");this.orbiter.disconnect()}};a.user1.orbiter.ConnectionMonitor.prototype.heartbeatMessageListener=function(c,e){var d=new Date().getTime()-this.heartbeats[parseInt(e)];if(typeof this.orbiter.self().setAttribute==="undefined"){this.orbiter.self().ping=d;this.orbiter.getMessageManager().sendUPC("u3",this.orbiter.getClientID(),"","_PING",d.toString(),"",this.sharedPing?"4":"0")}else{this.orbiter.self().setAttribute("_PING",d.toString(),null,this.sharedPing)}delete this.heartbeats[parseInt(e)]};a.user1.orbiter.ConnectionMonitor.prototype.reconnectTimerListener=function(c){this.stopReconnect();if(this.orbiter.getConnectionManager().connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED){this.doReconnect()}};a.user1.orbiter.ConnectionMonitor.prototype.stopReconnect=function(){clearTimeout(this.autoReconnectTimeoutID);this.autoReconnectTimeoutID=-1};a.user1.orbiter.ConnectionMonitor.prototype.doReconnect=function(){var d=this.orbiter.getConnectionManager().getConnectAttemptCount();if(this.autoReconnectAttemptLimit!=-1&&d>0&&d%(this.autoReconnectAttemptLimit+1)==0){this.log.warn("[CONNECTION_MONITOR] Automatic reconnect attempt limit reached. No further automatic connection attempts will be made until the next manual connection attempt.");return}this.stopReconnect();this.log.warn("[CONNECTION_MONITOR] Attempting automatic reconnect. (Next attempt in "+this.autoReconnectFrequency+"ms.)");var c=this;var e=this.reconnectTimerListener;this.autoReconnectTimeoutID=setTimeout(function(){c.autoReconnectTimeoutID=-1;e.call(c)},this.autoReconnectFrequency);this.orbiter.connect()};a.user1.orbiter.ConnectionMonitor.prototype.restoreDefaults=function(){this.setAutoReconnectFrequency(a.user1.orbiter.ConnectionMonitor.DEFAULT_AUTORECONNECT_FREQUENCY);this.setAutoReconnectAttemptLimit(a.user1.orbiter.ConnectionMonitor.DEFAULT_AUTORECONNECT_ATTEMPT_LIMIT);this.setConnectionTimeout(a.user1.orbiter.ConnectionMonitor.DEFAULT_CONNECTION_TIMEOUT);this.setHeartbeatFrequency(a.user1.orbiter.ConnectionMonitor.DEFAULT_HEARTBEAT_FREQUENCY)};a.user1.orbiter.ConnectionMonitor.prototype.setHeartbeatFrequency=function(c){if(c>=a.user1.orbiter.ConnectionMonitor.MIN_HEARTBEAT_FREQUENCY){this.heartBeatFrequency=c;this.log.info("[CONNECTION_MONITOR] Heartbeat frequency set to "+c+" ms.");if(c>=a.user1.orbiter.ConnectionMonitor.MIN_HEARTBEAT_FREQUENCY&&c<1000){this.log.info("[CONNECTION_MONITOR] HEARTBEAT FREQUENCY WARNING: "+c+" ms. Current frequency will generate "+(Math.floor((1000/c)*10)/10)+" messages per second per connected client.")}if(this.orbiter.isReady()){this.startHeartbeat()}}else{this.log.warn("[CONNECTION_MONITOR] Invalid heartbeat frequency specified: "+c+". Frequency must be "+a.user1.orbiter.ConnectionMonitor.MIN_HEARTBEAT_FREQUENCY+" or greater.")}};a.user1.orbiter.ConnectionMonitor.prototype.getHeartbeatFrequency=function(){return this.heartBeatFrequency};a.user1.orbiter.ConnectionMonitor.prototype.setAutoReconnectFrequency=function(c){if(c==-1){this.autoReconnectFrequency=c;this.stopReconnect()}else{if(c>-1){this.autoReconnectFrequency=c;this.log.info("[CONNECTION_MONITOR] Auto-reconnect frequency set to "+c+" ms.");if(c<1000){this.log.info("[CONNECTION_MONITOR] RECONNECT FREQUENCY WARNING: "+c+" ms. Current frequency will cause "+(c==0?"1000":(Math.floor((1000/c)*10)/10))+" reconnection attempts per second.")}}else{this.log.warn("[CONNECTION_MONITOR] Invalid reconnect frequency specified: "+c+". Frequency must -1 or greater.")}}};a.user1.orbiter.ConnectionMonitor.prototype.getAutoReconnectFrequency=function(){return this.autoReconnectFrequency};a.user1.orbiter.ConnectionMonitor.prototype.setAutoReconnectAttemptLimit=function(c){if(c<-1||c==0){this.log.warn("[CONNECTION_MONITOR] Invalid Auto-reconnect attempt limit specified: "+c+". Limit must -1 or greater than 1.");return}this.autoReconnectAttemptLimit=c;if(c==-1){this.log.info("[CONNECTION_MONITOR] Auto-reconnect attempt limit set to none.")}else{this.log.info("[CONNECTION_MONITOR] Auto-reconnect attempt limit set to "+c+" attempt(s).")}};a.user1.orbiter.ConnectionMonitor.prototype.getAutoReconnectAttemptLimit=function(){return this.autoReconnectAttemptLimit};a.user1.orbiter.ConnectionMonitor.prototype.setConnectionTimeout=function(c){if(c>0){this.connectionTimeout=c;this.log.info("[CONNECTION_MONITOR] Connection timeout set to "+c+" ms.")}else{this.log.warn("[CONNECTION_MONITOR] Invalid connection timeout specified: "+c+". Frequency must be greater than zero.")}};a.user1.orbiter.ConnectionMonitor.prototype.getConnectionTimeout=function(){return this.connectionTimeout};a.user1.orbiter.ConnectionMonitor.prototype.sharePing=function(c){this.sharedPing=c};a.user1.orbiter.ConnectionMonitor.prototype.isPingShared=function(){return this.sharedPing};a.user1.orbiter.ConnectionMonitor.prototype.disableHeartbeatLogging=function(){this.log.addSuppressionTerm("<A>CLIENT_HEARTBEAT</A>");this.log.addSuppressionTerm("<A>_PING</A>");this.log.addSuppressionTerm("[_PING]");this.log.addSuppressionTerm("<![CDATA[_PING]]>")};a.user1.orbiter.ConnectionMonitor.prototype.enableHeartbeatLogging=function(){this.log.removeSuppressionTerm("<A>CLIENT_HEARTBEAT</A>");this.log.removeSuppressionTerm("<A>_PING</A>");this.log.removeSuppressionTerm("[_PING]");this.log.removeSuppressionTerm("<![CDATA[_PING]]>")};a.user1.orbiter.ConnectionMonitor.prototype.dispose=function(){this.disposed=true;this.stopHeartbeat();this.stopReconnect();this.heartbeats=null;this.orbiter.removeEventListener(a.user1.orbiter.OrbiterEvent.READY,this.connectReadyListener,this);this.orbiter.removeEventListener(a.user1.orbiter.OrbiterEvent.CLOSE,this.connectCloseListener,this);this.orbiter=null;this.msgManager.removeMessageListener("u7",this.u7);this.msgManager(null);this.log=null};a.user1.orbiter.OrbiterEvent=function(e,c,d){a.user1.events.Event.call(this,e);this.serverUPCVersion=c;this.connectionRefusal=d};a.user1.utils.extend(a.user1.orbiter.OrbiterEvent,a.user1.events.Event);a.user1.orbiter.OrbiterEvent.READY="READY";a.user1.orbiter.OrbiterEvent.CLOSE="CLOSE";a.user1.orbiter.OrbiterEvent.PROTOCOL_INCOMPATIBLE="PROTOCOL_INCOMPATIBLE";a.user1.orbiter.OrbiterEvent.CONNECT_REFUSED="CONNECT_REFUSED";a.user1.orbiter.OrbiterEvent.prototype.getServerUPCVersion=function(){return this.serverUPCVersion};a.user1.orbiter.OrbiterEvent.prototype.getConnectionRefusal=function(){return this.connectionRefusal};a.user1.orbiter.OrbiterEvent.prototype.toString=function(){return"[object OrbiterEvent]"};a.user1.orbiter.snapshot.Snapshot=function(){a.user1.events.EventDispatcher.call(this);this.method;this.args=new Array();this.hasStatus;this.statusReceived;this.loaded;this._updateInProgress;this._status;this.onLoad=function(){}};a.user1.utils.extend(a.user1.orbiter.snapshot.Snapshot,a.user1.events.EventDispatcher);a.user1.orbiter.snapshot.Snapshot.prototype.updateInProgress=function(){return this._updateInProgress};a.user1.orbiter.snapshot.Snapshot.prototype.setUpdateInProgress=function(c){this._updateInProgress=c};a.user1.orbiter.snapshot.Snapshot.prototype.dispatchLoaded=function(){this.dispatchEvent(new a.user1.orbiter.snapshot.SnapshotEvent(a.user1.orbiter.snapshot.SnapshotEvent.LOAD,this))};a.user1.orbiter.snapshot.Snapshot.prototype.dispatchStatus=function(){this.dispatchEvent(new a.user1.orbiter.snapshot.SnapshotEvent(a.user1.orbiter.snapshot.SnapshotEvent.STATUS,this))};a.user1.orbiter.snapshot.Snapshot.prototype.getStatus=function(){return this._status};a.user1.orbiter.snapshot.Snapshot.prototype.setStatus=function(c){this._status=c};a.user1.orbiter.snapshot.SnapshotEvent=function(d,c){a.user1.events.Event.call(this,d);this.snapshot=c};a.user1.utils.extend(a.user1.orbiter.snapshot.SnapshotEvent,a.user1.events.Event);a.user1.orbiter.snapshot.SnapshotEvent.LOAD="LOAD";a.user1.orbiter.snapshot.SnapshotEvent.STATUS="STATUS";a.user1.orbiter.snapshot.SnapshotEvent.prototype.toString=function(){return"[object SnapshotEvent]"};a.user1.orbiter.SnapshotManager=function(c){this.messageManager=c;this.pendingSnapshots=new Object();this.requestIDCounter=0};a.user1.orbiter.SnapshotManager.prototype.updateSnapshot=function(c){var d;if(c!=null){if(!c.updateInProgress()){this.requestIDCounter++;c.setUpdateInProgress(true);c.loaded=false;c.statusReceived=false;c.setStatus(null);this.pendingSnapshots[this.requestIDCounter.toString()]=c;d=c.args.slice(0);d.unshift(this.requestIDCounter);d.unshift(c.method);this.messageManager.sendUPC.apply(this.messageManager,d)}}};a.user1.orbiter.SnapshotManager.prototype.receiveSnapshotResult=function(e,c){var d=this.pendingSnapshots[e];if(d==null){throw new Error("[SNAPSHOT_MANAGER] Received snapshot result for unknown request ID: ["+e+"]")}d.setStatus(c);this.setStatusReceived(d,e)};a.user1.orbiter.SnapshotManager.prototype.receiveClientCountSnapshot=function(e,c){var d=this.pendingSnapshots[e];if(d==null){throw new Error("[SNAPSHOT_MANAGER] Received client-count snapshot for unknown request ID: ["+e+"]")}d.setCount(c);this.setLoaded(d,e)};a.user1.orbiter.SnapshotManager.prototype.receiveClientSnapshot=function(e,d){var c=this.pendingSnapshots[e];if(c==null){throw new Error("[SNAPSHOT_MANAGER] Received client snapshot for unknown request ID: ["+e+"]")}c.setManifest(d);this.setLoaded(c,e)};a.user1.orbiter.SnapshotManager.prototype.receiveAccountSnapshot=function(e,d){var c=this.pendingSnapshots[e];if(c==null){throw new Error("[SNAPSHOT_MANAGER] Received account snapshot for unknown request ID: ["+e+"]")}c.setManifest(d);this.setLoaded(c,e)};a.user1.orbiter.SnapshotManager.prototype.receiveRoomListSnapshot=function(g,f,e,d){var c=this.pendingSnapshots[g];if(c==null){throw new Error("[SNAPSHOT_MANAGER] Received roomlist snapshot for unknown request ID: ["+g+"]")}c.setRoomList(f);c.setQualifier(e==""?null:e);c.setRecursive(d);this.setLoaded(c,g)};a.user1.orbiter.SnapshotManager.prototype.receiveRoomSnapshot=function(e,d){var c=this.pendingSnapshots[e];if(c==null){throw new Error("[SNAPSHOT_MANAGER] Received room snapshot for unknown request ID: ["+e+"]")}c.setManifest(d);this.setLoaded(c,e)};a.user1.orbiter.SnapshotManager.prototype.receiveClientListSnapshot=function(d,e){var c=this.pendingSnapshots[d];if(c==null){throw new Error("[SNAPSHOT_MANAGER] Received clientlist snapshot for unknown request ID: ["+d+"]")}c.setClientList(e);this.setLoaded(c,d)};a.user1.orbiter.SnapshotManager.prototype.receiveAccountListSnapshot=function(e,d){var c=this.pendingSnapshots[e];if(c==null){throw new Error("[SNAPSHOT_MANAGER] Received accountlist snapshot for unknown request ID: ["+e+"]")}c.setAccountList(d);this.setLoaded(c,e)};a.user1.orbiter.SnapshotManager.prototype.receiveBannedListSnapshot=function(e,d){var c=this.pendingSnapshots[e];if(c==null){throw new Error("[SNAPSHOT_MANAGER] Received bannedlist snapshot for unknown request ID: ["+e+"]")}c.setBannedList(d);this.setLoaded(c,e)};a.user1.orbiter.SnapshotManager.prototype.receiveServerModuleListSnapshot=function(e,d){var c=this.pendingSnapshots[e];if(c==null){throw new Error("[SNAPSHOT_MANAGER] Received server module list snapshot for unknown request ID: ["+e+"]")}c.setModuleList(d);this.setLoaded(c,e)};a.user1.orbiter.SnapshotManager.prototype.receiveUPCStatsSnapshot=function(h,f,g,c,e){var d=this.pendingSnapshots[h];if(d==null){throw new Error("[SNAPSHOT_MANAGER] Received UPC stats snapshot for unknown request ID: ["+h+"]")}d.setTotalUPCsProcessed(f);d.setNumUPCsInQueue(g);d.setLastQueueWaitTime(c);d.setLongestUPCProcesses(e);this.setLoaded(d,h)};a.user1.orbiter.SnapshotManager.prototype.receiveNodeListSnapshot=function(e,d){var c=this.pendingSnapshots[e];if(c==null){throw new Error("[SNAPSHOT_MANAGER] Received server node list snapshot for unknown request ID: ["+e+"]")}c.setNodeList(d);this.setLoaded(c,e)};a.user1.orbiter.SnapshotManager.prototype.receiveGatewaysSnapshot=function(d,e){var c=this.pendingSnapshots[d];if(c==null){throw new Error("[SNAPSHOT_MANAGER] Received gateways snapshot for unknown request ID: ["+d+"]")}c.setGateways(e);this.setLoaded(c,d)};a.user1.orbiter.SnapshotManager.prototype.setLoaded=function(c,d){c.loaded=true;if(c.hasStatus==false||(c.hasStatus==true&&c.statusReceived)){c.setUpdateInProgress(false);delete this.pendingSnapshots[d]}if(c.hasOwnProperty("onLoad")){c.onLoad()}c.dispatchLoaded()};a.user1.orbiter.SnapshotManager.prototype.setStatusReceived=function(c,d){if(c.loaded){c.setUpdateInProgress(false);delete this.pendingSnapshots[d]}c.dispatchStatus()};a.user1.orbiter.filters.BooleanGroupType=new Object();a.user1.orbiter.filters.BooleanGroupType.AND="AND";a.user1.orbiter.filters.BooleanGroupType.OR="OR";a.user1.orbiter.filters.BooleanGroup=function(c){this.type=c;this.comparisons=new Array()};a.user1.orbiter.filters.BooleanGroup.prototype.addComparison=function(c){if(c==null){return}this.comparisons.push(c)};a.user1.orbiter.filters.BooleanGroup.prototype.toXMLString=function(){var d=type==a.user1.orbiter.filters.BooleanGroupType.AND?"<and>\n":"<or>\n";var e;for(var c=0;c<this.comparisons.length;c++){e=this.comparisons[c];d+=e.toXMLString()+"\n"}d+=this.type==a.user1.orbiter.filters.BooleanGroupType.AND?"</and>":"</or>";return d};a.user1.orbiter.AccountEvent=function(e,c,d,g,f){a.user1.events.Event.call(this,e);this.status=c;this.userID=d;this.clientID=g;this.role=f;this.account=null};a.user1.utils.extend(a.user1.orbiter.AccountEvent,a.user1.events.Event);a.user1.orbiter.AccountEvent.LOGIN_RESULT="LOGIN_RESULT";a.user1.orbiter.AccountEvent.LOGIN="LOGIN";a.user1.orbiter.AccountEvent.LOGOFF_RESULT="LOGOFF_RESULT";a.user1.orbiter.AccountEvent.LOGOFF="LOGOFF";a.user1.orbiter.AccountEvent.CHANGE_PASSWORD_RESULT="CHANGE_PASSWORD_RESULT";a.user1.orbiter.AccountEvent.CHANGE_PASSWORD="CHANGE_PASSWORD";a.user1.orbiter.AccountEvent.OBSERVE="OBSERVE";a.user1.orbiter.AccountEvent.STOP_OBSERVING="STOP_OBSERVING";a.user1.orbiter.AccountEvent.OBSERVE_RESULT="OBSERVE_RESULT";a.user1.orbiter.AccountEvent.STOP_OBSERVING_RESULT="STOP_OBSERVING_RESULT";a.user1.orbiter.AccountEvent.ADD_ROLE_RESULT="ADD_ROLE_RESULT";a.user1.orbiter.AccountEvent.REMOVE_ROLE_RESULT="REMOVE_ROLE_RESULT";a.user1.orbiter.AccountEvent.SYNCHRONIZE="SYNCHRONIZE";a.user1.orbiter.AccountEvent.prototype.getAccount=function(){if(this.target instanceof a.user1.orbiter.AccountManager){return this.account}else{if(this.target instanceof a.user1.orbiter.UserAccount){return this.target}else{throw new Error("[AccountEvent] Unexpected target type: "+this.target)}}};a.user1.orbiter.AccountEvent.prototype.setAccount=function(c){this.account=c};a.user1.orbiter.AccountEvent.prototype.getUserID=function(){return this.userID};a.user1.orbiter.AccountEvent.prototype.getRole=function(){return this.role};a.user1.orbiter.AccountEvent.prototype.getClientID=function(){return this.clientID};a.user1.orbiter.AccountEvent.prototype.getStatus=function(){return this.status};a.user1.orbiter.AccountEvent.prototype.toString=function(){return"[object AccountEvent]"};a.user1.orbiter.snapshot.AccountListSnapshot=function(){a.user1.orbiter.snapshot.Snapshot.call(this);this.accountList=null;this.method=a.user1.orbiter.UPC.GET_ACCOUNTLIST_SNAPSHOT};a.user1.utils.extend(a.user1.orbiter.snapshot.AccountListSnapshot,a.user1.orbiter.snapshot.Snapshot);a.user1.orbiter.snapshot.AccountListSnapshot.prototype.setAccountList=function(c){this.accountList=c};a.user1.orbiter.snapshot.AccountListSnapshot.prototype.getAccountList=function(){if(!this.accountList){return null}return this.accountList.slice()};a.user1.orbiter.AccountManager=function(c){a.user1.events.EventDispatcher.call(this);this.watchedAccounts=new a.user1.orbiter.AccountSet();this.observedAccounts=new a.user1.orbiter.AccountSet();this.accountCache=new a.user1.utils.LRUCache(10000);this.log=c;this._isWatchingForAccounts=false;this.accountCache;this.messageManager;this.clientManager;this.roomManager};a.user1.utils.extend(a.user1.orbiter.AccountManager,a.user1.events.EventDispatcher);a.user1.orbiter.AccountManager.prototype.setMessageManager=function(c){this.messageManager=c};a.user1.orbiter.AccountManager.prototype.setClientManager=function(c){this.clientManager=c};a.user1.orbiter.AccountManager.prototype.setRoomManager=function(c){this.roomManager=c};a.user1.orbiter.AccountManager.prototype.createAccount=function(d,c){if(d==null||d==""){this.log.warn("[ACCOUNT_MANAGER] Create account failed. No userID supplied.")}else{if(c==null){this.log.warn("[ACCOUNT_MANAGER] Create account failed. No password supplied.")}else{this.messageManager.sendUPC(a.user1.orbiter.UPC.CREATE_ACCOUNT,d,c)}}};a.user1.orbiter.AccountManager.prototype.removeAccount=function(d,c){if(d==null||d==""){this.log.warn("[ACCOUNT_MANAGER] Remove account failed. No userID supplied.")}else{if(c==null){this.log.warn("[ACCOUNT_MANAGER] Remove account: no password supplied. Removal will fail unless sender is an administrator.")}this.messageManager.sendUPC(a.user1.orbiter.UPC.REMOVE_ACCOUNT,d,c)}};a.user1.orbiter.AccountManager.prototype.changePassword=function(c,e,d){if(c==null||c==""){this.log.warn("[ACCOUNT_MANAGER] Change password failed. No userID supplied.")}else{if(e==null||e==""){this.log.warn("[ACCOUNT_MANAGER] Change password failed for account ["+c+"]. No new password supplied.")}else{if(d==null||d==""){this.log.warn("[ACCOUNT_MANAGER] Change account password for account ["+c+"]: no old password supplied. Operation will fail unless sender is an administrator.");d=""}this.messageManager.sendUPC(a.user1.orbiter.UPC.CHANGE_ACCOUNT_PASSWORD,c,d,e)}}};a.user1.orbiter.AccountManager.prototype.addRole=function(c,d){if(c==null||c==""){this.log.warn("[ACCOUNT_MANAGER] Add role failed. No userID supplied.")}else{if(d==null||d==""){this.log.warn("[ACCOUNT_MANAGER] Add role failed for account ["+c+"]. No role supplied.")}else{this.messageManager.sendUPC(a.user1.orbiter.UPC.ADD_ROLE,c,d)}}};a.user1.orbiter.AccountManager.prototype.removeRole=function(c,d){if(c==null||c==""){this.log.warn("[ACCOUNT_MANAGER] Remove role failed. No userID supplied.")}else{if(d==null||d==""){this.log.warn("[ACCOUNT_MANAGER] Remove role failed for account ["+c+"]. No role supplied.")}else{this.messageManager.sendUPC(a.user1.orbiter.UPC.REMOVE_ROLE,c,d)}}};a.user1.orbiter.AccountManager.prototype.requestAccount=function(c){var d;if(c==null||c==""){return null}else{d=this.getAccount(c);if(d==null){d=new a.user1.orbiter.UserAccount(c,this.log,this,this.clientManager,this.roomManager);d.setAttributeManager(new a.user1.orbiter.AttributeManager(d,this.messageManager,this.log));this.accountCache.put(c,d)}return d}};a.user1.orbiter.AccountManager.prototype.deserializeWatchedAccounts=function(f){var g=f.split(Tokens.RS);var h=new a.user1.utils.UDictionary();var c=g.length;for(var d=c;--d>=0;){h[g[d]]=1}var e;for(var j in watchedAccounts.getAll()){if(!h.hasOwnProperty(j)){removeWatchedAccount(j)}}if(f!=""){for(j in h){if(j!=""){if(!this.watchedAccounts.containsUserID(j)){this.addWatchedAccount(this.requestAccount(j))}}else{throw new Error("[CORE_MESSAGE_LISTENER] Received empty account id in user list (u127).")}}}this.fireSynchronize()};a.user1.orbiter.AccountManager.prototype.observeAccount=function(c){this.messageManager.sendUPC(a.user1.orbiter.UPC.OBSERVE_ACCOUNT,c)};a.user1.orbiter.AccountManager.prototype.stopObservingAccount=function(c){this.messageManager.sendUPC(a.user1.orbiter.UPC.STOP_OBSERVING_ACCOUNT,c)};a.user1.orbiter.AccountManager.prototype.addObservedAccount=function(c){this.observedAccounts.add(c);this.fireObserveAccount(c.getUserID())};a.user1.orbiter.AccountManager.prototype.removeObservedAccount=function(c){var d=this.observedAccounts.removeByUserID(c);this.fireStopObservingAccount(c);return d};a.user1.orbiter.AccountManager.prototype.removeAllObservedAccounts=function(){this.observedAccounts.removeAll()};a.user1.orbiter.AccountManager.prototype.isObservingAccount=function(c){return this.observedAccounts.containsUserID(c)};a.user1.orbiter.AccountManager.prototype.watchForAccounts=function(){this.messageManager.sendUPC(a.user1.orbiter.UPC.WATCH_FOR_ACCOUNTS)};a.user1.orbiter.AccountManager.prototype.stopWatchingForAccounts=function(){this.messageManager.sendUPC(a.user1.orbiter.UPC.STOP_WATCHING_FOR_ACCOUNTS_RESULT)};a.user1.orbiter.AccountManager.prototype.isWatchingForAccounts=function(){return this._isWatchingForAccounts};a.user1.orbiter.AccountManager.prototype.setIsWatchingForAccounts=function(c){this._isWatchingForAccounts=c};a.user1.orbiter.AccountManager.prototype.addWatchedAccount=function(c){this.watchedAccounts.add(c);this.fireAccountAdded(c.getUserID(),c)};a.user1.orbiter.AccountManager.prototype.removeWatchedAccount=function(c){return this.watchedAccounts.removeByUserID(c)};a.user1.orbiter.AccountManager.prototype.removeAllWatchedAccounts=function(){this.watchedAccounts.removeAll()};a.user1.orbiter.AccountManager.prototype.hasWatchedAccount=function(c){return this.watchedAccounts.containsUserID(c)};a.user1.orbiter.AccountManager.prototype.getClientsForObservedAccounts=function(){var d=new Object();var c;var f=this.observedAccounts.getAll();var g;for(var e in f){g=f[e];c=g.getInternalClient();if(c!=null){d[c.getClientID()]=c}}return d};a.user1.orbiter.AccountManager.prototype.getAccount=function(e){var g=this.accountCache.get(e);if(g){return g}g=this.observedAccounts.getByUserID(e);if(g){return g}g=this.watchedAccounts.getByUserID(e);if(g){return g}var f=new Object();var d=this.clientManager.getInternalClients();var c;for(var h in d){g=d[h].getAccount();if(g!=null&&g.getUserID()==e){return g}}return null};a.user1.orbiter.AccountManager.prototype.selfAccount=function(){return this.clientManager.self().getAccount()};a.user1.orbiter.AccountManager.prototype.getAccounts=function(){var f=new Object();var e;var d=this.clientManager.getInternalClients();var c;for(var g in d){e=c.getAccount();if(e!=null){f[e.getUserID()]=e}}return a.user1.utils.ObjectUtil.combine(f,this.observedAccounts.getAll(),this.watchedAccounts.getAll())};a.user1.orbiter.AccountManager.prototype.accountIsKnown=function(d){for(var c in this.getAccounts()){if(c==d){return true}}return false};a.user1.orbiter.AccountManager.prototype.getNumAccounts=function(){return this.getAccounts().length};a.user1.orbiter.AccountManager.prototype.getNumAccountsOnServer=function(){return this.watchedAccounts.length()};a.user1.orbiter.AccountManager.prototype.getNumLoggedInAccounts=function(){var e;var f;var d=this.getAccounts();for(var c in d){f=d[c];if(f.isLoggedIn()){e++}}return e};a.user1.orbiter.AccountManager.prototype.login=function(d,c){if(this.clientManager.self().getConnectionState()==a.user1.orbiter.ConnectionState.LOGGED_IN){this.log.warn("[ACCOUNT_MANAGER] User ["+d+"]: Login attempt ignored. Already logged in. Current client must logoff before logging in again.");this.fireLoginResult(d,a.user1.orbiter.Status.ERROR)}else{if(d==null){this.log.warn("[ACCOUNT_MANAGER] Login attempt failed. No userID supplied.")}else{if(c==null){this.log.warn("[ACCOUNT_MANAGER] Login attempt failed for user ["+d+"] failed. No password supplied.")}else{this.messageManager.sendUPC(a.user1.orbiter.UPC.LOGIN,d,c)}}}};a.user1.orbiter.AccountManager.prototype.logoff=function(d,c){if(d==null){if(this.clientManager.self().getConnectionState()!=a.user1.orbiter.ConnectionState.LOGGED_IN){this.log.warn("[ACCOUNT_MANAGER] Logoff failed. The current user is not logged in.")}else{this.clientManager.self().getAccount().logoff()}}else{if(d==""){this.log.warn("[ACCOUNT_MANAGER] Logoff failed. Supplied userID must not be the empty string.")}else{if(c==null||c==""){if(this.clientManager.self().getConnectionState()!=a.user1.orbiter.ConnectionState.LOGGED_IN){this.log.warn("[ACCOUNT_MANAGER] Logoff: no password supplied. Operation will fail unless sender is an administrator.")}c=""}this.messageManager.sendUPC(a.user1.orbiter.UPC.LOGOFF,d,c)}}};a.user1.orbiter.AccountManager.prototype.fireCreateAccountResult=function(d,c){var f=new a.user1.orbiter.AccountManagerEvent(a.user1.orbiter.AccountManagerEvent.CREATE_ACCOUNT_RESULT,d,this.getAccount(d),c);this.dispatchEvent(f)};a.user1.orbiter.AccountManager.prototype.fireRemoveAccountResult=function(d,c){var f=new a.user1.orbiter.AccountManagerEvent(a.user1.orbiter.AccountManagerEvent.REMOVE_ACCOUNT_RESULT,d,this.getAccount(d),c);this.dispatchEvent(f)};a.user1.orbiter.AccountManager.prototype.fireChangePasswordResult=function(d,c){var f=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.CHANGE_PASSWORD_RESULT,c,d);f.setAccount(this.getAccount(d));this.dispatchEvent(f)};a.user1.orbiter.AccountManager.prototype.fireAccountAdded=function(c,d){this.dispatchEvent(new a.user1.orbiter.AccountManagerEvent(a.user1.orbiter.AccountManagerEvent.ACCOUNT_ADDED,c,d))};a.user1.orbiter.AccountManager.prototype.fireAccountRemoved=function(c,d){this.dispatchEvent(new a.user1.orbiter.AccountManagerEvent(a.user1.orbiter.AccountManagerEvent.ACCOUNT_REMOVED,c,d))};a.user1.orbiter.AccountManager.prototype.fireLogoffResult=function(d,c){var f=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.LOGOFF_RESULT,c,d);f.setAccount(this.getAccount(d));this.dispatchEvent(f)};a.user1.orbiter.AccountManager.prototype.fireLogoff=function(c,f){var d=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.LOGOFF,a.user1.orbiter.Status.SUCCESS,c.getUserID(),f);d.setAccount(c);this.dispatchEvent(d)};a.user1.orbiter.AccountManager.prototype.fireLoginResult=function(d,c){var f=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.LOGIN_RESULT,c,d);f.setAccount(this.getAccount(d));this.dispatchEvent(f)};a.user1.orbiter.AccountManager.prototype.fireLogin=function(c,f){var d=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.LOGIN,a.user1.orbiter.Status.SUCCESS,c.getUserID(),f);d.setAccount(c);this.dispatchEvent(d)};a.user1.orbiter.AccountManager.prototype.fireChangePassword=function(c){var d=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.CHANGE_PASSWORD,a.user1.orbiter.Status.SUCCESS,c);d.setAccount(this.getAccount(c));this.dispatchEvent(d)};a.user1.orbiter.AccountManager.prototype.fireObserveAccount=function(c){var d=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.OBSERVE,null,c);d.setAccount(this.getAccount(c));this.dispatchEvent(d)};a.user1.orbiter.AccountManager.prototype.fireStopObservingAccount=function(c){var d=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.STOP_OBSERVING,null,c);d.setAccount(this.getAccount(c));this.dispatchEvent(d)};a.user1.orbiter.AccountManager.prototype.fireStopWatchingForAccountsResult=function(c){this.dispatchEvent(new a.user1.orbiter.AccountManagerEvent(a.user1.orbiter.AccountManagerEvent.STOP_WATCHING_FOR_ACCOUNTS_RESULT,null,null,c))};a.user1.orbiter.AccountManager.prototype.fireWatchForAccountsResult=function(c){this.dispatchEvent(new a.user1.orbiter.AccountManagerEvent(a.user1.orbiter.AccountManagerEvent.WATCH_FOR_ACCOUNTS_RESULT,null,null,c))};a.user1.orbiter.AccountManager.prototype.fireObserveAccountResult=function(d,c){var f=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.OBSERVE_RESULT,c,d);f.setAccount(this.getAccount(d));this.dispatchEvent(f)};a.user1.orbiter.AccountManager.prototype.fireStopObservingAccountResult=function(d,c){var f=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.STOP_OBSERVING_RESULT,c,d);f.setAccount(this.getAccount(d));this.dispatchEvent(f)};a.user1.orbiter.AccountManager.prototype.fireAddRoleResult=function(d,g,c){var f=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.ADD_ROLE_RESULT,c,d,null,g);f.setAccount(this.getAccount(d));this.dispatchEvent(f)};a.user1.orbiter.AccountManager.prototype.fireRemoveRoleResult=function(d,g,c){var f=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.REMOVE_ROLE_RESULT,c,d,null,g);f.setAccount(this.getAccount(d));this.dispatchEvent(f)};a.user1.orbiter.AccountManager.prototype.fireSynchronize=function(){this.dispatchEvent(new a.user1.orbiter.AccountManagerEvent(a.user1.orbiter.AccountManagerEvent.SYNCHRONIZE))};a.user1.orbiter.AccountManager.prototype.cleanup=function(){this.log.info("[ACCOUNT_MANAGER] Cleaning resources.");this.removeAllObservedAccounts();this.removeAllWatchedAccounts();this.setIsWatchingForAccounts(false)};a.user1.orbiter.AccountManagerEvent=function(e,d,f,c){a.user1.events.Event.call(this,e);this.account=f;this.userID=d;this.status=c};a.user1.utils.extend(a.user1.orbiter.AccountManagerEvent,a.user1.events.Event);a.user1.orbiter.AccountManagerEvent.CREATE_ACCOUNT_RESULT="CREATE_ACCOUNT_RESULT";a.user1.orbiter.AccountManagerEvent.REMOVE_ACCOUNT_RESULT="REMOVE_ACCOUNT_RESULT";a.user1.orbiter.AccountManagerEvent.ACCOUNT_ADDED="ACCOUNT_ADDED";a.user1.orbiter.AccountManagerEvent.ACCOUNT_REMOVED="ACCOUNT_REMOVED";a.user1.orbiter.AccountManagerEvent.WATCH_FOR_ACCOUNTS_RESULT="WATCH_FOR_ACCOUNTS_RESULT";a.user1.orbiter.AccountManagerEvent.STOP_WATCHING_FOR_ACCOUNTS_RESULT="STOP_WATCHING_FOR_ACCOUNTS_RESULT";a.user1.orbiter.AccountManagerEvent.SYNCHRONIZE="SYNCHRONIZE";a.user1.orbiter.AccountManagerEvent.prototype.getStatus=function(){return this.status};a.user1.orbiter.AccountManagerEvent.prototype.getUserID=function(){return this.userID};a.user1.orbiter.AccountManagerEvent.prototype.getAccount=function(){return this.account};a.user1.orbiter.AccountManagerEvent.prototype.toString=function(){return"[object AccountManagerEvent]"};a.user1.orbiter.AccountSet=function(){this.accounts=new a.user1.utils.UDictionary()};a.user1.orbiter.AccountSet.prototype.add=function(c){this.accounts[c.getUserID()]=c};a.user1.orbiter.AccountSet.prototype.remove=function(c){var c=this.accounts[c.getUserID()];delete this.accounts[c.getUserID()];return c};a.user1.orbiter.AccountSet.prototype.removeAll=function(){this.accounts=new a.user1.utils.UDictionary()};a.user1.orbiter.AccountSet.prototype.removeByUserID=function(c){var d=this.accounts[c];delete this.accounts[c];return d};a.user1.orbiter.AccountSet.prototype.contains=function(c){return this.accounts[c.getUserID()]!=null};a.user1.orbiter.AccountSet.prototype.containsUserID=function(c){if(c==""||c==null){return false}return this.getByUserID(c)!=null};a.user1.orbiter.AccountSet.prototype.getByUserID=function(c){return this.accounts[c]};a.user1.orbiter.AccountSet.prototype.getByClient=function(c){var e;for(var d in this.accounts){e=this.accounts[d];if(e.getInternalClient()==c){return e}}return null};a.user1.orbiter.AccountSet.prototype.getAll=function(){return this.accounts};a.user1.orbiter.AccountSet.prototype.length=function(){var d;for(var c in this.accounts){d++}return d};a.user1.orbiter.snapshot.AccountSnapshot=function(c){a.user1.orbiter.snapshot.Snapshot.call(this);this.manifest=null;this.method=a.user1.orbiter.UPC.GET_ACCOUNT_SNAPSHOT;this.args=[c];this.hasStatus=true};a.user1.utils.extend(a.user1.orbiter.snapshot.AccountSnapshot,a.user1.orbiter.snapshot.Snapshot);a.user1.orbiter.snapshot.AccountSnapshot.prototype.setManifest=function(c){this.manifest=c};a.user1.orbiter.snapshot.AccountSnapshot.prototype.getAttribute=function(c,d){if(!this.manifest){return null}return this.manifest.persistentAttributes.getAttribute(c,d)};a.user1.orbiter.snapshot.AccountSnapshot.prototype.getAttributes=function(){if(!this.manifest){return null}return this.manifest.persistentAttributes.getAll()};a.user1.orbiter.snapshot.AccountSnapshot.prototype.getUserID=function(){if(!this.manifest){return null}return this.manifest.userID};a.user1.orbiter.filters.AndGroup=function(){a.user1.orbiter.filters.BooleanGroup.call(this,a.user1.orbiter.filters.BooleanGroupType.AND)};a.user1.utils.extend(a.user1.orbiter.filters.AndGroup,a.user1.orbiter.filters.BooleanGroup);a.user1.orbiter.filters.Filter=function(c){a.user1.orbiter.filters.AndGroup.call(this);this.filterType=c};a.user1.utils.extend(a.user1.orbiter.filters.Filter,a.user1.orbiter.filters.AndGroup);a.user1.orbiter.filters.Filter.prototype.toXMLString=function(){var d='<f t="'+this.filterType+'">\n';var e;for(var c=0;c<this.comparisons.length;c++){e=this.comparisons[c];d+=e.toXMLString()+"\n"}d+="</f>";return d};a.user1.utils.ArrayUtil.combine=function(){var g=arguments.length==1?arguments[0]:arguments;var f=[];var h;var e;for(var d=0;d<g.length;d++){h=g[d];if(a.user1.utils.ArrayUtil.isArray(h)){for(var c=0;c<h.length;c++){e=h[c];if(a.user1.utils.ArrayUtil.indexOf(f,e)==-1){f.push(e)}}}}return f};a.user1.orbiter.Attribute=function(d,g,c,e,f){this.name=d;this.value=g;this.oldValue=c;this.scope=(e==a.user1.orbiter.Tokens.GLOBAL_ATTR)||(e==null)?null:e;this.byClient=f};a.user1.orbiter.Attribute.prototype.toString=function(){return"Attribute: "+(this.scope==null?"":this.scope+".")+this.name+" = "+this.value+". Old value: "+this.oldValue};a.user1.orbiter.AttributeCollection=function(){a.user1.events.EventDispatcher.call(this);this.attributes=new Object()};a.user1.utils.extend(a.user1.orbiter.AttributeCollection,a.user1.events.EventDispatcher);a.user1.orbiter.AttributeCollection.prototype.setAttribute=function(d,i,e,h){var g;var f;var c;e=e==null?a.user1.orbiter.Tokens.GLOBAL_ATTR:e;g=this.attributes.hasOwnProperty(e);f=g?this.attributes[e].hasOwnProperty(d):false;if(f){c=this.attributes[e][d];if(c==i){return false}}if(!g){this.attributes[e]=new Object()}this.attributes[e][d]=i;this.fireUpdateAttribute(d,i,e,c,h);return true};a.user1.orbiter.AttributeCollection.prototype.deleteAttribute=function(d,e,g){var c=true;var f;if(this.attributes.hasOwnProperty(e)&&this.attributes[e].hasOwnProperty(d)){f=this.attributes[e][d];delete this.attributes[e][d];for(var h in this.attributes[e]){c=false;break}if(c){delete this.attributes[e]}this.fireDeleteAttribute(d,f,e,g);return true}return false};a.user1.orbiter.AttributeCollection.prototype.clear=function(){this.attributes=new Object()};a.user1.orbiter.AttributeCollection.prototype.getByScope=function(e){var g=new Object();if(e==null){for(var c in this.attributes){g[c]=new Object();for(var f in this.attributes[c]){g[c][f]=this.attributes[c][f]}}}else{for(var d in this.attributes[e]){g[d]=this.attributes[e][d]}}return g};a.user1.orbiter.AttributeCollection.prototype.getAttributesNamesForScope=function(d){var e=new Array();for(var c in this.attributes[d]){e.push(c)}return e};a.user1.orbiter.AttributeCollection.prototype.getAll=function(){var c=new Object();for(var e in this.attributes){for(var d in this.attributes[e]){c[e==a.user1.orbiter.Tokens.GLOBAL_ATTR?d:(e+"."+d)]=this.attributes[e][d]}}return c};a.user1.orbiter.AttributeCollection.prototype.getAttribute=function(c,d){if(d==null){d=a.user1.orbiter.Tokens.GLOBAL_ATTR}if(this.attributes.hasOwnProperty(d)&&this.attributes[d].hasOwnProperty(c)){return this.attributes[d][c]}else{return null}};a.user1.orbiter.AttributeCollection.prototype.getScopes=function(){var d=new Array();for(var c in this.attributes){d.push(c)}return d};a.user1.orbiter.AttributeCollection.prototype.contains=function(c,d){return this.attributes.hasOwnProperty(d)?this.attributes[d].hasOwnProperty(c):false};a.user1.orbiter.AttributeCollection.prototype.add=function(k){var g=k.getScopes();var f;var h;var d;for(var e=0;e<=g.length;e++){f=g[e];h=k.getAttributesNamesForScope(f);for(var c=0;c<h.length;c++){d=h[c];this.setAttribute(d,k.getAttribute(d,f),f)}}};a.user1.orbiter.AttributeCollection.prototype.synchronizeScope=function(e,g){var f=this.getAttributesNamesForScope(e);var c;for(var d=0;d<f.length;d++){c=f[d];if(!g.contains(c,e)){this.deleteAttribute(c,e)}}var f=g.getAttributesNamesForScope(e);for(d=0;d<f.length;d++){c=f[d];this.setAttribute(c,g.getAttribute(c,e),e)}};a.user1.orbiter.AttributeCollection.prototype.fireUpdateAttribute=function(f,d,g,c,i){var h=new a.user1.orbiter.Attribute(f,d,c,g,i);var j=new a.user1.orbiter.AttributeEvent(a.user1.orbiter.AttributeEvent.UPDATE,h);this.dispatchEvent(j)};a.user1.orbiter.AttributeCollection.prototype.fireDeleteAttribute=function(c,i,d,g){var f=new a.user1.orbiter.Attribute(c,null,i,d,g);var h=new a.user1.orbiter.AttributeEvent(a.user1.orbiter.AttributeEvent.DELETE,f);this.dispatchEvent(h)};a.user1.orbiter.filters.AttributeComparison=function(c,e,d){if(!a.user1.orbiter.Validator.isValidAttributeName(c)){throw new Error("Invalid attribute name specified for AttributeComparison: "+c)}this.name=c;this.value=e;this.compareType=d};a.user1.orbiter.filters.AttributeComparison.prototype.toXMLString=function(){return'<a c="'+this.compareType+'"><n><![CDATA['+this.name+"]]></n><v><![CDATA["+this.value.toString()+"]]></v></a>"};a.user1.orbiter.AttributeEvent=function(d,e,c){a.user1.events.Event.call(this,d);this.changedAttr=e;this.status=c};a.user1.utils.extend(a.user1.orbiter.AttributeEvent,a.user1.events.Event);a.user1.orbiter.AttributeEvent.UPDATE="UPDATE";a.user1.orbiter.AttributeEvent.DELETE="DELETE";a.user1.orbiter.AttributeEvent.DELETE_RESULT="DELETE_RESULT";a.user1.orbiter.AttributeEvent.SET_RESULT="SET_RESULT";a.user1.orbiter.AttributeEvent.prototype.getChangedAttr=function(){return this.changedAttr};a.user1.orbiter.AttributeEvent.prototype.getStatus=function(){return this.status};a.user1.orbiter.AttributeEvent.prototype.toString=function(){return"[object AttributeEvent]"};a.user1.orbiter.filters.AttributeFilter=function(){a.user1.orbiter.filters.Filter.call(this,"A")};a.user1.utils.extend(a.user1.orbiter.filters.AttributeFilter,a.user1.orbiter.filters.Filter);a.user1.orbiter.AttributeManager=function(c,d,e){a.user1.events.EventDispatcher.call(this);this.attributes=null;this.owner=c;this.messageManager=d;this.log=e;this.setAttributeCollection(new a.user1.orbiter.AttributeCollection())};a.user1.utils.extend(a.user1.orbiter.AttributeManager,a.user1.events.EventDispatcher);a.user1.orbiter.AttributeManager.prototype.getAttributeCollection=function(){return this.attributes};a.user1.orbiter.AttributeManager.prototype.setAttributeCollection=function(c){this.unregisterAttributeListeners();this.attributes=c;this.registerAttributeListeners()};a.user1.orbiter.AttributeManager.prototype.setAttribute=function(c){this.messageManager.sendUPCObject(c)};a.user1.orbiter.AttributeManager.prototype.deleteAttribute=function(c){this.messageManager.sendUPCObject(c)};a.user1.orbiter.AttributeManager.prototype.getAttribute=function(c,d){if(this.attributes==null){return null}else{return this.attributes.getAttribute(c,d)}};a.user1.orbiter.AttributeManager.prototype.getAttributes=function(){return this.attributes.getAll()};a.user1.orbiter.AttributeManager.prototype.getAttributesByScope=function(c){return this.attributes.getByScope(c)};a.user1.orbiter.AttributeManager.prototype.setAttributeLocal=function(d,c,e,f){var g=this.attributes.setAttribute(d,c,e,f);if(!g){this.log.info(this.owner+" New attribute value for ["+d+"] matches old value. Not changed.")}};a.user1.orbiter.AttributeManager.prototype.removeAttributeLocal=function(d,e,f){var c=this.attributes.deleteAttribute(d,e,f);if(!c){this.log.info(owner+" Delete attribute failed for ["+d+"]. No such attribute.")}};a.user1.orbiter.AttributeManager.prototype.removeAll=function(){this.attributes.clear()};a.user1.orbiter.AttributeManager.prototype.registerAttributeListeners=function(){if(this.attributes!=null){this.attributes.addEventListener(a.user1.orbiter.AttributeEvent.UPDATE,this.updateAttributeListener,this,a.user1.utils.integer.MAX_VALUE);this.attributes.addEventListener(a.user1.orbiter.AttributeEvent.DELETE,this.deleteAttributeListener,this,a.user1.utils.integer.MAX_VALUE)}};a.user1.orbiter.AttributeManager.prototype.unregisterAttributeListeners=function(){if(this.attributes!=null){this.attributes.removeEventListener(a.user1.orbiter.AttributeEvent.UPDATE,this.updateAttributeListener,this);this.attributes.removeEventListener(a.user1.orbiter.AttributeEvent.DELETE,this.deleteAttributeListener,this)}};a.user1.orbiter.AttributeManager.prototype.updateAttributeListener=function(d){var c=d.getChangedAttr();this.log.info(this.owner+" Setting attribute ["+((c.scope==null)?"":c.scope+".")+c.name+"]. New value: ["+c.value+"]. Old value: ["+c.oldValue+"].");this.owner.dispatchEvent(d)};a.user1.orbiter.AttributeManager.prototype.deleteAttributeListener=function(c){this.owner.dispatchEvent(c)};a.user1.orbiter.AttributeManager.prototype.fireSetAttributeResult=function(f,g,d){var c=new a.user1.orbiter.Attribute(f,null,null,g);var h=new a.user1.orbiter.AttributeEvent(a.user1.orbiter.AttributeEvent.SET_RESULT,c,d);this.owner.dispatchEvent(h)};a.user1.orbiter.AttributeManager.prototype.fireDeleteAttributeResult=function(f,g,d){var c=new a.user1.orbiter.Attribute(f,null,null,g);var h=new a.user1.orbiter.AttributeEvent(a.user1.orbiter.AttributeEvent.DELETE_RESULT,c,d);this.owner.dispatchEvent(h)};a.user1.orbiter.AttributeManager.prototype.dispose=function(){this.messageManager=null;this.attributes=null;this.owner=null;this.log=null};a.user1.orbiter.AttributeOptions=new Object();a.user1.orbiter.AttributeOptions.FLAG_SHARED=1<<2;a.user1.orbiter.AttributeOptions.FLAG_PERSISTENT=1<<3;a.user1.orbiter.AttributeOptions.FLAG_IMMUTABLE=1<<5;a.user1.orbiter.AttributeOptions.FLAG_EVALUATE=1<<8;a.user1.orbiter.snapshot.BannedListSnapshot=function(){a.user1.orbiter.snapshot.Snapshot.call(this);this.bannedList=null;this.method=a.user1.orbiter.UPC.GET_BANNED_LIST_SNAPSHOT};a.user1.utils.extend(a.user1.orbiter.snapshot.BannedListSnapshot,a.user1.orbiter.snapshot.Snapshot);a.user1.orbiter.snapshot.BannedListSnapshot.prototype.setBannedList=function(c){this.bannedList=c};a.user1.orbiter.snapshot.BannedListSnapshot.prototype.getBannedList=function(){if(!this.bannedList){return null}return this.bannedList.slice()};a.user1.utils.CacheNode=function(){this.next;this.prev;this.key;this.value};a.user1.orbiter.Client=function(i,f,d,c,h,g,e){a.user1.events.EventDispatcher.call(this);this.clientID="";this._isSelf=false;this.account=null;this.disposed=false;this.messageManager=d;this.clientManager=f;this.roomManager=c;this.connectionManager=h;this.server=g;this.log=e;this.occupiedRoomIDs=new Array();this.observedRoomIDs=new Array();this.customClients=new Object();this.attributeManager=new a.user1.orbiter.AttributeManager(this,this.messageManager,this.log);this.connectionState=a.user1.orbiter.ConnectionState.UNKNOWN;this.setClientID(i)};a.user1.utils.extend(a.user1.orbiter.Client,a.user1.events.EventDispatcher);a.user1.orbiter.Client.FLAG_ADMIN=1<<2;a.user1.orbiter.Client.prototype.getClientID=function(){return this.clientID};a.user1.orbiter.Client.prototype.setClientID=function(c){if(this.clientID!=c){this.clientID=c}};a.user1.orbiter.Client.prototype.isSelf=function(){return this._isSelf};a.user1.orbiter.Client.prototype.setIsSelf=function(){this._isSelf=true};a.user1.orbiter.Client.prototype.getConnectionState=function(){if(this.isSelf()){if(this.disposed||this.clientManager.getInternalClient(this.getClientID())==null){return a.user1.orbiter.ConnectionState.NOT_CONNECTED}else{return this.account!=null?this.account.getConnectionState():this.connectionManager.getConnectionState()}}else{if(this.connectionState!=a.user1.orbiter.ConnectionState.UNKNOWN){return this.connectionState}else{if(this.disposed||this.clientManager.getInternalClient(this.getClientID())==null){return a.user1.orbiter.ConnectionState.UNKNOWN}else{return this.account!=null?this.account.getConnectionState():a.user1.orbiter.ConnectionState.READY}}}};a.user1.orbiter.Client.prototype.setConnectionState=function(c){this.connectionState=c};a.user1.orbiter.Client.prototype.isAdmin=function(){var c=this.getAttribute(Tokens.ROLES_ATTR);var d;if(c!=null){return parseInt(c)&a.user1.orbiter.Client.FLAG_ADMIN}else{this.log.warn("["+this.toString()+"] Could not determine admin status because the client is not synchronized.");return false}};a.user1.orbiter.Client.prototype.observe=function(){this.messageManager.sendUPC(a.user1.orbiter.UPC.OBSERVE_CLIENT,this.clientID)};a.user1.orbiter.Client.prototype.stopObserving=function(){this.messageManager.sendUPC(a.user1.orbiter.UPC.STOP_OBSERVING_CLIENT,this.clientID)};a.user1.orbiter.Client.prototype.kick=function(){if(this.getClientID()==null){this.log.warn(this+" Kick attempt failed. Client not currently connected.")}this.messageManager.sendUPC(a.user1.orbiter.UPC.KICK_CLIENT,getClientID())};a.user1.orbiter.Client.prototype.ban=function(d,c){if(this.getClientID()==null){this.log.warn(this+" Ban attempt failed. Client not currently connected.")}this.messageManager.sendUPC(a.user1.orbiter.UPC.BAN,null,getClientID(),d.toString(),c)};a.user1.orbiter.Client.prototype.setClientClass=function(e,c){var d=Array.prototype.slice.call(arguments).slice(2);if(!this.isSelf()){throw new Error("Custom client class assignment failed for : "+c+". A custom class can be set for the current client ( i.e., ClientManager.self()) only.")}d.unshift(c);var f=d.join(" ");setAttribute(Tokens.CUSTOM_CLASS_ATTR,f,e)};a.user1.orbiter.Client.prototype.getCustomClient=function(c){var d;d=this.customClients[c];if(d!=null){return d}if(c==null){return this.setGlobalCustomClient()}else{return this.setCustomClientForScope(c)}};a.user1.orbiter.Client.prototype.setGlobalCustomClient=function(){var c;var d;var e;c=this.getClientClass(null);if(c!=null){return this.createCustomClient(c,null)}d=this.clientManager.getDefaultClientClass();if(d==null){return null}else{return this.createCustomClient(d,null)}};a.user1.orbiter.Client.prototype.setCustomClientForScope=function(e){var d;var c;var h;var f;c=this.getClientClass(e);if(c!=null){return this.createCustomClient(c,e)}d=this.roomManager.getRoom(e);if(d!=null){h=d.getDefaultClientClass();if(h!=null){return this.createCustomClient(h,e)}}var g=this.customClients[null];if(g!=null){return g}else{f=this.clientManager.getDefaultClientClass();if(f==null){return null}else{return this.createCustomClient(f,null)}}};a.user1.orbiter.Client.prototype.getClientClass=function(f){var g=this.getAttribute(a.user1.orbiter.Tokens.CUSTOM_CLASS_ATTR,f);var k;if(g!=null){k=g.split(" ")}var d;if(k!=null){for(var c=0;c<k.length;c++){try{var j=a.user1.utils.resolveMemberExpression(d);if(!j instanceof Function){this.log.debug(this.toString()+": Definition for client class ["+d+"] is not a constructor function.");continue}return j}catch(h){this.log.debug(this.toString()+": No definition found for client class ["+d+"]");continue}}}return null};a.user1.orbiter.Client.prototype.createCustomClient=function(c,d){var e;e=new c();this.customClients[d]=e;if(e instanceof CustomClient){e.setClient(this);e.init();return e}else{this.log.debug("[CLIENT_MANAGER] Custom client class ["+c+"] does not  extend CustomClient. Assuming specified class will manually  compose its own Client instance for client ID: "+clientID+". See Client.setClientClass().");return e}};a.user1.orbiter.Client.prototype.removeOccupiedRoomID=function(c){if(this.isInRoom(c)&&c!=null){this.occupiedRoomIDs.splice(a.user1.utils.ArrayUtil.indexOf(this.occupiedRoomIDs,c),1);return true}else{return false}};a.user1.orbiter.Client.prototype.removeObservedRoomID=function(c){if(this.isObservingRoom(c)&&c!=null){this.observedRoomIDs.splice(a.user1.utils.ArrayUtil.indexOf(this.observedRoomIDs,c),1);return true}else{return false}};a.user1.orbiter.Client.prototype.addOccupiedRoomID=function(c){if(!this.isInRoom(c)&&c!=null){this.log.info(this.toString()+" added occupied room ID ["+c+"].");this.occupiedRoomIDs.push(c)}};a.user1.orbiter.Client.prototype.addObservedRoomID=function(c){if(!this.isObservingRoom(c)&&c!=null){this.log.info("Client ["+this.getClientID()+"] added observed room ID ["+c+"].");this.observedRoomIDs.push(c)}};a.user1.orbiter.Client.prototype.isInRoom=function(c){return a.user1.utils.ArrayUtil.indexOf(this.getOccupiedRoomIDs(),c)!=-1};a.user1.orbiter.Client.prototype.isObservingRoom=function(c){return a.user1.utils.ArrayUtil.indexOf(this.getObservedRoomIDs(),c)!=-1};a.user1.orbiter.Client.prototype.getOccupiedRoomIDs=function(){var f;if(this.clientManager.isObservingClient(this.getClientID())){return this.occupiedRoomIDs==null?[]:this.occupiedRoomIDs.slice(0)}else{f=[];var e=this.roomManager.getRooms();var c=e.length;var g;for(var d=0;d<c;d++){g=e[d];if(g.clientIsInRoom(this.getClientID())){f.push(g.getRoomID())}}return f}};a.user1.orbiter.Client.prototype.getObservedRoomIDs=function(){var f;if(this.clientManager.isObservingClient(this.getClientID())){return this.observedRoomIDs==null?[]:this.observedRoomIDs.slice(0)}else{f=[];var e=this.roomManager.getRooms();var c=e.length;var g;for(var d=0;d<c;d++){g=e[d];if(g.clientIsObservingRoom(this.getClientID())){f.push(g.getRoomID())}}return f}};a.user1.orbiter.Client.prototype.getUpdateLevels=function(c){var e;var d=this.getAttribute("_UL",c);if(d!=null){e=new a.user1.orbiter.UpdateLevels();e.fromInt(parseInt(d));return e}else{return null}};a.user1.orbiter.Client.prototype.getIP=function(){return this.getAttribute("_IP")};a.user1.orbiter.Client.prototype.getConnectTime=function(){var c=this.getAttribute("_CT");return c==null?NaN:parseFloat(c)};a.user1.orbiter.Client.prototype.getPing=function(){var c=this.getAttribute("_PING");return c==null?-1:parseInt(c)};a.user1.orbiter.Client.prototype.getTimeOnline=function(){return this.server==null?NaN:this.server.getServerTime()-this.getConnectTime()};a.user1.orbiter.Client.prototype.sendMessage=function(c){if(this.clientManager==null){return}var e=Array.prototype.slice.call(arguments).slice(1);var d=[c,[this.getClientID()],null];this.clientManager.sendMessage.apply(this.clientManager,d.concat(e))};a.user1.orbiter.Client.prototype.setAttribute=function(d,g,f,e,h){f=f==undefined?null:f;e=e==undefined?true:e;h=h==undefined?false:h;var i=(e?a.user1.orbiter.AttributeOptions.FLAG_SHARED:0)|(h?a.user1.orbiter.AttributeOptions.FLAG_EVALUATE:0);var c=new a.user1.orbiter.upc.SetClientAttr(d,g,i,f,this.getClientID());if(!(!this.isSelf()||h)){this.attributeManager.setAttributeLocal(d,g,f,this)}this.messageManager.sendUPCObject(c)};a.user1.orbiter.Client.prototype.deleteAttribute=function(c,d){var e=new a.user1.orbiter.upc.RemoveClientAttr(this.getClientID(),null,c,d);this.attributeManager.deleteAttribute(e)};a.user1.orbiter.Client.prototype.getAttribute=function(c,d){return this.attributeManager.getAttribute(c,d)};a.user1.orbiter.Client.prototype.getAttributes=function(){return this.attributeManager.getAttributes()};a.user1.orbiter.Client.prototype.getAttributesByScope=function(c){return this.attributeManager.getAttributesByScope(c)};a.user1.orbiter.Client.prototype.synchronize=function(c){var e;this.synchronizeOccupiedRoomIDs(c.occupiedRoomIDs);this.synchronizeObservedRoomIDs(c.observedRoomIDs);e=c.transientAttributes.getScopes();for(var d=e.length;--d>=0;){this.attributeManager.getAttributeCollection().synchronizeScope(e[d],c.transientAttributes)}if(this.account!=null){e=c.persistentAttributes.getScopes();for(d=e.length;--d>=0;){this.account.getAttributeManager().getAttributeCollection().synchronizeScope(e[d],c.persistentAttributes)}}};a.user1.orbiter.Client.prototype.synchronizeOccupiedRoomIDs=function(d){if(d==null){return}var e;for(var c=this.occupiedRoomIDs.length;--c>=0;){e=this.occupiedRoomIDs[c];if(a.user1.utils.ArrayUtil.indexOf(d,e)==-1){this.removeOccupiedRoomID(e)}}for(c=d.length;--c>=0;){e=d[c];this.addOccupiedRoomID(e)}};a.user1.orbiter.Client.prototype.synchronizeObservedRoomIDs=function(e){if(e==null){return}var d;for(var c=this.observedRoomIDs.length;--c>=0;){d=this.observedRoomIDs[c];if(a.user1.utils.ArrayUtil.indexOf(e,d)==-1){this.removeObservedRoomID(d)}}for(c=e.length;--c>=0;){d=e[c];this.addObservedRoomID(d)}};a.user1.orbiter.Client.prototype.getAttributeManager=function(){return this.attributeManager};a.user1.orbiter.Client.prototype.getClientManager=function(){return this.clientManager};a.user1.orbiter.Client.prototype.getAccount=function(){return this.account};a.user1.orbiter.Client.prototype.setAccount=function(c){if(c==null){this.account=null}else{if(this.account!=c){this.account=c;this.account.setClient(this)}}};a.user1.orbiter.Client.prototype.toString=function(){return"[CLIENT clientID: "+this.getClientID()+", userID: "+(this.account==null?"":this.account.getUserID())+"]"};a.user1.orbiter.Client.prototype.fireJoinRoom=function(f,c){this.log.debug(this+" triggering ClientEvent.JOIN_ROOM event.");var d=new a.user1.orbiter.ClientEvent(a.user1.orbiter.ClientEvent.JOIN_ROOM,null,f,c,this);this.dispatchEvent(d)};a.user1.orbiter.Client.prototype.fireLeaveRoom=function(f,c){this.log.debug(this+" triggering ClientEvent.LEAVE_ROOM event.");var d=new a.user1.orbiter.ClientEvent(a.user1.orbiter.ClientEvent.LEAVE_ROOM,null,f,c,this);this.dispatchEvent(d)};a.user1.orbiter.Client.prototype.fireObserveRoom=function(f,c){this.log.debug(this+" triggering ClientEvent.OBSERVE_ROOM event.");var d=new a.user1.orbiter.ClientEvent(a.user1.orbiter.ClientEvent.OBSERVE_ROOM,null,f,c,this);this.dispatchEvent(d)};a.user1.orbiter.Client.prototype.fireStopObservingRoom=function(f,c){this.log.debug(this+" triggering ClientEvent.STOP_OBSERVING_ROOM event.");var d=new a.user1.orbiter.ClientEvent(a.user1.orbiter.ClientEvent.STOP_OBSERVING_ROOM,null,f,c,this);this.dispatchEvent(d)};a.user1.orbiter.Client.prototype.fireObserve=function(){var c=new a.user1.orbiter.ClientEvent(a.user1.orbiter.ClientEvent.OBSERVE,null,null,null,this);this.dispatchEvent(c)};a.user1.orbiter.Client.prototype.fireStopObserving=function(){var c=new a.user1.orbiter.ClientEvent(a.user1.orbiter.ClientEvent.STOP_OBSERVING,null,null,null,this);this.dispatchEvent(c)};a.user1.orbiter.Client.prototype.fireObserveResult=function(c){var d=new a.user1.orbiter.ClientEvent(a.user1.orbiter.ClientEvent.OBSERVE_RESULT,null,null,null,this,c);this.dispatchEvent(d)};a.user1.orbiter.Client.prototype.fireStopObservingResult=function(c){var d=new a.user1.orbiter.ClientEvent(a.user1.orbiter.ClientEvent.STOP_OBSERVING_RESULT,null,null,null,this,c);this.dispatchEvent(d)};a.user1.orbiter.Client.prototype.fireLogin=function(){var c=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.LOGIN,a.user1.orbiter.Status.SUCCESS,this.getAccount().getUserID(),this.getClientID());this.dispatchEvent(c)};a.user1.orbiter.Client.prototype.fireLogoff=function(c){var d=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.LOGOFF,a.user1.orbiter.Status.SUCCESS,c,this.getClientID());this.dispatchEvent(d)};a.user1.orbiter.Client.prototype.fireSynchronize=function(){var c=new a.user1.orbiter.ClientEvent(a.user1.orbiter.ClientEvent.SYNCHRONIZE,null,null,null,this);this.dispatchEvent(c)};a.user1.orbiter.Client.prototype.dispose=function(){this.occupiedRoomIDs=null;this.attributeManager.dispose();this.attributeManager=null;this.clientID=null;this.log=null;this.account=null;this.customClients=null;this.messageManager=null;this.clientManager=null;this.roomManager=null;this.server=null;this.disposed=true};a.user1.orbiter.snapshot.ClientCountSnapshot=function(){a.user1.orbiter.snapshot.Snapshot.call(this);this.count=0;this.method=a.user1.orbiter.UPC.GET_CLIENTCOUNT_SNAPSHOT;this.hasStatus=true};a.user1.utils.extend(a.user1.orbiter.snapshot.ClientCountSnapshot,a.user1.orbiter.snapshot.Snapshot);a.user1.orbiter.snapshot.ClientCountSnapshot.prototype.setCount=function(c){this.count=c};a.user1.orbiter.snapshot.ClientCountSnapshot.prototype.getCount=function(){return this.count};a.user1.orbiter.ClientEvent=function(f,g,h,e,d,c,i){a.user1.events.Event.call(this,f);this.changedAttr=g;this.room=h;this.roomID=e;this.client=d;this.status=c;this.clientID=i};a.user1.utils.extend(a.user1.orbiter.ClientEvent,a.user1.events.Event);a.user1.orbiter.ClientEvent.JOIN_ROOM="JOIN_ROOM";a.user1.orbiter.ClientEvent.LEAVE_ROOM="LEAVE_ROOM";a.user1.orbiter.ClientEvent.OBSERVE_ROOM="OBSERVE_ROOM";a.user1.orbiter.ClientEvent.STOP_OBSERVING_ROOM="STOP_OBSERVING_ROOM";a.user1.orbiter.ClientEvent.OBSERVE="OBSERVE";a.user1.orbiter.ClientEvent.STOP_OBSERVING="STOP_OBSERVING";a.user1.orbiter.ClientEvent.OBSERVE_RESULT="OBSERVE_RESULT";a.user1.orbiter.ClientEvent.STOP_OBSERVING_RESULT="STOP_OBSERVING_RESULT";a.user1.orbiter.ClientEvent.SYNCHRONIZE="SYNCHRONIZE";a.user1.orbiter.ClientEvent.prototype.getClient=function(){return this.client};a.user1.orbiter.ClientEvent.prototype.getClientID=function(){if(this.client!=null){return this.client.getClientID()}else{return this.clientID}};a.user1.orbiter.ClientEvent.prototype.getRoom=function(){return this.room};a.user1.orbiter.ClientEvent.prototype.getRoomID=function(){return this.roomID};a.user1.orbiter.ClientEvent.prototype.getStatus=function(){return this.status};a.user1.orbiter.ClientEvent.prototype.toString=function(){return"[object ClientEvent]"};a.user1.orbiter.snapshot.ClientListSnapshot=function(){a.user1.orbiter.snapshot.Snapshot.call(this);this.clientList;this.method=a.user1.orbiter.UPC.GET_CLIENTLIST_SNAPSHOT};a.user1.utils.extend(a.user1.orbiter.snapshot.ClientListSnapshot,a.user1.orbiter.snapshot.Snapshot);a.user1.orbiter.snapshot.ClientListSnapshot.prototype.setClientList=function(c){this.clientList=c};a.user1.orbiter.snapshot.ClientListSnapshot.prototype.getClientList=function(){if(!this.clientList){return null}return this.clientList.slice()};a.user1.orbiter.ClientManager=function(d,c,h,e,g,f){a.user1.events.EventDispatcher.call(this);this.selfReference=null;this.defaultClientClass=null;this.lifetimeClientsRequested=0;this._isWatchingForClients;this._isWatchingForUsers;this._isWatchingForBannedAddresses;this.watchedClients=new a.user1.orbiter.ClientSet();this.observedClients=new a.user1.orbiter.ClientSet();this.bannedAddresses=[];this.clientCache=new a.user1.utils.LRUCache(5000);this.roomManager=d;this.accountManager=c;this.connectionManager=h;this.messageManager=e;this.server=g;this.log=f};a.user1.utils.extend(a.user1.orbiter.ClientManager,a.user1.events.EventDispatcher);a.user1.orbiter.ClientManager.prototype.requestClient=function(d){var c;if(d==null||d===""){throw new Error("[CLIENT_MANAGER] requestClient() called with empty clientID.")}c=this.getInternalClient(d);if(c===null){c=new a.user1.orbiter.Client(d,this,this.messageManager,this.roomManager,this.connectionManager,this.server,this.log);this.lifetimeClientsRequested++;this.clientCache.put(d,c)}return c};a.user1.orbiter.ClientManager.prototype.getClient=function(f,e){var c;var d;if(f===""||f==null){throw new Error("ClientManager.getClient() failed. Client ID must not be null or the empty string.")}c=this.getInternalClient(f);if(c===null){this.log.debug("[CLIENT_MANAGER] getClient() called for unknown client ID ["+f+"].");return null}else{d=c.getCustomClient(e);return d===null?c:d}};a.user1.orbiter.ClientManager.prototype.getClients=function(){var d=this.getInternalClients();var g=new Array();var e;var c;for(var f in d){c=d[f];e=c.getCustomClient(null);if(e!=null){g.push(e)}else{g.push(c)}}return g};a.user1.orbiter.ClientManager.prototype.getInternalClients=function(){var c=a.user1.utils.ObjectUtil.combine(this.roomManager.getAllClients(),this.accountManager.getClientsForObservedAccounts(),this.observedClients.getAll(),this.watchedClients.getAll());if(this.selfReference!=null){c[this.selfReference.getClientID()]=this.selfReference}return c};a.user1.orbiter.ClientManager.prototype.getInternalClient=function(e){var d;if(e===""||e==null){throw new Error("[CLIENT_MANAGER] this.getInternalClient() failed. Client ID must not be null or the empty string.")}d=this.clientCache.get(e);if(d!=null){return d}else{var c=this.roomManager.getAllClients();d=c[e];if(d!=null){this.clientCache.put(e,d);return d}c=this.accountManager.getClientsForObservedAccounts();d=c[e];if(d!=null){this.clientCache.put(e,d);return d}d=this.observedClients.getByClientID(e);if(d!=null){this.clientCache.put(e,d);return d}d=this.watchedClients.getByClientID(e);if(d!=null){this.clientCache.put(e,d);return d}}return null};a.user1.orbiter.ClientManager.prototype.getClientByUserID=function(f,h){var e;var g;var i;if(f===""||f==null){throw new Error("ClientManager.getClientByUserID() failed. User ID must not be null or the empty string.")}var d;var c=this.getInternalClients();for(var j in c){d=c[j];i=d.getAccount();if(i!=null&&i.getUserID()===f){e=d;break}}if(e===null){this.log.debug("[CLIENT_MANAGER] getClientByUserID() called for unknown user ID ["+f+"].");return null}else{g=e.getCustomClient(h);return g===null?e:g}};a.user1.orbiter.ClientManager.prototype.getClientByAttribute=function(f,h,e,j){var g;if(f==null||f===""){return null}var d;var c=this.getInternalClients();for(var i in c){d=c[i];if(d.getAttribute(f,e)===h){g=d.getCustomClient(j);return g===null?d:g}}return null};a.user1.orbiter.ClientManager.prototype.clientIsKnown=function(c){return this.getInternalClients()[c]!==null};a.user1.orbiter.ClientManager.prototype.watchForClients=function(){this.messageManager.sendUPC(a.user1.orbiter.UPC.WATCH_FOR_CLIENTS)};a.user1.orbiter.ClientManager.prototype.stopWatchingForClients=function(){this.messageManager.sendUPC(a.user1.orbiter.UPC.STOP_WATCHING_FOR_CLIENTS)};a.user1.orbiter.ClientManager.prototype.isWatchingForClients=function(){return this._isWatchingForClients};a.user1.orbiter.ClientManager.prototype.hasWatchedClient=function(c){return this.watchedClients.containsClientID(c)};a.user1.orbiter.ClientManager.prototype.setIsWatchingForClients=function(c){this._isWatchingForClients=c};a.user1.orbiter.ClientManager.prototype.addWatchedClient=function(c){var d=c.getCustomClient(null);this.watchedClients.add(c);this.fireClientConnected(d===null?c:d)};a.user1.orbiter.ClientManager.prototype.removeWatchedClient=function(c){this.watchedClients.removeByClientID(c)};a.user1.orbiter.ClientManager.prototype.removeAllWatchedClients=function(){this.watchedClients.removeAll()};a.user1.orbiter.ClientManager.prototype.deserializeWatchedClients=function(d){var j=d.split(a.user1.orbiter.Tokens.RS);var e=new Object();var f=this.watchedClients.getAll();var k=j.length;var m;var c;this.setIsWatchingForClients(true);for(var h=k-2;h>=0;h-=2){e[j[h]]=j[h+1]}var l;for(var g in f){if(!e.hasOwnProperty(g)){delete f[g]}}for(g in e){if(g!=""){if(!this.watchedClients.containsClientID(g)){m=this.requestClient(g);c=e[g];if(c!=""){m.setAccount(this.accountManager.requestAccount(c))}this.addWatchedClient(m)}}else{throw new Error("[CLIENT_MANAGER] Received empty client id in client list (u101).")}}this.fireSynchronize()};a.user1.orbiter.ClientManager.prototype.observeClient=function(c){this.messageManager.sendUPC(a.user1.orbiter.UPC.OBSERVE_CLIENT,c)};a.user1.orbiter.ClientManager.prototype.isObservingClient=function(c){return this.observedClients.containsClientID(c)};a.user1.orbiter.ClientManager.prototype.addObservedClient=function(c){var d=c.getCustomClient(null);this.observedClients.add(c);this.fireObserveClient(d===null?c:d)};a.user1.orbiter.ClientManager.prototype.removeObservedClient=function(e){var c=this.observedClients.removeByClientID(e);var d;if(c!=null){d=c.getCustomClient(null);this.fireStopObservingClient(d===null?c:d)}};a.user1.orbiter.ClientManager.prototype.removeAllObservedClients=function(){this.observedClients.removeAll()};a.user1.orbiter.ClientManager.prototype.getAttributeForClients=function(h,e,f){var g=new Array();var c;for(var d=0;d<h.length;d++){c=this.getInternalClient(h[d]);if(c!=null){g.push({clientID:h[d],value:c.getAttribute(e,f)})}else{this.log.debug("[CLIENT_MANAGER] Attribute retrieval failed during  getAttributeForClients(). Unknown client ID ["+h[d]+"]")}}return g};a.user1.orbiter.ClientManager.prototype.setDefaultClientClass=function(c){this.defaultClientClass=c};a.user1.orbiter.ClientManager.prototype.getDefaultClientClass=function(){return this.defaultClientClass};a.user1.orbiter.ClientManager.prototype.self=function(){return this.selfReference};a.user1.orbiter.ClientManager.prototype.setSelf=function(c){this.selfReference=c;c.setIsSelf()};a.user1.orbiter.ClientManager.prototype.sendMessage=function(c,g,f){var e=Array.prototype.slice.call(arguments).slice(3);var d;if(c==null||c==""){this.log.warn("[CLIENT_MANAGER] sendMessage() failed. No messageName supplied.");return}d=[a.user1.orbiter.UPC.SEND_MESSAGE_TO_CLIENTS,c,g.join(a.user1.orbiter.Tokens.RS),f!=null?f.toXMLString():""];this.messageManager.sendUPC.apply(this.messageManager,d.concat(e))};a.user1.orbiter.ClientManager.prototype.ban=function(c,e,d){this.messageManager.sendUPC(a.user1.orbiter.UPC.BAN,c,null,e.toString(),d)};a.user1.orbiter.ClientManager.prototype.unban=function(c){this.messageManager.sendUPC(a.user1.orbiter.UPC.UNBAN,c)};a.user1.orbiter.ClientManager.prototype.kickClient=function(c){if(c==null||c==""){this.log.warn("[CLIENT_MANAGER] Kick attempt failed. No clientID supplied.")}this.messageManager.sendUPC(a.user1.orbiter.UPC.KICK_CLIENT,c)};a.user1.orbiter.ClientManager.prototype.watchForBannedAddresses=function(){this.messageManager.sendUPC(a.user1.orbiter.UPC.WATCH_FOR_BANNED_ADDRESSES)};a.user1.orbiter.ClientManager.prototype.stopWatchingForBannedAddresses=function(){this.messageManager.sendUPC(a.user1.orbiter.UPC.STOP_WATCHING_FOR_BANNED_ADDRESSES)};a.user1.orbiter.ClientManager.prototype.setWatchedBannedAddresses=function(c){this.bannedAddresses=c;this.fireSynchronizeBanlist()};a.user1.orbiter.ClientManager.prototype.addWatchedBannedAddress=function(c){this.bannedAddresses.push(c);this.fireAddressBanned(c)};a.user1.orbiter.ClientManager.prototype.removeWatchedBannedAddress=function(d){var c=a.user1.util.ArrayUtil.indexOf(bannedAddresses,d);if(c===-1){this.log.warn("[CLIENT_MANAGER] Request to remove watched banned address failed. Address not found.")}this.bannedAddresses.splice(c,1);this.fireAddressUnbanned(d)};a.user1.orbiter.ClientManager.prototype.setIsWatchingForBannedAddresses=function(c){this._isWatchingForBannedAddresses=c};a.user1.orbiter.ClientManager.prototype.isWatchingForBannedAddresses=function(){return this._isWatchingForBannedAddresses};a.user1.orbiter.ClientManager.prototype.getBannedAddresses=function(){return this.bannedAddresses.slice(0)};a.user1.orbiter.ClientManager.prototype.getLifetimeNumClientsKnown=function(){return this.lifetimeClientsRequested-this.connectionManager.getReadyCount()};a.user1.orbiter.ClientManager.prototype.getNumClients=function(){return a.user1.utils.ObjectUtil.length(this.getInternalClients())};a.user1.orbiter.ClientManager.prototype.getNumClientsOnServer=function(){return this.watchedClients.length()};a.user1.orbiter.ClientManager.prototype.fireObserveClient=function(c){var d=new a.user1.orbiter.ClientEvent(a.user1.orbiter.ClientEvent.OBSERVE,null,null,null,c);this.dispatchEvent(d)};a.user1.orbiter.ClientManager.prototype.fireStopObservingClient=function(c){var d=new a.user1.orbiter.ClientEvent(a.user1.orbiter.ClientEvent.STOP_OBSERVING,null,null,null,c);this.dispatchEvent(d)};a.user1.orbiter.ClientManager.prototype.fireClientConnected=function(c){this.dispatchEvent(new a.user1.orbiter.ClientManagerEvent(a.user1.orbiter.ClientManagerEvent.CLIENT_CONNECTED,c.getClientID(),c))};a.user1.orbiter.ClientManager.prototype.fireClientDisconnected=function(c){this.dispatchEvent(new a.user1.orbiter.ClientManagerEvent(a.user1.orbiter.ClientManagerEvent.CLIENT_DISCONNECTED,c.getClientID(),c))};a.user1.orbiter.ClientManager.prototype.fireStopWatchingForClientsResult=function(c){this.dispatchEvent(new a.user1.orbiter.ClientManagerEvent(a.user1.orbiter.ClientManagerEvent.STOP_WATCHING_FOR_CLIENTS_RESULT,null,null,null,c))};a.user1.orbiter.ClientManager.prototype.fireWatchForClientsResult=function(c){this.dispatchEvent(new a.user1.orbiter.ClientManagerEvent(a.user1.orbiter.ClientManagerEvent.WATCH_FOR_CLIENTS_RESULT,null,null,null,c))};a.user1.orbiter.ClientManager.prototype.fireObserveClientResult=function(d,c){this.dispatchEvent(new a.user1.orbiter.ClientEvent(a.user1.orbiter.ClientEvent.OBSERVE_RESULT,null,null,null,this.getClient(d),c,d))};a.user1.orbiter.ClientManager.prototype.fireStopObservingClientResult=function(d,c){this.dispatchEvent(new a.user1.orbiter.ClientEvent(a.user1.orbiter.ClientEvent.STOP_OBSERVING_RESULT,null,null,null,this.getClient(d),c,d))};a.user1.orbiter.ClientManager.prototype.fireKickClientResult=function(d,c){this.dispatchEvent(new a.user1.orbiter.ClientManagerEvent(a.user1.orbiter.ClientManagerEvent.KICK_RESULT,d,null,null,c))};a.user1.orbiter.ClientManager.prototype.fireBanClientResult=function(d,e,c){this.dispatchEvent(new a.user1.orbiter.ClientManagerEvent(a.user1.orbiter.ClientManagerEvent.BAN_RESULT,e,null,d,c))};a.user1.orbiter.ClientManager.prototype.fireUnbanClientResult=function(d,c){this.dispatchEvent(new a.user1.orbiter.ClientManagerEvent(a.user1.orbiter.ClientManagerEvent.UNBAN_RESULT,null,null,d,c))};a.user1.orbiter.ClientManager.prototype.fireWatchForBannedAddressesResult=function(c){this.dispatchEvent(new a.user1.orbiter.ClientManagerEvent(a.user1.orbiter.ClientManagerEvent.WATCH_FOR_BANNED_ADDRESSES_RESULT,null,null,null,c))};a.user1.orbiter.ClientManager.prototype.fireStopWatchingForBannedAddressesResult=function(c){this.dispatchEvent(new a.user1.orbiter.ClientManagerEvent(a.user1.orbiter.ClientManagerEvent.STOP_WATCHING_FOR_BANNED_ADDRESSES_RESULT,null,null,null,c))};a.user1.orbiter.ClientManager.prototype.fireAddressBanned=function(c){this.dispatchEvent(new a.user1.orbiter.ClientManagerEvent(a.user1.orbiter.ClientManagerEvent.ADDRESS_BANNED,null,null,c))};a.user1.orbiter.ClientManager.prototype.fireAddressUnbanned=function(c){this.dispatchEvent(new a.user1.orbiter.ClientManagerEvent(a.user1.orbiter.ClientManagerEvent.ADDRESS_UNBANNED,null,null,c))};a.user1.orbiter.ClientManager.prototype.fireSynchronizeBanlist=function(){this.dispatchEvent(new a.user1.orbiter.ClientManagerEvent(a.user1.orbiter.ClientManagerEvent.SYNCHRONIZE_BANLIST))};a.user1.orbiter.ClientManager.prototype.fireSynchronize=function(){this.dispatchEvent(new a.user1.orbiter.ClientManagerEvent(a.user1.orbiter.ClientManagerEvent.SYNCHRONIZE))};a.user1.orbiter.ClientManager.prototype.cleanup=function(){this.log.info("[CLIENT_MANAGER] Cleaning resources.");this.selfReference=null;this.removeAllObservedClients();this.removeAllWatchedClients();this.setIsWatchingForClients(false)};a.user1.orbiter.ClientManager.prototype.dispose=function(){this.log.info("[CLIENT_MANAGER] Disposing resources.");this.watchedClients=null;this.observedClients=null;this.defaultClientClass=null};a.user1.orbiter.ClientManagerEvent=function(f,g,e,d,c){a.user1.events.Event.call(this,f);this.clientID=g;this.client=e;this.address=d;this.status=c};a.user1.utils.extend(a.user1.orbiter.ClientManagerEvent,a.user1.events.Event);a.user1.orbiter.ClientManagerEvent.WATCH_FOR_CLIENTS_RESULT="WATCH_FOR_CLIENTS_RESULT";a.user1.orbiter.ClientManagerEvent.STOP_WATCHING_FOR_CLIENTS_RESULT="STOP_WATCHING_FOR_CLIENTS_RESULT";a.user1.orbiter.ClientManagerEvent.CLIENT_DISCONNECTED="CLIENT_DISCONNECTED";a.user1.orbiter.ClientManagerEvent.CLIENT_CONNECTED="CLIENT_CONNECTED";a.user1.orbiter.ClientManagerEvent.KICK_RESULT="KICK_RESULT";a.user1.orbiter.ClientManagerEvent.BAN_RESULT="BAN_RESULT";a.user1.orbiter.ClientManagerEvent.UNBAN_RESULT="UNBAN_RESULT";a.user1.orbiter.ClientManagerEvent.WATCH_FOR_BANNED_ADDRESSES_RESULT="WATCH_FOR_BANNED_ADDRESSES_RESULT";a.user1.orbiter.ClientManagerEvent.STOP_WATCHING_FOR_BANNED_ADDRESSES_RESULT="STOP_WATCHING_FOR_BANNED_ADDRESSES_RESULT";a.user1.orbiter.ClientManagerEvent.ADDRESS_BANNED="ADDRESS_BANNED";a.user1.orbiter.ClientManagerEvent.ADDRESS_UNBANNED="ADDRESS_UNBANNED";a.user1.orbiter.ClientManagerEvent.SYNCHRONIZE_BANLIST="SYNCHRONIZE_BANLIST";a.user1.orbiter.ClientManagerEvent.SYNCHRONIZE="SYNCHRONIZE";a.user1.orbiter.ClientManagerEvent.prototype.getClientID=function(){return this.clientID};a.user1.orbiter.ClientManagerEvent.prototype.getClient=function(){return this.client};a.user1.orbiter.ClientManagerEvent.prototype.getAddress=function(){return this.address};a.user1.orbiter.ClientManagerEvent.prototype.getStatus=function(){return this.status};a.user1.orbiter.ClientManagerEvent.prototype.toString=function(){return"[object ClientManagerEvent]"};a.user1.orbiter.ClientManifest=function(){this.clientID=null;this.userID=null;this.persistentAttributes=new a.user1.orbiter.AttributeCollection();this.transientAttributes=new a.user1.orbiter.AttributeCollection();this.occupiedRoomIDs=null;this.observedRoomIDs=null};a.user1.orbiter.ClientManifest.prototype.deserialize=function(j,d,h,f,c,g){this.clientID=j==""?null:j;this.userID=d==""?null:d;this.deserializeOccupiedRoomIDs(h);this.deserializeObservedRoomIDs(f);this.deserializeAttributesByScope(a.user1.orbiter.Tokens.GLOBAL_ATTR,c);for(var e=0;e<g.length;e+=2){this.deserializeAttributesByScope(g[e],g[e+1])}};a.user1.orbiter.ClientManifest.prototype.deserializeOccupiedRoomIDs=function(c){if(c==null){return}if(c==""){this.occupiedRoomIDs=[];return}this.occupiedRoomIDs=c.split(a.user1.orbiter.Tokens.RS)};a.user1.orbiter.ClientManifest.prototype.deserializeObservedRoomIDs=function(c){if(c==null){return}if(c==""){this.observedRoomIDs=[];return}this.observedRoomIDs=c.split(a.user1.orbiter.Tokens.RS)};a.user1.orbiter.ClientManifest.prototype.deserializeAttributesByScope=function(e,c){var f;if(c==null||c==""){return}f=c.split(a.user1.orbiter.Tokens.RS);for(var d=f.length-3;d>=0;d-=3){if(parseInt(f[d+2])&a.user1.orbiter.AttributeOptions.FLAG_PERSISTENT){this.persistentAttributes.setAttribute(f[d],f[d+1],e)}else{this.transientAttributes.setAttribute(f[d],f[d+1],e)}}};a.user1.orbiter.ClientSet=function(){this.clients=new a.user1.utils.UDictionary()};a.user1.orbiter.ClientSet.prototype.add=function(c){this.clients[c.getClientID()]=c};a.user1.orbiter.ClientSet.prototype.remove=function(c){var c=clients[c.getClientID()];delete this.clients[c.getClientID()];return c};a.user1.orbiter.ClientSet.prototype.removeAll=function(){this.clients=new a.user1.utils.UDictionary()};a.user1.orbiter.ClientSet.prototype.removeByClientID=function(d){var c=this.clients[d];delete this.clients[d];return c};a.user1.orbiter.ClientSet.prototype.contains=function(c){return this.clients[c.getClientID()]!=null};a.user1.orbiter.ClientSet.prototype.containsClientID=function(c){if(c==""||c==null){return false}return this.getByClientID(c)!=null};a.user1.orbiter.ClientSet.prototype.getByClientID=function(c){return this.clients[c]};a.user1.orbiter.ClientSet.prototype.getByUserID=function(d){var e;var c;for(var f in this.clients){c=this.clients[f];e=c.getAccount();if(e!=null&&e.getUserID()==d){return c}}return null};a.user1.orbiter.ClientSet.prototype.getAll=function(){return this.clients};a.user1.orbiter.ClientSet.prototype.getAllIDs=function(){var c=[];for(var d in this.clients){c.push(d)}return c};a.user1.orbiter.ClientSet.prototype.length=function(){return a.user1.utils.ObjectUtil.length(this.clients)};a.user1.orbiter.snapshot.ClientSnapshot=function(c){a.user1.orbiter.snapshot.Snapshot.call(this);this.manifest=null;this.method=a.user1.orbiter.UPC.GET_CLIENT_SNAPSHOT;this.args=[c];this.hasStatus=true};a.user1.utils.extend(a.user1.orbiter.snapshot.ClientSnapshot,a.user1.orbiter.snapshot.Snapshot);a.user1.orbiter.snapshot.ClientSnapshot.prototype.setManifest=function(c){this.manifest=c};a.user1.orbiter.snapshot.ClientSnapshot.prototype.getAttribute=function(c,d){if(!this.manifest){return null}return this.manifest.transientAttributes.getAttribute(c,d)};a.user1.orbiter.snapshot.ClientSnapshot.prototype.getAttributes=function(){if(!this.manifest){return null}return this.manifest.transientAttributes.getAll()};a.user1.orbiter.snapshot.ClientSnapshot.prototype.getClientID=function(){if(!this.manifest){return null}return this.manifest.clientID};a.user1.orbiter.snapshot.ClientSnapshot.prototype.getUserID=function(){if(!this.manifest){return null}return this.manifest.userID};a.user1.orbiter.snapshot.ClientSnapshot.prototype.getOccupiedRoomIDs=function(){if(!this.manifest){return null}return this.manifest.occupiedRoomIDs.slice()};a.user1.orbiter.snapshot.ClientSnapshot.prototype.getObservedRoomIDs=function(){if(!this.manifest){return null}return this.manifest.observedRoomIDs.slice()};a.user1.orbiter.CollectionEvent=function(c,d){a.user1.events.Event.call(this,c);this.item=d};a.user1.utils.extend(a.user1.orbiter.CollectionEvent,a.user1.events.Event);a.user1.orbiter.CollectionEvent.REMOVE_ITEM="REMOVE_ITEM";a.user1.orbiter.CollectionEvent.ADD_ITEM="ADD_ITEM";a.user1.orbiter.CollectionEvent.prototype.getItem=function(){return this.item};a.user1.orbiter.CollectionEvent.prototype.toString=function(){return"[object CollectionEvent]"};a.user1.orbiter.filters.CompareType=new Object();a.user1.orbiter.filters.CompareType.EQUAL="eq";a.user1.orbiter.filters.CompareType.NOT_EQUAL="ne";a.user1.orbiter.filters.CompareType.GREATER_THAN="gt";a.user1.orbiter.filters.CompareType.GREATER_THAN_OR_EQUAL="ge";a.user1.orbiter.filters.CompareType.LESS_THAN="lt";a.user1.orbiter.filters.CompareType.LESS_THAN_OR_EQUAL="le";a.user1.orbiter.CoreEventLogger=function(e,d,h,f,g,c,i){this.log=e;h.addEventListener(a.user1.orbiter.RoomManagerEvent.STOP_WATCHING_FOR_ROOMS_RESULT,this.stopWatchingForRoomsResultListener,this,a.user1.utils.integer.MAX_VALUE);h.addEventListener(a.user1.orbiter.RoomManagerEvent.WATCH_FOR_ROOMS_RESULT,this.watchForRoomsResultListener,this,a.user1.utils.integer.MAX_VALUE);h.addEventListener(a.user1.orbiter.RoomManagerEvent.CREATE_ROOM_RESULT,this.createRoomResultListener,this,a.user1.utils.integer.MAX_VALUE);h.addEventListener(a.user1.orbiter.RoomManagerEvent.REMOVE_ROOM_RESULT,this.removeRoomResultListener,this,a.user1.utils.integer.MAX_VALUE);h.addEventListener(a.user1.orbiter.RoomManagerEvent.ROOM_ADDED,this.roomAddedListener,this,a.user1.utils.integer.MAX_VALUE);h.addEventListener(a.user1.orbiter.RoomManagerEvent.ROOM_REMOVED,this.roomRemovedListener,this,a.user1.utils.integer.MAX_VALUE);h.addEventListener(a.user1.orbiter.RoomManagerEvent.ROOM_COUNT,this.roomCountListener,this,a.user1.utils.integer.MAX_VALUE);h.addEventListener(a.user1.orbiter.RoomEvent.JOIN_RESULT,this.joinRoomResultListener,this,a.user1.utils.integer.MAX_VALUE);h.addEventListener(a.user1.orbiter.RoomEvent.LEAVE_RESULT,this.leaveRoomResultListener,this,a.user1.utils.integer.MAX_VALUE);h.addEventListener(a.user1.orbiter.RoomEvent.OBSERVE_RESULT,this.observeRoomResultListener,this,a.user1.utils.integer.MAX_VALUE);h.addEventListener(a.user1.orbiter.RoomEvent.STOP_OBSERVING_RESULT,this.stopObservingRoomResultListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountManagerEvent.CREATE_ACCOUNT_RESULT,this.createAccountResultListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountManagerEvent.REMOVE_ACCOUNT_RESULT,this.removeAccountResultListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountEvent.CHANGE_PASSWORD_RESULT,this.changePasswordResultListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountManagerEvent.ACCOUNT_ADDED,this.accountAddedListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountManagerEvent.ACCOUNT_REMOVED,this.accountRemovedListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountEvent.LOGOFF_RESULT,this.logoffResultListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountEvent.LOGOFF,this.logoffListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountEvent.LOGIN_RESULT,this.loginResultListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountEvent.LOGIN,this.loginListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountEvent.CHANGE_PASSWORD,this.changePasswordListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountEvent.OBSERVE,this.observeAccountListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountEvent.STOP_OBSERVING,this.stopObservingAccountListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountManagerEvent.STOP_WATCHING_FOR_ACCOUNTS_RESULT,this.stopWatchingForAccountsResultListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountManagerEvent.WATCH_FOR_ACCOUNTS_RESULT,this.watchForAccountsResultListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountEvent.OBSERVE_RESULT,this.observeAccountResultListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountEvent.STOP_OBSERVING_RESULT,this.stopObservingAccountResultListener,this,a.user1.utils.integer.MAX_VALUE);f.addEventListener(a.user1.orbiter.AccountManagerEvent.SYNCHRONIZE,this.synchronizeAccountsListener,this,a.user1.utils.integer.MAX_VALUE);g.addEventListener(a.user1.orbiter.ServerEvent.TIME_SYNC,this.timeSyncListener,this,a.user1.utils.integer.MAX_VALUE);d.addEventListener(a.user1.orbiter.ConnectionManagerEvent.CONNECT_FAILURE,this.connectFailureListener,this,a.user1.utils.integer.MAX_VALUE);d.addEventListener(a.user1.orbiter.ConnectionManagerEvent.CLIENT_KILL_CONNECT,this.clientKillConnectListener,this,a.user1.utils.integer.MAX_VALUE);d.addEventListener(a.user1.orbiter.ConnectionManagerEvent.SERVER_KILL_CONNECT,this.serverKillConnectListener,this,a.user1.utils.integer.MAX_VALUE);c.addEventListener(a.user1.orbiter.ClientEvent.OBSERVE,this.observeClientListener,this,a.user1.utils.integer.MAX_VALUE);c.addEventListener(a.user1.orbiter.ClientEvent.STOP_OBSERVING,this.stopObservingClientListener,this,a.user1.utils.integer.MAX_VALUE);c.addEventListener(a.user1.orbiter.ClientManagerEvent.CLIENT_CONNECTED,this.clientConnectedListener,this,a.user1.utils.integer.MAX_VALUE);c.addEventListener(a.user1.orbiter.ClientManagerEvent.CLIENT_DISCONNECTED,this.clientDisconnectedListener,this,a.user1.utils.integer.MAX_VALUE);c.addEventListener(a.user1.orbiter.ClientManagerEvent.STOP_WATCHING_FOR_CLIENTS_RESULT,this.stopWatchingForClientsResultListener,this,a.user1.utils.integer.MAX_VALUE);c.addEventListener(a.user1.orbiter.ClientManagerEvent.WATCH_FOR_CLIENTS_RESULT,this.watchForClientsResultListener,this,a.user1.utils.integer.MAX_VALUE);c.addEventListener(a.user1.orbiter.ClientEvent.OBSERVE_RESULT,this.observeClientResultListener,this,a.user1.utils.integer.MAX_VALUE);c.addEventListener(a.user1.orbiter.ClientEvent.STOP_OBSERVING_RESULT,this.stopObservingClientResultListener,this,a.user1.utils.integer.MAX_VALUE);c.addEventListener(a.user1.orbiter.ClientManagerEvent.SYNCHRONIZE,this.synchronizeClientsListener,this,a.user1.utils.integer.MAX_VALUE);c.addEventListener(a.user1.orbiter.ClientManagerEvent.ADDRESS_BANNED,this.addressBannedListener,this,a.user1.utils.integer.MAX_VALUE);c.addEventListener(a.user1.orbiter.ClientManagerEvent.ADDRESS_UNBANNED,this.addressUnbannedListener,this,a.user1.utils.integer.MAX_VALUE);c.addEventListener(a.user1.orbiter.ClientManagerEvent.STOP_WATCHING_FOR_BANNED_ADDRESSES_RESULT,this.stopWatchingForBannedAddressesResultListener,this,a.user1.utils.integer.MAX_VALUE);c.addEventListener(a.user1.orbiter.ClientManagerEvent.WATCH_FOR_BANNED_ADDRESSES_RESULT,this.watchForBannedAddressesResultListener,this,a.user1.utils.integer.MAX_VALUE);c.addEventListener(a.user1.orbiter.ClientManagerEvent.SYNCHRONIZE_BANLIST,this.synchronizeBanlistListener,this,a.user1.utils.integer.MAX_VALUE);i.addEventListener(a.user1.orbiter.OrbiterEvent.READY,this.readyListener,this,a.user1.utils.integer.MAX_VALUE);i.addEventListener(a.user1.orbiter.OrbiterEvent.PROTOCOL_INCOMPATIBLE,this.protocolIncompatibleListener,this,a.user1.utils.integer.MAX_VALUE);i.addEventListener(a.user1.orbiter.OrbiterEvent.CONNECT_REFUSED,this.connectRefusedListener,this,a.user1.utils.integer.MAX_VALUE);this.log.addEventListener(a.user1.logger.LogEvent.LEVEL_CHANGE,this.logLevelChangeListener,this,a.user1.utils.integer.MAX_VALUE)};a.user1.orbiter.CoreEventLogger.prototype.logLevelChangeListener=function(c){this.log.info("[LOGGER] Log level set to: ["+c.getLevel()+"].")};a.user1.orbiter.CoreEventLogger.prototype.readyListener=function(c){this.log.info("[ORBITER] Orbiter now connected and ready.")};a.user1.orbiter.CoreEventLogger.prototype.protocolIncompatibleListener=function(c){this.log.warn("[ORBITER] Orbiter UPC protocol incompatibility detected. Client UPC version: "+c.target.getSystem().getUPCVersion().toString()+". Server version: "+c.getServerUPCVersion().toString()+".")};a.user1.orbiter.CoreEventLogger.prototype.connectRefusedListener=function(c){if(c.getConnectionRefusal().reason==a.user1.orbiter.ConnectionRefusalReason.BANNED){this.log.warn("[ORBITER] Union Server refused the connection because the client address is banned for the following reason: ["+c.getConnectionRefusal().banReason+"]. The ban started at: ["+new Date(c.getConnectionRefusal().bannedAt)+"]. The ban duration is: ["+a.user1.utils.NumericFormatter.msToElapsedDayHrMinSec(c.getConnectionRefusal().banDuration*1000)+"].")}else{this.log.warn("[ORBITER] Union Server refused the connection. Reason: ["+c.getConnectionRefusal().reason+"]. Description: ["+c.getConnectionRefusal().description+"].")}};a.user1.orbiter.CoreEventLogger.prototype.timeSyncListener=function(c){this.log.info("[SERVER] Server time synchronized with client. Approximate time on server is now: "+new Date(c.target.getServerTime()))};a.user1.orbiter.CoreEventLogger.prototype.createAccountResultListener=function(c){this.log.info("[ACCOUNT_MANAGER] Result for createAccount(). Account: "+c.getUserID()+", Status: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.removeAccountResultListener=function(c){this.log.info("[ACCOUNT_MANAGER] Result for removeAccount(). Account: "+c.getUserID()+", Status: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.changePasswordResultListener=function(c){this.log.info("[ACCOUNT_MANAGER] Result for changePassword(). Account: "+c.getUserID()+", Status: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.accountAddedListener=function(c){this.log.info("[ACCOUNT_MANAGER] Account added: "+c.getAccount())};a.user1.orbiter.CoreEventLogger.prototype.accountRemovedListener=function(c){this.log.info("[ACCOUNT_MANAGER] Account removed: "+c.getAccount())};a.user1.orbiter.CoreEventLogger.prototype.logoffResultListener=function(c){this.log.info("[ACCOUNT_MANAGER] Result for logoff(). Account: "+c.getAccount()+", Status: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.logoffListener=function(c){this.log.info("[ACCOUNT_MANAGER] Account logged off: "+c.getAccount())};a.user1.orbiter.CoreEventLogger.prototype.loginResultListener=function(c){this.log.info("[ACCOUNT_MANAGER] Result for login(). Account: "+c.getAccount()+", Status: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.loginListener=function(c){this.log.info("[ACCOUNT_MANAGER] Account logged in: "+c.getAccount())};a.user1.orbiter.CoreEventLogger.prototype.changePasswordListener=function(c){this.log.info("[ACCOUNT_MANAGER] Password changed for account: "+c.getUserID())};a.user1.orbiter.CoreEventLogger.prototype.observeAccountListener=function(c){this.log.info("[ACCOUNT_MANAGER] Account observed: "+c.getAccount())};a.user1.orbiter.CoreEventLogger.prototype.stopObservingAccountListener=function(c){this.log.info("[ACCOUNT_MANAGER] Stopped observing account: "+c.getUserID())};a.user1.orbiter.CoreEventLogger.prototype.stopWatchingForAccountsResultListener=function(c){this.log.info("[SERVER] 'Stop watching for accounts' result: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.watchForAccountsResultListener=function(c){this.log.info("[ACCOUNT_MANAGER] 'Watch for accounts' result: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.observeAccountResultListener=function(c){this.log.info("[ACCOUNT_MANAGER] 'Observe account result' for account: "+c.getAccount()+", Status: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.stopObservingAccountResultListener=function(c){this.log.info("[ACCOUNT_MANAGER] 'Stop observing account result' for account: "+c.getUserID()+", Status: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.synchronizeAccountsListener=function(c){this.log.info("[ACCOUNT_MANAGER] User account list synchronized with server.")};a.user1.orbiter.CoreEventLogger.prototype.connectFailureListener=function(c){this.log.info("[CONNECTION_MANAGER] "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.serverKillConnectListener=function(c){this.log.info("[CONNECTION_MANAGER] Server closed the connection.")};a.user1.orbiter.CoreEventLogger.prototype.clientKillConnectListener=function(c){this.log.info("[CONNECTION_MANAGER] Connection to server closed by client.")};a.user1.orbiter.CoreEventLogger.prototype.watchForRoomsResultListener=function(c){this.log.info("[ROOM_MANAGER] 'Watch for rooms' result for qualifier ["+c.getRoomIdQualifier()+"]: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.stopWatchingForRoomsResultListener=function(c){this.log.info("[ROOM_MANAGER] 'Stop watching for rooms' result for qualifier ["+c.getRoomIdQualifier()+"]: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.createRoomResultListener=function(c){this.log.info("[ROOM_MANAGER] Room creation result for room ["+c.getRoomID()+"]: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.removeRoomResultListener=function(c){this.log.info("[ROOM_MANAGER] Room removal result for room ["+c.getRoomID()+"]: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.roomAddedListener=function(c){this.log.info("[ROOM_MANAGER] Room added: "+c.getRoom()+".")};a.user1.orbiter.CoreEventLogger.prototype.roomRemovedListener=function(c){this.log.info("[ROOM_MANAGER] Room removed: "+c.getRoom()+".")};a.user1.orbiter.CoreEventLogger.prototype.roomCountListener=function(c){this.log.info("[ROOM_MANAGER] New room count: "+c.getNumRooms()+".")};a.user1.orbiter.CoreEventLogger.prototype.joinRoomResultListener=function(c){this.log.info("[ROOM_MANAGER] Join result for room ["+c.getRoomID()+"]: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.leaveRoomResultListener=function(c){this.log.info("[ROOM_MANAGER] Leave result for room ["+c.getRoomID()+"]: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.observeRoomResultListener=function(c){this.log.info("[ROOM_MANAGER] Observe result for room ["+c.getRoomID()+"]: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.stopObservingRoomResultListener=function(c){this.log.info("[ROOM_MANAGER] Stop observing result for room ["+c.getRoomID()+"]: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.observeClientListener=function(c){this.log.info("[CLIENT_MANAGER] Client observed: "+c.getClient())};a.user1.orbiter.CoreEventLogger.prototype.stopObservingClientListener=function(c){this.log.info("[CLIENT_MANAGER] Stopped observing client: "+c.getClient())};a.user1.orbiter.CoreEventLogger.prototype.clientConnectedListener=function(c){this.log.info("[CLIENT_MANAGER] Foreign client connected. ClientID: ["+c.getClientID()+"].")};a.user1.orbiter.CoreEventLogger.prototype.clientDisconnectedListener=function(c){this.log.info("[CLIENT_MANAGER] Foreign client disconnected. ClientID: ["+c.getClientID()+"].")};a.user1.orbiter.CoreEventLogger.prototype.stopWatchingForClientsResultListener=function(c){this.log.info("[CLIENT_MANAGER] 'Stop watching for clients' result: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.watchForClientsResultListener=function(c){this.log.info("[CLIENT_MANAGER] 'Watch for clients' result: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.observeClientResultListener=function(c){this.log.info("[CLIENT_MANAGER] 'Observe client' result for client: "+c.getClient()+", status: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.stopObservingClientResultListener=function(c){this.log.info("[CLIENT_MANAGER] 'Stop observing client' result for client: "+c.getClient()+", status: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.synchronizeClientsListener=function(c){this.log.info("[CLIENT_MANAGER] Client list synchronized with server.")};a.user1.orbiter.CoreEventLogger.prototype.addressBannedListener=function(c){this.log.info("[CLIENT_MANAGER] Client address banned: ["+c.getAddress()+"].")};a.user1.orbiter.CoreEventLogger.prototype.addressUnbannedListener=function(c){this.log.info("[CLIENT_MANAGER] Client address unbanned. ClientID: ["+c.getAddress()+"].")};a.user1.orbiter.CoreEventLogger.prototype.stopWatchingForBannedAddressesResultListener=function(c){this.log.info("[CLIENT_MANAGER] 'Stop watching for banned addresses' result: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.watchForBannedAddressesResultListener=function(c){this.log.info("[CLIENT_MANAGER] 'Watch for banned addresses' result: "+c.getStatus())};a.user1.orbiter.CoreEventLogger.prototype.synchronizeBanlistListener=function(c){this.log.info("[CLIENT_MANAGER] Banned list synchronized with server.")};a.user1.orbiter.CoreMessageListener=function(c){this.orbiter=c;this.log=c.getLog();this.registerCoreListeners();this.orbiter.getConnectionManager().addEventListener(a.user1.orbiter.ConnectionManagerEvent.SELECT_CONNECTION,this.selectConnectionListener,this);this.roomMan=this.orbiter.getRoomManager();this.accountMan=this.orbiter.getAccountManager();this.clientMan=this.orbiter.getClientManager();this.snapshotMan=this.orbiter.getSnapshotManager()};a.user1.orbiter.CoreMessageListener.prototype.registerCoreListeners=function(){var c=this.orbiter.getMessageManager();c.addMessageListener(a.user1.orbiter.UPC.JOINED_ROOM,this.u6,this);c.addMessageListener(a.user1.orbiter.UPC.RECEIVE_MESSAGE,this.u7,this);c.addMessageListener(a.user1.orbiter.UPC.CLIENT_ATTR_UPDATE,this.u8,this);c.addMessageListener(a.user1.orbiter.UPC.ROOM_ATTR_UPDATE,this.u9,this);c.addMessageListener(a.user1.orbiter.UPC.CLIENT_METADATA,this.u29,this);c.addMessageListener(a.user1.orbiter.UPC.CREATE_ROOM_RESULT,this.u32,this);c.addMessageListener(a.user1.orbiter.UPC.REMOVE_ROOM_RESULT,this.u33,this);c.addMessageListener(a.user1.orbiter.UPC.CLIENTCOUNT_SNAPSHOT,this.u34,this);c.addMessageListener(a.user1.orbiter.UPC.CLIENT_ADDED_TO_ROOM,this.u36,this);c.addMessageListener(a.user1.orbiter.UPC.CLIENT_REMOVED_FROM_ROOM,this.u37,this);c.addMessageListener(a.user1.orbiter.UPC.ROOMLIST_SNAPSHOT,this.u38,this);c.addMessageListener(a.user1.orbiter.UPC.ROOM_ADDED,this.u39,this);c.addMessageListener(a.user1.orbiter.UPC.ROOM_REMOVED,this.u40,this);c.addMessageListener(a.user1.orbiter.UPC.WATCH_FOR_ROOMS_RESULT,this.u42,this);c.addMessageListener(a.user1.orbiter.UPC.STOP_WATCHING_FOR_ROOMS_RESULT,this.u43,this);c.addMessageListener(a.user1.orbiter.UPC.LEFT_ROOM,this.u44,this);c.addMessageListener(a.user1.orbiter.UPC.CHANGE_ACCOUNT_PASSWORD_RESULT,this.u46,this);c.addMessageListener(a.user1.orbiter.UPC.CREATE_ACCOUNT_RESULT,this.u47,this);c.addMessageListener(a.user1.orbiter.UPC.REMOVE_ACCOUNT_RESULT,this.u48,this);c.addMessageListener(a.user1.orbiter.UPC.LOGIN_RESULT,this.u49,this);c.addMessageListener(a.user1.orbiter.UPC.ROOM_SNAPSHOT,this.u54,this);c.addMessageListener(a.user1.orbiter.UPC.OBSERVED_ROOM,this.u59,this);c.addMessageListener(a.user1.orbiter.UPC.GET_ROOM_SNAPSHOT_RESULT,this.u60,this);c.addMessageListener(a.user1.orbiter.UPC.STOPPED_OBSERVING_ROOM,this.u62,this);c.addMessageListener(a.user1.orbiter.UPC.SERVER_HELLO,this.u66,this);c.addMessageListener(a.user1.orbiter.UPC.JOIN_ROOM_RESULT,this.u72,this);c.addMessageListener(a.user1.orbiter.UPC.SET_CLIENT_ATTR_RESULT,this.u73,this);c.addMessageListener(a.user1.orbiter.UPC.SET_ROOM_ATTR_RESULT,this.u74,this);c.addMessageListener(a.user1.orbiter.UPC.GET_CLIENTCOUNT_SNAPSHOT_RESULT,this.u75,this);c.addMessageListener(a.user1.orbiter.UPC.LEAVE_ROOM_RESULT,this.u76,this);c.addMessageListener(a.user1.orbiter.UPC.OBSERVE_ROOM_RESULT,this.u77,this);c.addMessageListener(a.user1.orbiter.UPC.STOP_OBSERVING_ROOM_RESULT,this.u78,this);c.addMessageListener(a.user1.orbiter.UPC.ROOM_ATTR_REMOVED,this.u79,this);c.addMessageListener(a.user1.orbiter.UPC.REMOVE_ROOM_ATTR_RESULT,this.u80,this);c.addMessageListener(a.user1.orbiter.UPC.CLIENT_ATTR_REMOVED,this.u81,this);c.addMessageListener(a.user1.orbiter.UPC.REMOVE_CLIENT_ATTR_RESULT,this.u82,this);c.addMessageListener(a.user1.orbiter.UPC.LOGOFF_RESULT,this.u87,this);c.addMessageListener(a.user1.orbiter.UPC.LOGGED_IN,this.u88,this);c.addMessageListener(a.user1.orbiter.UPC.LOGGED_OFF,this.u89,this);c.addMessageListener(a.user1.orbiter.UPC.ACCOUNT_PASSWORD_CHANGED,this.u90,this);c.addMessageListener(a.user1.orbiter.UPC.CLIENTLIST_SNAPSHOT,this.u101,this);c.addMessageListener(a.user1.orbiter.UPC.CLIENT_ADDED_TO_SERVER,this.u102,this);c.addMessageListener(a.user1.orbiter.UPC.CLIENT_REMOVED_FROM_SERVER,this.u103,this);c.addMessageListener(a.user1.orbiter.UPC.CLIENT_SNAPSHOT,this.u104,this);c.addMessageListener(a.user1.orbiter.UPC.OBSERVE_CLIENT_RESULT,this.u105,this);c.addMessageListener(a.user1.orbiter.UPC.STOP_OBSERVING_CLIENT_RESULT,this.u106,this);c.addMessageListener(a.user1.orbiter.UPC.WATCH_FOR_CLIENTS_RESULT,this.u107,this);c.addMessageListener(a.user1.orbiter.UPC.STOP_WATCHING_FOR_CLIENTS_RESULT,this.u108,this);c.addMessageListener(a.user1.orbiter.UPC.WATCH_FOR_ACCOUNTS_RESULT,this.u109,this);c.addMessageListener(a.user1.orbiter.UPC.STOP_WATCHING_FOR_ACCOUNTS_RESULT,this.u110,this);c.addMessageListener(a.user1.orbiter.UPC.ACCOUNT_ADDED,this.u111,this);c.addMessageListener(a.user1.orbiter.UPC.ACCOUNT_REMOVED,this.u112,this);c.addMessageListener(a.user1.orbiter.UPC.JOINED_ROOM_ADDED_TO_CLIENT,this.u113,this);c.addMessageListener(a.user1.orbiter.UPC.JOINED_ROOM_REMOVED_FROM_CLIENT,this.u114,this);c.addMessageListener(a.user1.orbiter.UPC.GET_CLIENT_SNAPSHOT_RESULT,this.u115,this);c.addMessageListener(a.user1.orbiter.UPC.GET_ACCOUNT_SNAPSHOT_RESULT,this.u116,this);c.addMessageListener(a.user1.orbiter.UPC.OBSERVED_ROOM_ADDED_TO_CLIENT,this.u117,this);c.addMessageListener(a.user1.orbiter.UPC.OBSERVED_ROOM_REMOVED_FROM_CLIENT,this.u118,this);c.addMessageListener(a.user1.orbiter.UPC.CLIENT_OBSERVED,this.u119,this);c.addMessageListener(a.user1.orbiter.UPC.STOPPED_OBSERVING_CLIENT,this.u120,this);c.addMessageListener(a.user1.orbiter.UPC.OBSERVE_ACCOUNT_RESULT,this.u123,this);c.addMessageListener(a.user1.orbiter.UPC.ACCOUNT_OBSERVED,this.u124,this);c.addMessageListener(a.user1.orbiter.UPC.STOP_OBSERVING_ACCOUNT_RESULT,this.u125,this);c.addMessageListener(a.user1.orbiter.UPC.STOPPED_OBSERVING_ACCOUNT,this.u126,this);c.addMessageListener(a.user1.orbiter.UPC.ACCOUNT_LIST_UPDATE,this.u127,this);c.addMessageListener(a.user1.orbiter.UPC.UPDATE_LEVELS_UPDATE,this.u128,this);c.addMessageListener(a.user1.orbiter.UPC.CLIENT_OBSERVED_ROOM,this.u129,this);c.addMessageListener(a.user1.orbiter.UPC.CLIENT_STOPPED_OBSERVING_ROOM,this.u130,this);c.addMessageListener(a.user1.orbiter.UPC.ROOM_OCCUPANTCOUNT_UPDATE,this.u131,this);c.addMessageListener(a.user1.orbiter.UPC.ROOM_OBSERVERCOUNT_UPDATE,this.u132,this);c.addMessageListener(a.user1.orbiter.UPC.ADD_ROLE_RESULT,this.u134,this);c.addMessageListener(a.user1.orbiter.UPC.REMOVE_ROLE_RESULT,this.u136,this);c.addMessageListener(a.user1.orbiter.UPC.BAN_RESULT,this.u138,this);c.addMessageListener(a.user1.orbiter.UPC.UNBAN_RESULT,this.u140,this);c.addMessageListener(a.user1.orbiter.UPC.BANNED_LIST_SNAPSHOT,this.u142,this);c.addMessageListener(a.user1.orbiter.UPC.WATCH_FOR_BANNED_ADDRESSES_RESULT,this.u144,this);c.addMessageListener(a.user1.orbiter.UPC.STOP_WATCHING_FOR_BANNED_ADDRESSES_RESULT,this.u146,this);c.addMessageListener(a.user1.orbiter.UPC.BANNED_ADDRESS_ADDED,this.u147,this);c.addMessageListener(a.user1.orbiter.UPC.BANNED_ADDRESS_REMOVED,this.u148,this);c.addMessageListener(a.user1.orbiter.UPC.KICK_CLIENT_RESULT,this.u150,this);c.addMessageListener(a.user1.orbiter.UPC.SERVERMODULELIST_SNAPSHOT,this.u152,this);c.addMessageListener(a.user1.orbiter.UPC.GET_UPC_STATS_SNAPSHOT_RESULT,this.u155,this);c.addMessageListener(a.user1.orbiter.UPC.UPC_STATS_SNAPSHOT,this.u156,this);c.addMessageListener(a.user1.orbiter.UPC.RESET_UPC_STATS_RESULT,this.u158,this);c.addMessageListener(a.user1.orbiter.UPC.WATCH_FOR_PROCESSED_UPCS_RESULT,this.u160,this);c.addMessageListener(a.user1.orbiter.UPC.PROCESSED_UPC_ADDED,this.u161,this);c.addMessageListener(a.user1.orbiter.UPC.STOP_WATCHING_FOR_PROCESSED_UPCS_RESULT,this.u163,this);c.addMessageListener(a.user1.orbiter.UPC.NODELIST_SNAPSHOT,this.u166,this);c.addMessageListener(a.user1.orbiter.UPC.GATEWAYS_SNAPSHOT,this.u168,this)};a.user1.orbiter.CoreMessageListener.prototype.createHashFromArg=function(c){var e=c.split(a.user1.orbiter.Tokens.RS);var f=new Object();for(var d=0;d<e.length;d+=2){f[e[d]]=e[d+1]}return f};a.user1.orbiter.CoreMessageListener.prototype.selectConnectionListener=function(d){var c=this.orbiter.getMessageManager();if(c.removeListenersOnDisconnect){this.registerCoreListeners()}};a.user1.orbiter.CoreMessageListener.prototype.u6=function(c){var e=this.roomMan.addOccupiedRoom(c);e.doJoin();var d=this.clientMan.self();if(d){d.fireJoinRoom(e,c)}};a.user1.orbiter.CoreMessageListener.prototype.u7=function(m,u,g,k){var B=this.orbiter.getMessageManager();var p;var c;var w;var d;var n=Array.prototype.slice.call(arguments).slice(4);w=this.roomMan.getRoom(k);if(g==""){c=null}else{c=this.clientMan.getClient(g);c=c==null?this.clientMan.requestClient(g):c}if(u!=a.user1.orbiter.ReceiveMessageBroadcastType.TO_ROOMS){d=[c].concat(n);try{B.notifyMessageListeners(m,d)}catch(y){p=y}}else{if(w==null){this.log.warn("Message (u7) received for unknown room: ["+k+"]Message: ["+m+"]");return}var o=B.getMessageListeners(m);var s=a.user1.orbiter.RoomIDParser.getSimpleRoomID(k);var v=a.user1.orbiter.RoomIDParser.getQualifier(k);var l;var A;var z;for(var r=0;r<o.length;r++){z=o[r];A=true;if(z.getForRoomIDs()==null){d=[c,w].concat(n);try{z.getListenerFunction().apply(z.getThisArg(),d)}catch(y){p=y}l=true;A=false;continue}var h=z.getForRoomIDs();var t;var f;var x;for(var q=0;q<h.length;q++){x=h[q];t=a.user1.orbiter.RoomIDParser.getQualifier(x);f=a.user1.orbiter.RoomIDParser.getSimpleRoomID(x);if(t==v&&(f==s||f=="*")){if(h.length==1){d=[c].concat(n)}else{d=[c,w].concat(n)}try{z.getListenerFunction().apply(z.getThisArg(),d)}catch(y){p=y}l=true;A=false;break}}if(A){this.log.debug("Message listener ignored message: "+m+". Listener registered to receive messages sent to: "+z.getForRoomIDs()+", but message was sent to: "+k)}}if(!l){this.log.warn("No message listener handled incoming message: "+m+", sent to: "+k)}}if(p!=null){throw new Error("A message listener for incoming message ["+m+"]"+(c==null?"":", received from client ["+c.getClientID()+"],")+" encountered an error:\n\n"+p.toString()+"\n\nEnsure that all ["+m+"] listeners supply a first parameter whose datatype is Client (or a compatible type). Listeners that registered for the message via MessageManager's addMessageListener() with anything other than a single roomID for the toRoomIDs parameter must also define a second paramter whose datatype is Room (or a compatible type). Finally, ensure that the listener's declared message parameters match the following actual message arguments:\n    "+n+(typeof p.stack==="undefined"?"":"\n\nStack trace follows:\n"+p.stack))}};a.user1.orbiter.CoreMessageListener.prototype.u8=function(h,d,j,i,f,g){var c;var e;var k=parseInt(g);if(k&a.user1.orbiter.AttributeOptions.FLAG_PERSISTENT){e=this.accountMan.getAccount(j);if(e!=null){e.getAttributeManager().setAttributeLocal(i,f,h)}else{throw new Error("[CORE_MESSAGE_LISTENER] Received an attribute update for  an unknown user account ["+j+"]. Please report this error with the following log to union@user1.net.\n"+this.log.getHistory().join("\n"))}}else{c=this.clientMan.getInternalClient(d);if(c!=null){c.getAttributeManager().setAttributeLocal(i,f,h)}else{throw new Error("[CORE_MESSAGE_LISTENER] Received an attribute update for  an unknown client ["+d+"]. Please report this error with the following log to union@user1.net.\n"+this.log.getHistory().join("\n"))}}};a.user1.orbiter.CoreMessageListener.prototype.u9=function(f,h,e,d){var c=this.roomMan.getRoom(f);var g;if(c==null){this.log.warn("Room attribute update received for server-side room with no matching client-side Room object. Room ID ["+f+"]. Attribute: ["+e+"].");return}if(h==""){g=null}else{g=this.clientMan.getClient(h);g=g==null?this.clientMan.requestClient(h):g}c.getAttributeManager().setAttributeLocal(e,d,a.user1.orbiter.Tokens.GLOBAL_ATTR,g)};a.user1.orbiter.CoreMessageListener.prototype.u29=function(d){var c=this.clientMan.requestClient(d);this.clientMan.setSelf(c)};a.user1.orbiter.CoreMessageListener.prototype.u32=function(e,d){var c=this.roomMan.getRoom(e);switch(d){case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ROOM_EXISTS:case a.user1.orbiter.Status.PERMISSION_DENIED:this.roomMan.fireCreateRoomResult(a.user1.orbiter.RoomIDParser.getQualifier(e),a.user1.orbiter.RoomIDParser.getSimpleRoomID(e),d);break;default:this.log.warn("Unrecognized status code for u32. Room ID: ["+e+"], status: ["+d+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u33=function(d,c){this.roomMan.fireRemoveRoomResult(a.user1.orbiter.RoomIDParser.getQualifier(d),a.user1.orbiter.RoomIDParser.getSimpleRoomID(d),c);switch(c){case a.user1.orbiter.Status.ERROR:this.log.warn("Server error for room removal attempt: "+d);break;case a.user1.orbiter.Status.PERMISSION_DENIED:this.log.info("Attempt to remove room ["+d+"] failed. Permission denied. See server log for details.");break;case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ROOM_NOT_FOUND:if(this.roomMan.getRoom(d)!=null){this.roomMan.disposeRoom(d)}break;case a.user1.orbiter.Status.AUTHORIZATION_REQUIRED:case a.user1.orbiter.Status.AUTHORIZATION_FAILED:break;default:this.log.warn("Unrecognized status code for u33. Room ID: ["+d+"], status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u34=function(d,c){this.snapshotMan.receiveClientCountSnapshot(d,parseInt(c))};a.user1.orbiter.CoreMessageListener.prototype.u36=function(g,d,k,i,c){var h=this.clientMan.requestClient(d);var f=this.accountMan.requestAccount(k);var j;if(f!=null&&h.getAccount()!=f){h.setAccount(f)}var e=this.roomMan.getRoom(g);if(!h.isSelf()){j=new a.user1.orbiter.ClientManifest();j.deserialize(d,k,null,null,i,[g,c]);h.synchronize(j);if(!this.clientMan.isObservingClient(d)){h.fireJoinRoom(e,g)}}e.addOccupant(h)};a.user1.orbiter.CoreMessageListener.prototype.u37=function(e,f){var d=this.clientMan.requestClient(f);var c=this.roomMan.getRoom(e);c.removeOccupant(f);if(!d.isSelf()){if(!this.clientMan.isObservingClient(f)){d.fireLeaveRoom(c,e)}}};a.user1.orbiter.CoreMessageListener.prototype.u38=function(h,l,e){var k=Array.prototype.slice.call(arguments).slice(3);var d;var m;var c=[];if(h==""){for(var g=0;g<k.length;g+=2){d=k[g];m=k[g+1].split(a.user1.orbiter.Tokens.RS);this.roomMan.setWatchedRooms(d,m)}}else{for(g=0;g<k.length;g+=2){d=k[g];m=k[g+1].split(a.user1.orbiter.Tokens.RS);for(var f=0;f<m.length;f++){c.push(d+(d==""?"":".")+m[f])}}this.snapshotMan.receiveRoomListSnapshot(h,c,l,e=="true")}};a.user1.orbiter.CoreMessageListener.prototype.u39=function(c){this.roomMan.addWatchedRoom(c)};a.user1.orbiter.CoreMessageListener.prototype.u40=function(c){this.roomMan.removeWatchedRoom(c);if(this.roomMan.getRoom(c)!=null){this.roomMan.disposeRoom(c)}};a.user1.orbiter.CoreMessageListener.prototype.u42=function(e,d,c){this.roomMan.fireWatchForRoomsResult(e,c);switch(c){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.INVALID_QUALIFIER:case a.user1.orbiter.Status.ALREADY_WATCHING:case a.user1.orbiter.Status.PERMISSION_DENIED:break;default:this.log.warn("Unrecognized status code for u42. Room ID Qualifier: ["+e+"], recursive: ["+d+"], status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u43=function(e,d,c){switch(c){case a.user1.orbiter.Status.SUCCESS:if(e==""&&d=="true"){this.roomMan.removeAllWatchedRooms()}else{this.roomMan.setWatchedRooms(e,[])}case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.NOT_WATCHING:case a.user1.orbiter.Status.INVALID_QUALIFIER:this.roomMan.fireStopWatchingForRoomsResult(e,c);break;default:this.log.warn("Unrecognized status code for u43. Room ID Qualifier: ["+e+"], recursive: ["+d+"], status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u44=function(c){var d=this.roomMan.getRoom(c);this.roomMan.removeOccupiedRoom(c);if(d!=null){d.doLeave();this.clientMan.self().fireLeaveRoom(d,c)}};a.user1.orbiter.CoreMessageListener.prototype.u46=function(d,c){var e=this.accountMan.getAccount(d);if(e!=null){e.fireChangePasswordResult(c)}this.accountMan.fireChangePasswordResult(d,c)};a.user1.orbiter.CoreMessageListener.prototype.u47=function(d,c){switch(c){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.ACCOUNT_EXISTS:case a.user1.orbiter.Status.PERMISSION_DENIED:this.orbiter.getAccountManager().fireCreateAccountResult(d,c);break;default:this.log.warn("Unrecognized status code for u47. Account: ["+d+"], status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u48=function(d,c){switch(c){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.ACCOUNT_NOT_FOUND:case a.user1.orbiter.Status.AUTHORIZATION_FAILED:case a.user1.orbiter.Status.PERMISSION_DENIED:this.orbiter.getAccountManager().fireRemoveAccountResult(d,c);break;default:this.log.warn("Unrecognized status code for u48. Account: ["+d+"], status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u49=function(d,c){switch(c){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.ALREADY_LOGGED_IN:case a.user1.orbiter.Status.ACCOUNT_NOT_FOUND:case a.user1.orbiter.Status.AUTHORIZATION_FAILED:case a.user1.orbiter.Status.PERMISSION_DENIED:this.orbiter.getAccountManager().fireLoginResult(d,c);break;default:this.log.warn("Unrecognized status code for u49. Account: ["+d+"], status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u54=function(f,i,g,h,c){var k=Array.prototype.slice.call(arguments).slice(5);var j;var d=new a.user1.orbiter.RoomManifest();var e;d.deserialize(i,c,k,parseInt(g),parseInt(h));if(f==""){e=this.roomMan.getRoom(i);if(e==null){e=this.roomMan.addCachedRoom(i)}e.synchronize(d)}else{this.snapshotMan.receiveRoomSnapshot(f,d)}};a.user1.orbiter.CoreMessageListener.prototype.u59=function(c){var d=this.roomMan.addObservedRoom(c);d.doObserve();this.clientMan.self().fireObserveRoom(d,c)};a.user1.orbiter.CoreMessageListener.prototype.u60=function(e,d,c){switch(c){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.ROOM_NOT_FOUND:case a.user1.orbiter.Status.AUTHORIZATION_REQUIRED:case a.user1.orbiter.Status.AUTHORIZATION_FAILED:case a.user1.orbiter.Status.PERMISSION_DENIED:this.snapshotMan.receiveSnapshotResult(e,c);break;default:this.log.warn("Unrecognized status code for u60. Request ID: ["+e+"], Room ID: ["+d+"], status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u62=function(d){var c=this.roomMan.getRoom(d);this.roomMan.removeObservedRoom(d);if(c!=null){c.doStopObserving();if(this.clientMan.self()!=null){this.clientMan.self().fireStopObservingRoom(c,d)}}};a.user1.orbiter.CoreMessageListener.prototype.u66=function(d,i,g,k,f,j){this.log.info("[ORBITER] Server version: "+d);this.log.info("[ORBITER] Server UPC version: "+g);var h=new a.user1.orbiter.VersionNumber();h.fromVersionString(g);this.orbiter.getServer().setVersion(d);this.orbiter.getServer().setUPCVersion(h);var e=this.orbiter.getConnectionManager().getInProgressConnection();var c=e.getHost();if(f!=""&&typeof f!=="undefined"&&f!=c){this.orbiter.getConnectionManager().setAffinity(c,f,parseFloat(j));e.applyAffinity()}};a.user1.orbiter.CoreMessageListener.prototype.u72=function(e,d){var c=this.roomMan.getRoom(e);switch(d){case a.user1.orbiter.Status.ROOM_NOT_FOUND:if(this.roomMan.getRoom(e)!=null){this.roomMan.disposeRoom(e)}case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.ROOM_FULL:case a.user1.orbiter.Status.AUTHORIZATION_REQUIRED:case a.user1.orbiter.Status.AUTHORIZATION_FAILED:case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ALREADY_IN_ROOM:case a.user1.orbiter.Status.PERMISSION_DENIED:this.roomMan.fireJoinRoomResult(e,d);if(c!=null){c.doJoinResult(d)}break;default:this.log.warn("Unrecognized status code for u72. Room ID: ["+e+"], status: ["+d+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u73=function(h,j,f,g,i,d){var c;var e;switch(d){case a.user1.orbiter.Status.CLIENT_NOT_FOUND:case a.user1.orbiter.Status.ACCOUNT_NOT_FOUND:break;case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.DUPLICATE_VALUE:case a.user1.orbiter.Status.IMMUTABLE:case a.user1.orbiter.Status.SERVER_ONLY:case a.user1.orbiter.Status.EVALUATION_FAILED:case a.user1.orbiter.Status.PERMISSION_DENIED:if(parseInt(i)&a.user1.orbiter.AttributeOptions.FLAG_PERSISTENT){e=this.accountMan.requestAccount(f);e.getAttributeManager().fireSetAttributeResult(g,h,d)}else{c=this.clientMan.requestClient(j);c.getAttributeManager().fireSetAttributeResult(g,h,d)}break;default:this.log.warn("Unrecognized status received for u73: "+d)}};a.user1.orbiter.CoreMessageListener.prototype.u74=function(f,e,d){var c=this.roomMan.getRoom(f);if(c==null){this.log.warn("Room attribute update received for room with no client-side Room object. Room ID ["+f+"]. Attribute: ["+e+"]. Status: ["+d+"].");return}switch(d){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.IMMUTABLE:case a.user1.orbiter.Status.SERVER_ONLY:case a.user1.orbiter.Status.EVALUATION_FAILED:case a.user1.orbiter.Status.ROOM_NOT_FOUND:case a.user1.orbiter.Status.PERMISSION_DENIED:c.getAttributeManager().fireSetAttributeResult(e,a.user1.orbiter.Tokens.GLOBAL_ATTR,d);break;default:this.log.warn("Unrecognized status received for u74: "+d)}};a.user1.orbiter.CoreMessageListener.prototype.u75=function(d,c){this.snapshotMan.receiveSnapshotResult(d,c)};a.user1.orbiter.CoreMessageListener.prototype.u76=function(d,c){var e=this.roomMan.getRoom(d);switch(c){case a.user1.orbiter.Status.ROOM_NOT_FOUND:if(e!=null){this.roomMan.disposeRoom(d)}case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.NOT_IN_ROOM:this.roomMan.fireLeaveRoomResult(d,c);if(e!=null){e.doLeaveResult(c)}break;default:this.log.warn("Unrecognized status code for u76. Room ID: ["+d+"]. Status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u77=function(e,d){var c=this.roomMan.getRoom(e);switch(d){case a.user1.orbiter.Status.ROOM_NOT_FOUND:if(c!=null){this.roomMan.disposeRoom(e)}case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.AUTHORIZATION_REQUIRED:case a.user1.orbiter.Status.AUTHORIZATION_FAILED:case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ALREADY_OBSERVING:case a.user1.orbiter.Status.PERMISSION_DENIED:this.roomMan.fireObserveRoomResult(e,d);if(c){c.doObserveResult(d)}break;default:this.log.warn("Unrecognized status code for u77. Room ID: ["+e+"], status: "+d+".")}};a.user1.orbiter.CoreMessageListener.prototype.u78=function(e,d){var c=this.roomMan.getRoom(e);switch(d){case a.user1.orbiter.Status.ROOM_NOT_FOUND:if(c!=null){this.roomMan.disposeRoom(e)}case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.NOT_OBSERVING:this.roomMan.fireStopObservingRoomResult(e,d);if(c!=null){c.doStopObservingResult(d)}break;default:this.log.warn("Unrecognized status code for u78. Room ID: ["+e+"], status: "+d+".")}};a.user1.orbiter.CoreMessageListener.prototype.u79=function(f,g,e){var d=this.roomMan.getRoom(f);var c;if(d==null){this.log.warn("Room attribute removal notification received for room with no client-side Room object. Room ID ["+f+"]. Attribute: ["+e+"].");return}c=g==""?null:this.clientMan.requestClient(g);d.getAttributeManager().removeAttributeLocal(e,a.user1.orbiter.Tokens.GLOBAL_ATTR,c)};a.user1.orbiter.CoreMessageListener.prototype.u80=function(f,e,d){var c=this.roomMan.getRoom(f);switch(d){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.IMMUTABLE:case a.user1.orbiter.Status.SERVER_ONLY:case a.user1.orbiter.Status.ROOM_NOT_FOUND:case a.user1.orbiter.Status.ATTR_NOT_FOUND:case a.user1.orbiter.Status.PERMISSION_DENIED:if(c!=null){c.getAttributeManager().fireDeleteAttributeResult(e,a.user1.orbiter.Tokens.GLOBAL_ATTR,d)}break;default:this.log.warn("Unrecognized status received for u80: "+d)}};a.user1.orbiter.CoreMessageListener.prototype.u81=function(f,i,d,e,h){var c;var g;if(parseInt(h)&a.user1.orbiter.AttributeOptions.FLAG_PERSISTENT){g=this.accountMan.requestAccount(d);g.getAttributeManager().removeAttributeLocal(e,f)}else{c=this.clientMan.requestClient(i);c.getAttributeManager().removeAttributeLocal(e,f)}};a.user1.orbiter.CoreMessageListener.prototype.u82=function(g,j,e,f,i,d){var c;var h;switch(d){case a.user1.orbiter.Status.CLIENT_NOT_FOUND:case a.user1.orbiter.Status.ACCOUNT_NOT_FOUND:break;case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.IMMUTABLE:case a.user1.orbiter.Status.SERVER_ONLY:case a.user1.orbiter.Status.ATTR_NOT_FOUND:case a.user1.orbiter.Status.EVALUATION_FAILED:case a.user1.orbiter.Status.PERMISSION_DENIED:if(parseInt(i)&a.user1.orbiter.AttributeOptions.FLAG_PERSISTENT){h=this.accountMan.requestAccount(e);h.getAttributeManager().fireDeleteAttributeResult(f,g,d)}else{c=this.clientMan.requestClient(j);c.getAttributeManager().fireDeleteAttributeResult(f,g,d)}break;default:this.log.warn("Unrecognized status received for u82: "+d)}};a.user1.orbiter.CoreMessageListener.prototype.u87=function(d,c){var e=this.accountMan.getAccount(d);switch(c){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.AUTHORIZATION_FAILED:case a.user1.orbiter.Status.ACCOUNT_NOT_FOUND:case a.user1.orbiter.Status.NOT_LOGGED_IN:case a.user1.orbiter.Status.PERMISSION_DENIED:if(e!=null){e.fireLogoffResult(c)}this.accountMan.fireLogoffResult(d,c);break;default:this.log.warn("Unrecognized status received for u87: "+c)}};a.user1.orbiter.CoreMessageListener.prototype.u88=function(f,m,c){var j=Array.prototype.slice.call(arguments).slice(3);var h=this.accountMan.requestAccount(m);var d=this.clientMan.requestClient(f);var l=new a.user1.orbiter.ClientManifest();l.deserialize(f,m,null,null,c,j);var k=l.persistentAttributes.getScopes();var g=h.getAttributeManager().getAttributeCollection();for(var e=k.length;--e>=0;){g.synchronizeScope(k[e],l.persistentAttributes)}if(d.getAccount()==null){d.setAccount(h);d.fireLogin();h.doLoginTasks();this.accountMan.fireLogin(h,f)}else{}};a.user1.orbiter.CoreMessageListener.prototype.u89=function(f,d){var c=this.clientMan.getInternalClient(f);var e=this.accountMan.getAccount(d);if(e!=null){if(e.getConnectionState()==a.user1.orbiter.ConnectionState.LOGGED_IN){if(c!=null){c.fireLogoff(d)}e.doLogoffTasks();this.accountMan.fireLogoff(e,f)}else{}}else{throw new Error("LOGGED_OFF (u89) received for an unknown user: ["+d+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u90=function(){var c=this.orbiter.self();var d=c.getAccount();if(d!=null){d.fireChangePassword()}this.accountMan.fireChangePassword(d?d.getUserID():null)};a.user1.orbiter.CoreMessageListener.prototype.u101=function(f,h){var e=h.split(a.user1.orbiter.Tokens.RS);var g;var c;if(f==""){this.clientMan.deserializeWatchedClients(h)}else{g=[];for(var d=e.length-1;d>=0;d-=2){c=e[d];c=c==""?null:c;g.push({clientID:e[d-1],userID:c})}this.snapshotMan.receiveClientListSnapshot(f,g)}};a.user1.orbiter.CoreMessageListener.prototype.u102=function(c){this.clientMan.addWatchedClient(this.clientMan.requestClient(c))};a.user1.orbiter.CoreMessageListener.prototype.u103=function(d){var c=this.clientMan.getInternalClient(d);if(this.clientMan.hasWatchedClient(d)){this.clientMan.removeWatchedClient(d)}if(this.clientMan.isObservingClient(d)){this.clientMan.removeObservedClient(d)}if(c!=null){c.setConnectionState(a.user1.orbiter.ConnectionState.NOT_CONNECTED);this.clientMan.fireClientDisconnected(this.clientMan.getClient(d))}};a.user1.orbiter.CoreMessageListener.prototype.u104=function(h,g,o,c,e,d){var k=Array.prototype.slice.call(arguments).slice(7);var l;var j=this.accountMan.requestAccount(o);var n=new a.user1.orbiter.ClientManifest();n.deserialize(g,o,c,e,d,k);var m;if(g!=""){if(h==""){l=this.clientMan.requestClient(g);l.setAccount(j);l.synchronize(n);l.fireSynchronize()}else{this.snapshotMan.receiveClientSnapshot(h,n)}}else{if(h==""){m=n.persistentAttributes.getScopes();for(var f=m.length;--f>=0;){j.getAttributeManager().getAttributeCollection().synchronizeScope(m[f],n.persistentAttributes)}j.fireSynchronize()}else{this.snapshotMan.receiveAccountSnapshot(h,n)}}};a.user1.orbiter.CoreMessageListener.prototype.u105=function(e,d){var c=this.clientMan.getInternalClient(e);switch(d){case a.user1.orbiter.Status.CLIENT_NOT_FOUND:case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.ALREADY_OBSERVING:case a.user1.orbiter.Status.PERMISSION_DENIED:this.clientMan.fireObserveClientResult(e,d);if(c!=null){c.fireObserveResult(d)}break;default:this.log.warn("Unrecognized status code for u105. Client ID: ["+e+"], status: ["+d+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u106=function(e,d){var c=this.clientMan.getInternalClient(e);switch(d){case a.user1.orbiter.Status.CLIENT_NOT_FOUND:case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.NOT_OBSERVING:this.clientMan.fireStopObservingClientResult(e,d);if(c!=null){c.fireStopObservingResult(d)}break;default:this.log.warn("Unrecognized status code for u106. Client ID: ["+e+"], status: ["+d+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u107=function(c){switch(c){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.ALREADY_WATCHING:this.clientMan.fireWatchForClientsResult(c);break;default:this.log.warn("Unrecognized status code for u107.Status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u108=function(c){switch(c){case a.user1.orbiter.Status.SUCCESS:this.clientMan.setIsWatchingForClients(false);this.clientMan.removeAllWatchedClients();case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.NOT_WATCHING:this.clientMan.fireStopWatchingForClientsResult(c);break;default:this.log.warn("Unrecognized status code for u108.Status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u109=function(c){switch(c){case a.user1.orbiter.Status.SUCCESS:this.accountMan.setIsWatchingForAccounts(true);case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.ALREADY_WATCHING:this.accountMan.fireWatchForAccountsResult(c);break;default:this.log.warn("Unrecognized status code for u109.Status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u110=function(c){switch(c){case a.user1.orbiter.Status.SUCCESS:this.accountMan.setIsWatchingForAccounts(false);this.accountMan.removeAllWatchedAccounts();case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.NOT_WATCHING:this.accountMan.fireStopWatchingForAccountsResult(c);break;default:this.log.warn("Unrecognized status code for u110.Status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u111=function(c){this.accountMan.addWatchedAccount(this.accountMan.requestAccount(c))};a.user1.orbiter.CoreMessageListener.prototype.u112=function(c){var d;if(this.accountMan.hasWatchedAccount(c)){d=this.accountMan.removeWatchedAccount(c)}if(this.accountMan.isObservingAccount(c)){d=this.accountMan.removeObservedAccount(c)}this.accountMan.fireAccountRemoved(c,d)};a.user1.orbiter.CoreMessageListener.prototype.u113=function(e,d){var c=this.clientMan.requestClient(e);c.addOccupiedRoomID(d);c.fireJoinRoom(this.roomMan.getRoom(d),d)};a.user1.orbiter.CoreMessageListener.prototype.u114=function(e,d){var c=this.clientMan.requestClient(e);c.removeOccupiedRoomID(d);c.fireLeaveRoom(this.roomMan.getRoom(d),d)};a.user1.orbiter.CoreMessageListener.prototype.u115=function(d,e,c){this.snapshotMan.receiveSnapshotResult(d,c)};a.user1.orbiter.CoreMessageListener.prototype.u116=function(e,d,c){this.snapshotMan.receiveSnapshotResult(e,c)};a.user1.orbiter.CoreMessageListener.prototype.u117=function(e,d){var c=this.clientMan.requestClient(e);c.addObservedRoomID(d);c.fireObserveRoom(this.roomMan.getRoom(d),d)};a.user1.orbiter.CoreMessageListener.prototype.u118=function(e,d){var c=this.clientMan.requestClient(e);c.removeObservedRoomID(d);c.fireStopObservingRoom(this.roomMan.getRoom(d),d)};a.user1.orbiter.CoreMessageListener.prototype.u119=function(d){var c=this.clientMan.requestClient(d);this.clientMan.addObservedClient(c);c.fireObserve()};a.user1.orbiter.CoreMessageListener.prototype.u120=function(d){var c=this.clientMan.getInternalClient(d);this.clientMan.removeObservedClient(d);if(c!=null){c.fireStopObserving()}};a.user1.orbiter.CoreMessageListener.prototype.u123=function(e,c){var d=this.accountMan.getAccount(e);switch(c){case a.user1.orbiter.Status.ACCOUNT_NOT_FOUND:case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.ALREADY_OBSERVING:this.accountMan.fireObserveAccountResult(e,c);if(d){d.fireObserveResult(c)}break;default:this.log.warn("Unrecognized status code for u123. User ID: ["+e+"], status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u124=function(d){var c=this.accountMan.requestAccount(d);this.accountMan.addObservedAccount(c);c.fireObserve()};a.user1.orbiter.CoreMessageListener.prototype.u125=function(e,c){var d=this.accountMan.getAccount(e);switch(c){case a.user1.orbiter.Status.ACCOUNT_NOT_FOUND:case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.ALREADY_OBSERVING:this.accountMan.fireStopObservingAccountResult(e,c);if(d){d.fireStopObservingResult(c)}break;default:this.log.warn("Unrecognized status code for u125. User ID: ["+e+"], status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u126=function(c){var d=this.accountMan.getAccount(c);this.accountMan.removeObservedAccount(c);if(d!=null){d.fireStopObserving()}};a.user1.orbiter.CoreMessageListener.prototype.u127=function(f,g){var d=g.split(a.user1.orbiter.Tokens.RS);var e;if(f==""){this.accountMan.deserializeWatchedAccounts(g)}else{e=[];for(var c=d.length;--c>=0;){e.push(d[c])}this.snapshotMan.receiveAccountListSnapshot(f,e)}};a.user1.orbiter.CoreMessageListener.prototype.u128=function(g,m){var c=this.roomMan.getRoom(m);var n=new a.user1.orbiter.UpdateLevels();n.fromInt(parseInt(g));if(c!=null){if(!n.occupantList){var e;var h=c.getOccupantIDs();var f=h.length;for(var j=0;j<f;j++){e=h[j];c.removeOccupant(e)}}if(!n.observerList){var d;var l=c.getObserverIDs();var k=l.length;for(j=0;j<k;j++){d=l[j];c.removeObserver(d)}}if(!n.sharedRoomAttributes&&!n.allRoomAttributes){c.getAttributeManager().removeAll()}}};a.user1.orbiter.CoreMessageListener.prototype.u129=function(g,d,k,i,c){var h=this.clientMan.requestClient(d);var f=this.accountMan.requestAccount(k);var j;if(f!=null&&h.getAccount()!=f){h.setAccount(f)}var e=this.roomMan.getRoom(g);if(!h.isSelf()){j=new a.user1.orbiter.ClientManifest();j.deserialize(d,k,null,null,i,[g,c]);h.synchronize(j);if(!this.clientMan.isObservingClient(d)){h.fireObserveRoom(e,g)}}e.addObserver(h)};a.user1.orbiter.CoreMessageListener.prototype.u130=function(e,f){var d=this.clientMan.requestClient(f);var c=this.roomMan.getRoom(e);c.removeObserver(f);if(!d.isSelf()){if(!this.clientMan.isObservingClient(f)){d.fireStopObservingRoom(c,e)}}};a.user1.orbiter.CoreMessageListener.prototype.u131=function(d,c){var e=this.clientMan.self().getUpdateLevels(d);if(e!=null){if(!e.occupantList){this.roomMan.getRoom(d).setNumOccupants(parseInt(c))}}else{throw new Error("[CORE_MESSAGE_LISTENER] Received a room occupant count update (u131), but update levels are unknown for the room. Synchronization error. Please report this error to union@user1.net.")}};a.user1.orbiter.CoreMessageListener.prototype.u132=function(d,c){var e=this.clientMan.self().getUpdateLevels(d);if(e!=null){if(!e.observerList){this.roomMan.getRoom(d).setNumObservers(parseInt(c))}}else{throw new Error("[CORE_MESSAGE_LISTENER] Received a room observer count update (u132), but update levels are unknown for the room. Synchronization error. Please report this error to union@user1.net.")}};a.user1.orbiter.CoreMessageListener.prototype.u134=function(e,f,c){var d=this.accountMan.getAccount(e);switch(c){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.ACCOUNT_NOT_FOUND:case a.user1.orbiter.Status.ROLE_NOT_FOUND:case a.user1.orbiter.Status.ALREADY_ASSIGNED:case a.user1.orbiter.Status.PERMISSION_DENIED:this.accountMan.fireAddRoleResult(e,f,c);if(d){d.fireAddRoleResult(f,c)}break;default:this.log.warn("Unrecognized status code for u134. User ID: ["+e+"], role: ["+f+"], status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u136=function(e,f,c){var d=this.accountMan.getAccount(e);switch(c){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.ACCOUNT_NOT_FOUND:case a.user1.orbiter.Status.ROLE_NOT_FOUND:case a.user1.orbiter.Status.NOT_ASSIGNED:case a.user1.orbiter.Status.PERMISSION_DENIED:this.accountMan.fireRemoveRoleResult(e,f,c);if(d){d.fireRemoveRoleResult(f,c)}break;default:this.log.warn("Unrecognized status code for u136. User ID: ["+e+"], role: ["+f+"], status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u138=function(d,e,c){switch(c){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.CLIENT_NOT_FOUND:case a.user1.orbiter.Status.ALREADY_BANNED:case a.user1.orbiter.Status.PERMISSION_DENIED:this.clientMan.fireBanClientResult(d,e,c);break;default:this.log.warn("Unrecognized status code for u138. Address: ["+d+"], clientID: ["+e+"], status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u140=function(d,c){switch(c){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.NOT_BANNED:case a.user1.orbiter.Status.PERMISSION_DENIED:this.clientMan.fireUnbanClientResult(d,c);break;default:this.log.warn("Unrecognized status code for u140. Address: ["+d+"], status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u142=function(e,c){var d=c==""?[]:c.split(a.user1.orbiter.Tokens.RS);if(e==""){this.clientMan.setWatchedBannedAddresses(d)}else{this.snapshotMan.receiveBannedListSnapshot(e,d)}};a.user1.orbiter.CoreMessageListener.prototype.u144=function(c){switch(c){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.ALREADY_WATCHING:case a.user1.orbiter.Status.PERMISSION_DENIED:this.clientMan.fireWatchForBannedAddressesResult(c);break;default:this.log.warn("Unrecognized status code for u144: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u146=function(c){switch(c){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.NOT_WATCHING:this.clientMan.fireStopWatchingForBannedAddressesResult(c);break;default:this.log.warn("Unrecognized status code for u146: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u147=function(c){this.clientMan.addWatchedBannedAddress(c)};a.user1.orbiter.CoreMessageListener.prototype.u148=function(c){this.clientMan.removeWatchedBannedAddress(c)};a.user1.orbiter.CoreMessageListener.prototype.u150=function(d,c){switch(c){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.CLIENT_NOT_FOUND:case a.user1.orbiter.Status.PERMISSION_DENIED:this.clientMan.fireKickClientResult(d,c);break;default:this.log.warn("Unrecognized status code for u150: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u152=function(g,d){var c=d==""?[]:d.split(a.user1.orbiter.Tokens.RS);var f=[];for(var e=0;e<c.length;e+=3){f.push(new ModuleDefinition(c[e],c[e+1],c[e+2]))}if(g==""){this.log.warn("Incoming SERVERMODULELIST_SNAPSHOT UPC missing required requestID. Ignoring message.")}else{this.snapshotMan.receiveServerModuleListSnapshot(g,f)}};a.user1.orbiter.CoreMessageListener.prototype.u155=function(d,c){this.snapshotMan.receiveSnapshotResult(d,c)};a.user1.orbiter.CoreMessageListener.prototype.u156=function(j,g,h,c){var d=Array.prototype.slice.call(arguments).slice(5);var f;for(var e=0;e<d.length;e++){f=new a.user1.orbiter.UPCProcessingRecord();f.deserialize(d[e]);d[e]=f}this.snapshotMan.receiveUPCStatsSnapshot(j,parseFloat(g),parseFloat(h),parseFloat(c),d)};a.user1.orbiter.CoreMessageListener.prototype.u158=function(c){switch(c){case a.user1.orbiter.Status.SUCCESS:case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.PERMISSION_DENIED:this.orbiter.getServer().dispatchResetUPCStatsResult(c);break;default:this.log.warn("Unrecognized status code for u158.Status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u160=function(c){switch(c){case a.user1.orbiter.Status.SUCCESS:this.orbiter.getServer().setIsWatchingForProcessedUPCs(true);case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.ALREADY_WATCHING:case a.user1.orbiter.Status.PERMISSION_DENIED:this.orbiter.getServer().dispatchWatchForProcessedUPCsResult(c);break;default:this.log.warn("Unrecognized status code for u160.Status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u161=function(c,j,f,e,d,i,h){var g=new a.user1.orbiter.UPCProcessingRecord();g.deserializeParts(c,j,f,e,d,i,h);this.orbiter.getServer().dispatchUPCProcessed(g)};a.user1.orbiter.CoreMessageListener.prototype.u163=function(c){switch(c){case a.user1.orbiter.Status.SUCCESS:this.orbiter.getServer().setIsWatchingForProcessedUPCs(false);case a.user1.orbiter.Status.ERROR:case a.user1.orbiter.Status.NOT_WATCHING:case a.user1.orbiter.Status.PERMISSION_DENIED:this.orbiter.getServer().dispatchStopWatchingForProcessedUPCsResult(c);break;default:this.log.warn("Unrecognized status code for u163.Status: ["+c+"].")}};a.user1.orbiter.CoreMessageListener.prototype.u166=function(e,d){var c=d==""?[]:d.split(a.user1.orbiter.Tokens.RS);if(e==""){this.log.warn("Incoming NODELIST_SNAPSHOT UPC missing required requestID. Ignoring message.")}else{this.snapshotMan.receiveNodeListSnapshot(e,c)}};a.user1.orbiter.CoreMessageListener.prototype.u168=function(j){var f=Array.prototype.slice.call(arguments).slice(1);var k=[];var l;var g;var e;var d;for(var h=0;h<f.length;h+=8){l=new a.user1.orbiter.Gateway();l.id=f[h];l.type=f[h+1];l.lifetimeConnectionsByCategory=f[h+2]===""?{}:this.createHashFromArg(f[h+2]);for(var c in l.lifetimeConnectionsByCategory){l.lifetimeConnectionsByCategory[c]=parseFloat(l.lifetimeConnectionsByCategory[c])}l.lifetimeClientsByType=f[h+3]===""?{}:this.createHashFromArg(f[h+3]);for(c in l.lifetimeClientsByType){l.lifetimeClientsByType[c]=parseFloat(l.lifetimeClientsByType[c])}l.lifetimeClientsByUPCVersion=f[h+4]===""?{}:this.createHashFromArg(f[h+4]);for(c in l.lifetimeClientsByUPCVersion){l.lifetimeClientsByUPCVersion[c]=parseFloat(l.lifetimeClientsByUPCVersion[c])}l.attributes=f[h+5]===""?{}:this.createHashFromArg(f[h+5]);d=f[h+6].split(a.user1.orbiter.Tokens.RS);l.connectionsPerSecond=parseFloat(d[0]);l.maxConnectionsPerSecond=parseFloat(d[1]);l.clientsPerSecond=parseFloat(d[2]);l.maxClientsPerSecond=parseFloat(d[3]);g=new a.user1.orbiter.GatewayBandwidth();e=f[h+7].split(a.user1.orbiter.Tokens.RS);g.lifetimeRead=e[0]===""?0:parseFloat(e[0]);g.lifetimeWritten=e[1]===""?0:parseFloat(e[1]);g.averageRead=e[2]===""?0:parseFloat(e[2]);g.averageWritten=e[3]===""?0:parseFloat(e[3]);g.intervalRead=e[4]===""?0:parseFloat(e[4]);g.intervalWritten=e[5]===""?0:parseFloat(e[5]);g.maxIntervalRead=e[6]===""?0:parseFloat(e[6]);g.maxIntervalWritten=e[7]===""?0:parseFloat(e[7]);g.scheduledWrite=e[8]===""?0:parseFloat(e[8]);l.bandwidth=g;k.push(l)}if(j==""){this.log.warn("Incoming GATEWAYS_SNAPSHOT UPC missing required requestID. Ignoring message.")}else{this.snapshotMan.receiveGatewaysSnapshot(j,k)}};a.user1.orbiter.CustomClient=function(){this.client=null};a.user1.orbiter.CustomClient.prototype.init=function(){};a.user1.orbiter.CustomClient.prototype.addEventListener=function(e,f,c,d){this.client.addEventListener(e,f,c,d)};a.user1.orbiter.CustomClient.prototype.dispatchEvent=function(c){return this.client.dispatchEvent(c)};a.user1.orbiter.CustomClient.prototype.hasEventListener=function(c){return this.client.hasEventListener(c)};a.user1.orbiter.CustomClient.prototype.removeEventListener=function(c,d,e){this.client.removeEventListener(c,d,e)};a.user1.orbiter.CustomClient.prototype.willTrigger=function(c){return this.client.willTrigger(c)};a.user1.orbiter.CustomClient.prototype.setClient=function(c){this.client=c};a.user1.orbiter.CustomClient.prototype.getClientID=function(){return this.client.getClientID()};a.user1.orbiter.CustomClient.prototype.getConnectionState=function(){return this.client.getConnectionState()};a.user1.orbiter.CustomClient.prototype.isSelf=function(){return this.client.isSelf()};a.user1.orbiter.CustomClient.prototype.setClientClass=function(e,c){var d=Array.prototype.slice.call(arguments).slice(2);this.client.setClientClass.apply(this.client,[e,c].concat(d))};a.user1.orbiter.CustomClient.prototype.isInRoom=function(c){return this.client.isInRoom(c)};a.user1.orbiter.CustomClient.prototype.isObservingRoom=function(c){return this.client.isObservingRoom(c)};a.user1.orbiter.CustomClient.prototype.getOccupiedRoomIDs=function(){return this.client.getOccupiedRoomIDs()};a.user1.orbiter.CustomClient.prototype.getObservedRoomIDs=function(){return this.client.getObservedRoomIDs()};a.user1.orbiter.CustomClient.prototype.getIP=function(){return this.client.getIP()};a.user1.orbiter.CustomClient.prototype.getConnectTime=function(){return this.client.getConnectTime()};a.user1.orbiter.CustomClient.prototype.getPing=function(){return this.client.getPing()};a.user1.orbiter.CustomClient.prototype.getTimeOnline=function(){return this.client.getTimeOnline()};a.user1.orbiter.CustomClient.prototype.sendMessage=function(c){var d=Array.prototype.slice.call(arguments).slice(0);this.client.sendMessage.apply(this.client,d)};a.user1.orbiter.CustomClient.prototype.setAttribute=function(c,f,e,d,g){this.client.setAttribute(c,f,e,d,g)};a.user1.orbiter.CustomClient.prototype.deleteAttribute=function(c,d){this.client.deleteAttribute(c,d)};a.user1.orbiter.CustomClient.prototype.getAttribute=function(c,d){return this.client.getAttribute(c,d)};a.user1.orbiter.CustomClient.prototype.getAttributes=function(){return this.client.getAttributes()};a.user1.orbiter.CustomClient.prototype.getAttributesByScope=function(c){return this.client.getAttributesByScope()};a.user1.orbiter.CustomClient.prototype.getClientManager=function(){return this.client.getClientManager()};a.user1.orbiter.CustomClient.prototype.getAccount=function(){return this.client.getAccount()};a.user1.orbiter.CustomClient.prototype.kick=function(){this.client.kick()};a.user1.orbiter.CustomClient.prototype.ban=function(d,c){this.client.ban(d,c)};a.user1.orbiter.CustomClient.prototype.observe=function(){this.client.observe()};a.user1.orbiter.CustomClient.prototype.stopObserving=function(){this.client.stopObserving()};a.user1.orbiter.CustomClient.prototype.isAdmin=function(){return this.client.isAdmin()};a.user1.orbiter.CustomClient.prototype.toString=function(){return"[object CustomClient, ID: "+this.getClientID()+"]"};a.user1.utils.EventUtil=new Object();a.user1.utils.EventUtil.migrateListeners=function(d,g,f,h){var c=f.length;for(var e=0;e<c;e+=2){if(d!=null){d.removeEventListener(f[e],f[e+1],h)}if(g!=null){g.addEventListener(f[e],f[e+1],h)}}};a.user1.orbiter.filters.FilterSet=function(){this.filters=new Array()};a.user1.orbiter.filters.FilterSet.prototype.addFilter=function(c){this.filters.push(c)};a.user1.orbiter.filters.FilterSet.prototype.getFilters=function(){return this.filters.slice(0)};a.user1.orbiter.filters.FilterSet.prototype.toXMLString=function(){var e="<filters>\n";var d;for(var c=0;c<this.filters.length;c++){d=this.filters[c];e+=d.toXMLString()+"\n"}e+="</filters>";return e};a.user1.orbiter.GatewayBandwidth=function(){this.lifetimeRead=0;this.lifetimeWritten=0;this.averageRead=0;this.averageWritten=0;this.intervalRead=0;this.intervalWritten=0;this.maxIntervalRead=0;this.maxIntervalWritten=0;this.scheduledWrite=0};a.user1.orbiter.Gateway=function(){this.type=null;this.lifetimeConnectionsByCategory=null;this.lifetimeClientsByType=null;this.lifetimeClientsByUPCVersion=null;this.attributes=null;this.connectionsPerSecond=0;this.maxConnectionsPerSecond=0;this.clientsPerSecond=0;this.maxClientsPerSecond=0;this.bandwidth=null};a.user1.utils.LRUCache=function(c){this.maxLength=c;this.length=0;this.hash=new a.user1.utils.UDictionary();this.first=null;this.last=null};a.user1.utils.LRUCache.prototype.get=function(c){var d=this.hash[c];if(d!=null){this.moveToHead(d);return d.value}else{return null}};a.user1.utils.LRUCache.prototype.put=function(c,e){var d=this.hash[c];if(d==null){if(this.length>=this.maxLength){this.removeLast()}else{this.length++}d=new a.user1.utils.CacheNode()}d.value=e;d.key=c;this.moveToHead(d);this.hash[c]=d};a.user1.utils.LRUCache.prototype.remove=function(c){var d=this.hash[c];if(d!=null){if(d.prev!=null){d.prev.next=d.next}if(d.next!=null){d.next.prev=d.prev}if(this.last==d){this.last=d.prev}if(this.first==d){this.first=d.next}}return d};a.user1.utils.LRUCache.prototype.clear=function(){this.first=null;this.last=null;this.length=0;this.hash=new a.user1.utils.UDictionary()};a.user1.utils.LRUCache.prototype.removeLast=function(){if(this.last!=null){delete this.hash[this.last.key];if(this.last.prev!=null){this.last.prev.next=null}else{this.first=null}this.last=this.last.prev}};a.user1.utils.LRUCache.prototype.moveToHead=function(c){if(c==this.first){return}if(c.prev!=null){c.prev.next=c.next}if(c.next!=null){c.next.prev=c.prev}if(this.last==c){this.last=c.prev}if(this.first!=null){c.next=this.first;this.first.prev=c}this.first=c;c.prev=null;if(this.last==null){this.last=this.first}};a.user1.orbiter.ModuleDefinition=function(e,c,d){this.id=e;this.type=c;this.source=d};a.user1.orbiter.ModuleType=new Object();a.user1.orbiter.ModuleType.CLASS="class";a.user1.orbiter.ModuleType.SCRIPT="script";a.user1.orbiter.snapshot.NodeListSnapshot=function(){a.user1.orbiter.snapshot.Snapshot.call(this);this.nodeList=null;this.method=a.user1.orbiter.UPC.GET_NODELIST_SNAPSHOT};a.user1.utils.extend(a.user1.orbiter.snapshot.NodeListSnapshot,a.user1.orbiter.snapshot.Snapshot);a.user1.orbiter.snapshot.NodeListSnapshot.prototype.setNodeList=function(c){this.nodeList=c};a.user1.orbiter.snapshot.NodeListSnapshot.prototype.getNodeList=function(){if(!this.nodeList){return null}return this.nodeList.slice()};a.user1.utils.integer=new Object();a.user1.utils.integer.MAX_VALUE=Math.pow(2,32)-1;a.user1.orbiter.filters.OrGroup=function(){a.user1.orbiter.filters.BooleanGroup.call(this,a.user1.orbiter.filters.BooleanGroupType.OR)};a.user1.utils.extend(a.user1.orbiter.filters.OrGroup,a.user1.orbiter.filters.BooleanGroup);a.user1.orbiter.upc.RemoveClientAttr=function(f,d,c,e){if(!a.user1.orbiter.Validator.isValidAttributeName(c)){throw new Error("Cannot delete attribute. Illegal name (see Validator.isValidAttributeName()): "+c)}if(!a.user1.orbiter.Validator.isValidAttributeScope(e)){throw new Error("Cannot delete client attribute. Illegal scope (see Validator.isValidAttributeScope()): "+e)}this.method=a.user1.orbiter.UPC.REMOVE_CLIENT_ATTR;this.args=[f,d,c,e]};a.user1.orbiter.upc.RemoveRoomAttr=function(d,c){if(!a.user1.orbiter.Validator.isValidAttributeName(c)){throw new Error("Cannot delete attribute. Illegal name (see Validator.isValidAttributeName()): "+c)}this.method=a.user1.orbiter.UPC.REMOVE_ROOM_ATTR;this.args=[d,c]};a.user1.utils.resolveMemberExpression=function(e){var f=e.split(".");var c=b;for(var d=0;d<f.length;d++){c=c[f[d]]}return c};a.user1.orbiter.Room=function(h,d,e,g,c,f){a.user1.events.EventDispatcher.call(this);this.disposed=false;this.id=null;this.syncState=null;this._clientIsInRoom=false;this._clientIsObservingRoom=false;this.numOccupants=0;this.numObservers=0;this.defaultClientClass=null;this.setRoomID(h);this.roomManager=d;this.messageManager=e;this.clientManager=g;this.accountManager=c;this.log=f;this.occupantList=new a.user1.orbiter.ClientSet();this.observerList=new a.user1.orbiter.ClientSet();this.attributeManager=new a.user1.orbiter.AttributeManager(this,this.messageManager,this.log);this.setSyncState(a.user1.orbiter.SynchronizationState.NOT_SYNCHRONIZED)};a.user1.utils.extend(a.user1.orbiter.Room,a.user1.events.EventDispatcher);a.user1.orbiter.Room.prototype.getAttributeManager=function(){return this.attributeManager};a.user1.orbiter.Room.prototype.setRoomID=function(c){var d;if(!a.user1.orbiter.Validator.isValidResolvedRoomID(c)){d="Invalid room ID specified during room creation. Offending ID: "+c;this.log.error(d);throw new Error(d)}this.id=c};a.user1.orbiter.Room.prototype.getRoomID=function(){return this.id};a.user1.orbiter.Room.prototype.getSimpleRoomID=function(){return a.user1.orbiter.RoomIDParser.getSimpleRoomID(this.id)};a.user1.orbiter.Room.prototype.getQualifier=function(){return a.user1.orbiter.RoomIDParser.getQualifier(this.id)};a.user1.orbiter.Room.prototype.join=function(c,d){if(this.disposed){return}if(this.clientIsInRoom()){this.log.warn(this+"Room join attempt aborted. Already in room.");return}if(c==null){c=""}if(!a.user1.orbiter.Validator.isValidPassword(c)){this.log.error(this+"Invalid room password supplied to join().  Join request not sent. See Validator.isValidPassword().");return}if(d!=null){this.setUpdateLevels(d)}this.messageManager.sendUPC(a.user1.orbiter.UPC.JOIN_ROOM,this.getRoomID(),c)};a.user1.orbiter.Room.prototype.leave=function(){if(this.disposed){return}if(this.clientIsInRoom()){this.messageManager.sendUPC(a.user1.orbiter.UPC.LEAVE_ROOM,this.getRoomID())}else{this.log.debug(this+" Leave-room request ignored. Not in room.")}};a.user1.orbiter.Room.prototype.doJoin=function(){this._clientIsInRoom=true;this.fireJoin()};a.user1.orbiter.Room.prototype.doJoinResult=function(c){this.fireJoinResult(c)};a.user1.orbiter.Room.prototype.doLeave=function(){var c=this.getRoomID();if(!this.clientIsObservingRoom()){this.purgeRoomData()}this._clientIsInRoom=false;this.fireLeave()};a.user1.orbiter.Room.prototype.doLeaveResult=function(c){this.fireLeaveResult(c)};a.user1.orbiter.Room.prototype.sendMessage=function(c,e,g){if(this.disposed){return}var f=Array.prototype.slice.call(arguments).slice(3);var h=this.roomManager;var d=[c,[this.getRoomID()],e,g!=null?g:null];h.sendMessage.apply(h,d.concat(f))};a.user1.orbiter.Room.prototype.addMessageListener=function(d,e,c){if(this.messageManager!=null){this.messageManager.addMessageListener(d,e,c,[this.getRoomID()])}};a.user1.orbiter.Room.prototype.removeMessageListener=function(c,d){if(this.messageManager!=null){this.messageManager.removeMessageListener(c,d)}};a.user1.orbiter.Room.prototype.hasMessageListener=function(g,h){var e=this.messageManager.getMessageListeners(g);var l;for(var d=0;d<e.length;d++){l=e[d];var k=l.getForRoomIDs();var f;for(var c=0;c<k.length;c++){f=k[d];if(f==this.getRoomID()){return true}}}return false};a.user1.orbiter.Room.prototype.synchronize=function(c){var j=this.getSyncState();this.log.debug(this+" Begin synchronization.");this.setSyncState(a.user1.orbiter.SynchronizationState.SYNCHRONIZING);this.getAttributeManager().getAttributeCollection().synchronizeScope(a.user1.orbiter.Tokens.GLOBAL_ATTR,c.attributes);if(this.disposed){return}var g=this.getOccupantIDs();var l=[];var k;var q;var o;var h;for(var m=c.occupants.length;--m>=0;){k=c.occupants[m].clientID;q=c.occupants[m].userID;l.push(k);o=this.clientManager.requestClient(k);h=this.accountManager.requestAccount(q);if(h!=null){o.setAccount(h)}if(!o.isSelf()){o.synchronize(c.occupants[m])}this.addOccupant(o);if(this.disposed){return}}var s;for(m=g.length;--m>=0;){s=g[m];if(a.user1.utils.ArrayUtil.indexOf(l,s)==-1){this.removeOccupant(s);if(this.disposed){return}}}var n=this.getObserverIDs();var r=[];var f;var e;var p;var d;for(m=c.observers.length;--m>=0;){f=c.observers[m].clientID;e=c.observers[m].userID;r.push(f);p=this.clientManager.requestClient(f);d=this.accountManager.requestAccount(e);if(d!=null){p.setAccount(d)}if(!p.isSelf()){p.synchronize(c.observers[m])}this.addObserver(p);if(this.disposed){return}}var s;for(m=n.length;--m>=0;){s=n[m];if(a.user1.utils.ArrayUtil.indexOf(r,s)==-1){this.removeObserver(s);if(this.disposed){return}}}var t=this.clientManager.self().getUpdateLevels(this.getRoomID());if(t.occupantList){this.setNumOccupants(this.occupantList.length())}else{if(t.occupantCount){this.setNumOccupants(c.occupantCount)}}if(t.observerList){this.setNumObservers(this.observerList.length())}else{if(t.observerCount){this.setNumObservers(c.observerCount)}}this.setSyncState(j);this.fireSynchronize(a.user1.orbiter.Status.SUCCESS)};a.user1.orbiter.Room.prototype.setSyncState=function(c){this.syncState=c};a.user1.orbiter.Room.prototype.updateSyncState=function(){if(this.disposed){this.setSyncState(a.user1.orbiter.SynchronizationState.NOT_SYNCHRONIZED)}else{if(this.roomManager.hasObservedRoom(this.getRoomID())||this.roomManager.hasOccupiedRoom(this.getRoomID())||this.roomManager.hasWatchedRoom(this.getRoomID())){this.setSyncState(a.user1.orbiter.SynchronizationState.SYNCHRONIZED)}else{this.setSyncState(a.user1.orbiter.SynchronizationState.NOT_SYNCHRONIZED)}}};a.user1.orbiter.Room.prototype.getSyncState=function(){return this.syncState};a.user1.orbiter.Room.prototype.setUpdateLevels=function(c){if(this.messageManager){this.messageManager.sendUPC(a.user1.orbiter.UPC.SET_ROOM_UPDATE_LEVELS,this.getRoomID(),c.toInt())}};a.user1.orbiter.Room.prototype.observe=function(c,d){if(this.disposed){return}this.roomManager.observeRoom(this.getRoomID(),c,d)};a.user1.orbiter.Room.prototype.stopObserving=function(){if(this.disposed){return}if(this.clientIsObservingRoom()){this.messageManager.sendUPC(a.user1.orbiter.UPC.STOP_OBSERVING_ROOM,this.getRoomID())}else{this.log.debug(this+" Stop-observing-room request ignored. Not observing room.")}};a.user1.orbiter.Room.prototype.doObserve=function(){this._clientIsObservingRoom=true;this.fireObserve()};a.user1.orbiter.Room.prototype.doObserveResult=function(c){this.fireObserveResult(c)};a.user1.orbiter.Room.prototype.doStopObserving=function(){var c=this.getRoomID();if(!this.clientIsInRoom()){this.purgeRoomData()}this._clientIsObservingRoom=false;this.fireStopObserving()};a.user1.orbiter.Room.prototype.doStopObservingResult=function(c){this.fireStopObservingResult(c)};a.user1.orbiter.Room.prototype.addOccupant=function(c){if(this.occupantList.contains(c)){this.log.info(this+" ignored addOccupant() request. Occupant list already contains client:"+c+".");return}this.occupantList.add(c);this.setNumOccupants(this.occupantList.length());if(!this.observerList.contains(c)){this.addClientAttributeListeners(c)}this.fireAddOccupant(c.getClientID())};a.user1.orbiter.Room.prototype.removeOccupant=function(f){var d=this.occupantList.removeByClientID(f);var c=d!=null;this.setNumOccupants(this.occupantList.length());if(!this.observerList.contains(d)){this.removeClientAttributeListeners(d)}var e=d.getCustomClient(this.getRoomID());this.fireRemoveOccupant(e!=null?e:d);if(!c){this.log.debug(this+" could not remove occupant: "+f+". No such client in the room's occupant list.")}};a.user1.orbiter.Room.prototype.getOccupantIDs=function(){if(this.disposed){return null}return this.occupantList.getAllIDs()};a.user1.orbiter.Room.prototype.getOccupants=function(){if(this.disposed){return null}var g=this.occupantList.getAll();var d=new Array();var e;var c;for(var f in g){c=g[f];e=c.getCustomClient(this.getRoomID());if(e!=null){d.push(e)}else{d.push(c)}}return d};a.user1.orbiter.Room.prototype.getOccupantsInternal=function(){return this.occupantList.getAll()};a.user1.orbiter.Room.prototype.clientIsInRoom=function(c){if(this.disposed){return false}if(c==null){return this._clientIsInRoom}return this.occupantList.containsClientID(c)};a.user1.orbiter.Room.prototype.getNumOccupants=function(){if(this.disposed){return 0}var c=this.clientManager.self().getUpdateLevels(this.getRoomID());if(c!=null){if(c.occupantCount||c.occupantList){return this.numOccupants}else{this.log.warn(this+" getNumOccupants() called, but no occupant count is available. To enable occupant count, turn on occupant list updates or occupant count updates via the Room's setUpdateLevels() method.");return 0}}else{this.log.debug(this+" getNumOccupants() called, but the current client's update levels for the room are unknown. To determine the room's occupant count, first join or observe the room.");return 0}};a.user1.orbiter.Room.prototype.setNumOccupants=function(c){var d=this.numOccupants;this.numOccupants=c;if(d!=c){this.fireOccupantCount(c)}};a.user1.orbiter.Room.prototype.getRoomSettings=function(){if(this.disposed){return null}var c=new a.user1.orbiter.RoomSettings();var e=this.getAttribute(a.user1.orbiter.Tokens.MAX_CLIENTS_ATTR);var d=this.getAttribute(a.user1.orbiter.Tokens.REMOVE_ON_EMPTY_ATTR);c.maxClients=e==null?null:e;switch(d){case null:c.removeOnEmpty=null;break;case"true":c.removeOnEmpty=true;break;case"false":c.removeOnEmpty=false;break}return c};a.user1.orbiter.Room.prototype.setRoomSettings=function(c){if(this.disposed){return}if(c.maxClients!=null){this.setAttribute(a.user1.orbiter.Tokens.MAX_CLIENTS_ATTR,c.maxClients.toString())}if(c.password!=null){this.setAttribute(a.user1.orbiter.Tokens.PASSWORD_ATTR,c.password)}if(c.removeOnEmpty!=null){this.setAttribute(a.user1.orbiter.Tokens.REMOVE_ON_EMPTY_ATTR,c.removeOnEmpty.toString())}};a.user1.orbiter.Room.prototype.addObserver=function(c){if(this.observerList.contains(c)){this.log.info(this+" ignored addObserver() request. Observer list already contains client:"+c+".");return}this.observerList.add(c);this.setNumObservers(this.observerList.length());if(!this.occupantList.contains(c)){this.addClientAttributeListeners(c)}this.fireAddObserver(c.getClientID())};a.user1.orbiter.Room.prototype.removeObserver=function(f){var d=this.observerList.removeByClientID(f);var c=d!=null;this.setNumObservers(this.observerList.length());if(!this.occupantList.contains(d)){this.removeClientAttributeListeners(d)}var e=d.getCustomClient(this.getRoomID());this.fireRemoveObserver(e!=null?e:d);if(!c){this.log.debug(this+" could not remove observer: "+f+". No such client in the room's observer list.")}};a.user1.orbiter.Room.prototype.getObserverIDs=function(){if(this.disposed){return null}return this.observerList.getAllIDs()};a.user1.orbiter.Room.prototype.getObservers=function(){if(this.disposed){return null}var f=this.observerList.getAll();var d=new Array();var e;var c;for(var g in f){c=f[g];e=c.getCustomClient(this.getRoomID());if(e!=null){d.push(e)}else{d.push(c)}}return d};a.user1.orbiter.Room.prototype.getObserversInternal=function(){return this.observerList.getAll()};a.user1.orbiter.Room.prototype.clientIsObservingRoom=function(c){if(this.disposed){return false}if(c==null){return this._clientIsObservingRoom}return this.observerList.containsClientID(c)};a.user1.orbiter.Room.prototype.getNumObservers=function(){if(this.disposed){return 0}var c=this.clientManager.self().getUpdateLevels(this.getRoomID());if(c!=null){if(c.observerCount||c.observerList){return this.numObservers}else{this.log.warn(this+" getNumObservers() called, but no observer count is available. To enable observer count, turn on observer list updates or observer count updates via the Room's setUpdateLevels() method.");return 0}}else{this.log.warn(this+" getNumObservers() called, but the current client's update  levels for the room are unknown. Please report this issue to union@user1.net.");return 0}};a.user1.orbiter.Room.prototype.setNumObservers=function(d){var c=this.numObservers;this.numObservers=d;if(c!=d){this.fireObserverCount(d)}};a.user1.orbiter.Room.prototype.getClient=function(e){if(this.disposed){return null}var d;var c=this.occupantList.getByClientID(e);c=(c==null)?this.observerList.getByClientID(e):c;if(c!=null){d=c.getCustomClient(this.getRoomID())}return d==null?c:d};a.user1.orbiter.Room.prototype.addClientAttributeListeners=function(c){c.addEventListener(a.user1.orbiter.AttributeEvent.UPDATE,this.updateClientAttributeListener,this);c.addEventListener(a.user1.orbiter.AttributeEvent.DELETE,this.deleteClientAttributeListener,this)};a.user1.orbiter.Room.prototype.removeClientAttributeListeners=function(c){c.removeEventListener(a.user1.orbiter.AttributeEvent.UPDATE,this.updateClientAttributeListener,this);c.removeEventListener(a.user1.orbiter.AttributeEvent.DELETE,this.deleteClientAttributeListener,this)};a.user1.orbiter.Room.prototype.updateClientAttributeListener=function(f){var c=f.getChangedAttr();var d=f.target;var g=d.getCustomClient(this.getRoomID());this.fireUpdateClientAttribute(g==null?d:g,c.scope,c.name,c.value,c.oldValue)};a.user1.orbiter.Room.prototype.deleteClientAttributeListener=function(f){var c=f.getChangedAttr();var d=f.target;var g=d.getCustomClient(this.getRoomID());this.fireDeleteClientAttribute(g==null?d:g,c.scope,c.name,c.value)};a.user1.orbiter.Room.prototype.setDefaultClientClass=function(c){this.defaultClientClass=c};a.user1.orbiter.Room.prototype.getDefaultClientClass=function(){return this.defaultClientClass};a.user1.orbiter.Room.prototype.setAttribute=function(c,e,d,g,f){if(this.disposed){return}if(d!==false){d=true}var h=(d?a.user1.orbiter.AttributeOptions.FLAG_SHARED:0)|(g?a.user1.orbiter.AttributeOptions.FLAG_PERSISTENT:0)|(f?a.user1.orbiter.AttributeOptions.FLAG_EVALUATE:0);this.attributeManager.setAttribute(new a.user1.orbiter.upc.SetRoomAttr(c,e,h,this.getRoomID()))};a.user1.orbiter.Room.prototype.deleteAttribute=function(c){if(this.disposed){return}var d=new a.user1.orbiter.upc.RemoveRoomAttr(this.getRoomID(),c);this.attributeManager.deleteAttribute(d)};a.user1.orbiter.Room.prototype.getAttribute=function(c){if(this.disposed){return null}return this.attributeManager.getAttribute(c)};a.user1.orbiter.Room.prototype.getAttributes=function(){if(this.disposed){return null}return this.attributeManager.getAttributesByScope(a.user1.orbiter.Tokens.GLOBAL_ATTR)};a.user1.orbiter.Room.prototype.sendModuleMessage=function(e,f){if(this.disposed){return}var d=[a.user1.orbiter.UPC.SEND_ROOMMODULE_MESSAGE,this.getRoomID(),e];for(var c in f){d.push(c+"|"+f[c])}this.messageManager.sendUPC.apply(this.messageManager,d)};a.user1.orbiter.Room.prototype.remove=function(c){if(this.disposed){return}this.roomManager.removeRoom(this.getRoomID(),c)};a.user1.orbiter.Room.prototype.toString=function(){return"[ROOM id: "+this.getRoomID()+"]"};a.user1.orbiter.Room.prototype.fireJoin=function(){if(this.log){this.log.info(this+" Room joined.")}var c=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.JOIN);this.dispatchEvent(c)};a.user1.orbiter.Room.prototype.fireJoinResult=function(c){if(this.log){this.log.info(this+" Join result: "+c)}var d=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.JOIN_RESULT,null,null,c);this.dispatchEvent(d)};a.user1.orbiter.Room.prototype.fireLeave=function(){if(this.log){this.log.info(this+" Room left.")}var c=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.LEAVE);this.dispatchEvent(c)};a.user1.orbiter.Room.prototype.fireLeaveResult=function(c){if(this.log){this.log.info(this+" Leave result: "+c)}var d=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.LEAVE_RESULT,null,null,c);this.dispatchEvent(d)};a.user1.orbiter.Room.prototype.fireAddOccupant=function(d){if(this.log){this.log.info(this+" Added occupant: ["+d+"].")}var c=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.ADD_OCCUPANT,this.getClient(d),d);this.dispatchEvent(c)};a.user1.orbiter.Room.prototype.fireRemoveOccupant=function(c){if(this.log){this.log.info(this+" Removed occupant: "+c+".")}var d=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.REMOVE_OCCUPANT,c,c.getClientID());this.dispatchEvent(d)};a.user1.orbiter.Room.prototype.fireAddObserver=function(d){if(this.log){this.log.info(this+" Added observer: ["+d+"].")}var c=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.ADD_OBSERVER,this.getClient(d),d);this.dispatchEvent(c)};a.user1.orbiter.Room.prototype.fireRemoveObserver=function(c){if(this.log){this.log.info(this+" Removed observer: "+c+".")}var d=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.REMOVE_OBSERVER,c,c.getClientID());this.dispatchEvent(d)};a.user1.orbiter.Room.prototype.fireUpdateClientAttribute=function(c,h,g,f,d){if(this.log){this.log.info(this+" Client attribute updated on "+c+". Attribute ["+g+"] is now: ["+f+"]. Old value was: ["+d+"].")}var i=new a.user1.orbiter.Attribute(g,f,d,h);var j=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.UPDATE_CLIENT_ATTRIBUTE,c,c.getClientID(),null,i);this.dispatchEvent(j)};a.user1.orbiter.Room.prototype.fireDeleteClientAttribute=function(c,f,d,i){if(this.log){this.log.info(this+" Client attribute deleted from "+c+". Deleted attribute: ["+d+"].")}var g=new a.user1.orbiter.Attribute(d,i,null,f);var h=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.DELETE_CLIENT_ATTRIBUTE,c,c.getClientID(),null,g);this.dispatchEvent(h)};a.user1.orbiter.Room.prototype.fireOccupantCount=function(d){if(this.log){this.log.info(this+" New occupant count: "+d)}var c=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.OCCUPANT_COUNT,null,null,null,null,d);this.dispatchEvent(c)};a.user1.orbiter.Room.prototype.fireObserverCount=function(d){if(this.log){this.log.info(this+" New observer count: "+d)}var c=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.OBSERVER_COUNT,null,null,null,null,d);this.dispatchEvent(c)};a.user1.orbiter.Room.prototype.fireSynchronize=function(c){if(this.log){this.log.info(this+" Synchronization complete.")}var d=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.SYNCHRONIZE,null,null,c);this.dispatchEvent(d)};a.user1.orbiter.Room.prototype.fireObserve=function(){if(this.log){this.log.info(this+" Room observed.")}var c=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.OBSERVE);this.dispatchEvent(c)};a.user1.orbiter.Room.prototype.fireObserveResult=function(c){if(this.log){this.log.info(this+" Observe result: "+c)}var d=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.OBSERVE_RESULT,null,null,c);this.dispatchEvent(d)};a.user1.orbiter.Room.prototype.fireStopObserving=function(){if(this.log){this.log.info(this+" Observation stopped.")}var c=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.STOP_OBSERVING);this.dispatchEvent(c)};a.user1.orbiter.Room.prototype.fireStopObservingResult=function(c){if(this.log){this.log.info(this+"Stop observing result:  "+c)}var d=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.STOP_OBSERVING_RESULT,null,null,c);this.dispatchEvent(d)};a.user1.orbiter.Room.prototype.fireRemoved=function(){var c=new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.REMOVED);this.dispatchEvent(c)};a.user1.orbiter.Room.prototype.purgeRoomData=function(){if(this.disposed){return}this.log.debug(this+" Clearing occupant list.");for(var d in this.occupantList.getAll()){this.removeClientAttributeListeners(this.occupantList.getByClientID(d))}this.occupantList.removeAll();this.log.debug(this+" Clearing observer list.");for(var c in this.observerList.getAll()){this.removeClientAttributeListeners(this.observerList.getByClientID(c))}this.observerList.removeAll();this.log.debug(this+" Clearing room attributes.");this.attributeManager.removeAll()};a.user1.orbiter.Room.prototype.shutdown=function(){if(this.disposed){return}var c=this.log;c.debug(this+" Shutdown started.");if(this.clientIsInRoom()){c.info(this+" Current client is in the room. Forcing the client to leave...");this.doLeave()}if(this.clientIsObservingRoom()){c.info(this+" Current client is observing the room. Forcing the client to stop observing...");this.doStopObserving()}c.info(this+" Dereferencing resources.");this.purgeRoomData();this.attributeManager.dispose();this.fireRemoved();this.dispose();c.info(this+" Shutdown complete.")};a.user1.orbiter.Room.prototype.dispose=function(){this.log=null;this.syncState=null;this.occupantList=null;this.observerList=null;this.attributeManager=null;this.numOccupants=0;this.defaultClientClass=null;this.messageManager=null;this.roomManager=null;this.disposed=true};a.user1.orbiter.RoomClassRegistry=function(){this.registry=new Object()};a.user1.orbiter.RoomClassRegistry.prototype.setRoomClass=function(d,c){this.registry[d]=c};a.user1.orbiter.RoomClassRegistry.prototype.clearRoomClass=function(c){delete this.registry[c]};a.user1.orbiter.RoomClassRegistry.prototype.getRoomClass=function(c){return this.registry[c]?this.registry[c]:a.user1.orbiter.Room};a.user1.orbiter.RoomEvent=function(g,e,i,d,h,c,f){a.user1.events.Event.call(this,g);this.client=e;this.clientID=i==""?null:i;this.status=d;this.changedAttr=h;this.numClients=c;this.roomID=f};a.user1.utils.extend(a.user1.orbiter.RoomEvent,a.user1.events.Event);a.user1.orbiter.RoomEvent.JOIN="JOIN";a.user1.orbiter.RoomEvent.JOIN_RESULT="JOIN_RESULT";a.user1.orbiter.RoomEvent.LEAVE="LEAVE";a.user1.orbiter.RoomEvent.LEAVE_RESULT="LEAVE_RESULT";a.user1.orbiter.RoomEvent.OBSERVE="OBSERVE";a.user1.orbiter.RoomEvent.OBSERVE_RESULT="OBSERVE_RESULT";a.user1.orbiter.RoomEvent.STOP_OBSERVING="STOP_OBSERVING";a.user1.orbiter.RoomEvent.STOP_OBSERVING_RESULT="STOP_OBSERVING_RESULT";a.user1.orbiter.RoomEvent.SYNCHRONIZE="SYNCHRONIZE";a.user1.orbiter.RoomEvent.UPDATE_CLIENT_ATTRIBUTE="UPDATE_CLIENT_ATTRIBUTE";a.user1.orbiter.RoomEvent.DELETE_CLIENT_ATTRIBUTE="DELETE_CLIENT_ATTRIBUTE";a.user1.orbiter.RoomEvent.ADD_OCCUPANT="ADD_OCCUPANT";a.user1.orbiter.RoomEvent.REMOVE_OCCUPANT="REMOVE_OCCUPANT";a.user1.orbiter.RoomEvent.ADD_OBSERVER="ADD_OBSERVER";a.user1.orbiter.RoomEvent.REMOVE_OBSERVER="REMOVE_OBSERVER";a.user1.orbiter.RoomEvent.OCCUPANT_COUNT="OCCUPANT_COUNT";a.user1.orbiter.RoomEvent.OBSERVER_COUNT="OBSERVER_COUNT";a.user1.orbiter.RoomEvent.REMOVED="REMOVED";a.user1.orbiter.RoomEvent.prototype.getRoomID=function(){return this.roomID};a.user1.orbiter.RoomEvent.prototype.getClient=function(){return this.client};a.user1.orbiter.RoomEvent.prototype.getClientID=function(){return this.clientID};a.user1.orbiter.RoomEvent.prototype.getStatus=function(){return this.status};a.user1.orbiter.RoomEvent.prototype.getNumClients=function(){return this.numClients};a.user1.orbiter.RoomEvent.prototype.getChangedAttr=function(){return this.changedAttr};a.user1.orbiter.RoomEvent.prototype.toString=function(){return"[object RoomEvent]"};a.user1.orbiter.RoomList=function(){a.user1.events.EventDispatcher.call(this);this.rooms=new Array()};a.user1.utils.extend(a.user1.orbiter.RoomList,a.user1.events.EventDispatcher);a.user1.orbiter.RoomList.prototype.add=function(c){if(!this.contains(c)){this.rooms.push(c);this.dispatchAddItem(c);return c}else{return null}};a.user1.orbiter.RoomList.prototype.remove=function(d){var c=a.user1.utils.ArrayUtil.indexOf(this.rooms,d);if(c!=-1){this.rooms.splice(c,1)[0];this.dispatchRemoveItem(d);return d}else{return null}};a.user1.orbiter.RoomList.prototype.removeAll=function(){var d;for(var c=this.rooms.length;--c>=0;){d=this.rooms.splice(c,1)[0];this.dispatchRemoveItem(d)}};a.user1.orbiter.RoomList.prototype.removeByRoomID=function(d){var e;for(var c=this.rooms.length;--c>=0;){if(this.rooms[c].getRoomID()==d){e=this.rooms.splice(c,1)[0];this.dispatchRemoveItem(e);return e}}return null};a.user1.orbiter.RoomList.prototype.contains=function(c){return a.user1.utils.ArrayUtil.indexOf(this.rooms,c)!=-1};a.user1.orbiter.RoomList.prototype.containsRoomID=function(c){if(c==""||c==null){return false}return this.getByRoomID(c)!=null};a.user1.orbiter.RoomList.prototype.getByRoomID=function(d){var e;for(var c=this.rooms.length;--c>=0;){e=this.rooms[c];if(e.getRoomID()==d){return e}}return null};a.user1.orbiter.RoomList.prototype.getAll=function(){return this.rooms.slice(0)};a.user1.orbiter.RoomList.prototype.length=function(){return this.rooms.length};a.user1.orbiter.RoomList.prototype.dispatchAddItem=function(c){this.dispatchEvent(new a.user1.orbiter.CollectionEvent(a.user1.orbiter.CollectionEvent.ADD_ITEM,c))};a.user1.orbiter.RoomList.prototype.dispatchRemoveItem=function(c){this.dispatchEvent(new a.user1.orbiter.CollectionEvent(a.user1.orbiter.CollectionEvent.REMOVE_ITEM,c))};a.user1.orbiter.snapshot.RoomListSnapshot=function(d,c){a.user1.orbiter.snapshot.Snapshot.call(this);this.roomList=null;this.qualifier=null;this.recursive=null;this.method=a.user1.orbiter.UPC.GET_ROOMLIST_SNAPSHOT;this.args=[d,c]};a.user1.utils.extend(a.user1.orbiter.snapshot.RoomListSnapshot,a.user1.orbiter.snapshot.Snapshot);a.user1.orbiter.snapshot.RoomListSnapshot.prototype.setRoomList=function(c){this.roomList=c};a.user1.orbiter.snapshot.RoomListSnapshot.prototype.getRoomList=function(){if(!this.roomList){return null}return this.roomList.slice()};a.user1.orbiter.snapshot.RoomListSnapshot.prototype.getQualifier=function(){return this.qualifier};a.user1.orbiter.snapshot.RoomListSnapshot.prototype.setQualifier=function(c){this.qualifier=c};a.user1.orbiter.snapshot.RoomListSnapshot.prototype.getRecursive=function(){return this.recursive};a.user1.orbiter.snapshot.RoomListSnapshot.prototype.setRecursive=function(c){this.recursive=c};a.user1.orbiter.RoomManager=function(c){a.user1.events.EventDispatcher.call(this);this.watchedQualifiers=[];this.cachedRooms=new a.user1.orbiter.RoomList();this.occupiedRooms=new a.user1.orbiter.RoomList();this.observedRooms=new a.user1.orbiter.RoomList();this.watchedRooms=new a.user1.orbiter.RoomList();this.cachedRooms.addEventListener(a.user1.orbiter.CollectionEvent.REMOVE_ITEM,this.removeRoomListener,this);this.occupiedRooms.addEventListener(a.user1.orbiter.CollectionEvent.ADD_ITEM,this.addRoomListener,this);this.occupiedRooms.addEventListener(a.user1.orbiter.CollectionEvent.REMOVE_ITEM,this.removeRoomListener,this);this.observedRooms.addEventListener(a.user1.orbiter.CollectionEvent.ADD_ITEM,this.addRoomListener,this);this.observedRooms.addEventListener(a.user1.orbiter.CollectionEvent.REMOVE_ITEM,this.removeRoomListener,this);this.watchedRooms.addEventListener(a.user1.orbiter.CollectionEvent.ADD_ITEM,this.addRoomListener,this);this.watchedRooms.addEventListener(a.user1.orbiter.CollectionEvent.REMOVE_ITEM,this.removeRoomListener,this);this.orbiter=c;this.addEventListener(a.user1.orbiter.RoomManagerEvent.WATCH_FOR_ROOMS_RESULT,this.watchForRoomsResultListener,this);this.addEventListener(a.user1.orbiter.RoomManagerEvent.STOP_WATCHING_FOR_ROOMS_RESULT,this.stopWatchingForRoomsResultListener,this);this.roomClassRegistry=new a.user1.orbiter.RoomClassRegistry();this.log=this.orbiter.getLog()};a.user1.utils.extend(a.user1.orbiter.RoomManager,a.user1.events.EventDispatcher);a.user1.orbiter.RoomManager.prototype.createRoom=function(k,j,e,c){if(j==null){j=new a.user1.orbiter.RoomSettings()}if(c==null){c=new a.user1.orbiter.RoomModules()}var m=c.getIdentifiers();var g;for(var f=m.length;--f>=0;){var g=m[f];if(!a.user1.orbiter.Validator.isValidModuleName(g)){throw new Error("[ROOM_MANAGER] createRoom() failed. Illegal room module name: ["+g+"]. See net.user1.orbiter.Validator.isValidModuleName().")}}if(k!=null){if(!a.user1.orbiter.Validator.isValidResolvedRoomID(k)){throw new Error("[ROOM_MANAGER] createRoom() failed. Illegal room id: ["+k+"]. See net.user1.orbiter.Validator.isValidResolvedRoomID().")}}if(k==null){k=""}else{this.addCachedRoom(k)}if(e!=null){var h;var d="";for(var f=0;f<e.length;f++){h=e[f];attrSettings=0;attrSettings|=h.shared?AttributeOptions.FLAG_SHARED:0;attrSettings|=h.persistent?AttributeOptions.FLAG_PERSISTENT:0;attrSettings|=h.immutable?AttributeOptions.FLAG_IMMUTABLE:0;d+=h.NAME+a.user1.orbiter.Tokens.RS+h.VALUE+a.user1.orbiter.Tokens.RS+attrSettings.toString();if(f<e.length-1){d+=Tokens.RS}}}var l=this.orbiter.getMessageManager();l.sendUPC(a.user1.orbiter.UPC.CREATE_ROOM,k,j.serialize(),d,c.serialize());if(k==""){return null}else{return this.getRoom(k)}};a.user1.orbiter.RoomManager.prototype.removeRoom=function(e,c){if(e==null||!a.user1.orbiter.Validator.isValidResolvedRoomID(e)){throw new Error("Invalid room id supplied to removeRoom(): ["+e+"]. Request not sent.")}if(c==null){c=""}var d=this.orbiter.getMessageManager();d.sendUPC(a.user1.orbiter.UPC.REMOVE_ROOM,e,c)};a.user1.orbiter.RoomManager.prototype.observeRoom=function(f,d,g){var c;if(!a.user1.orbiter.Validator.isValidResolvedRoomID(f)){throw new Error("Invalid room id supplied to observeRoom(): ["+f+"]. Request not sent. See net.user1.orbiter.Validator.isValidResolvedRoomID().")}c=this.getRoom(f);if(c!=null){if(c.clientIsObservingRoom()){this.log.warn("[ROOM_MANAGER] Room observe attempt ignored. Already observing room: '"+f+"'.");return null}}else{c=this.addCachedRoom(f)}if(d==null){d=""}if(!a.user1.orbiter.Validator.isValidPassword(d)){throw new Error("Invalid room password supplied to observeRoom().  Room ID: ["+f+"], password: ["+d+"]. See net.user1.orbiter.Validator.isValidPassword().")}if(g!=null){c.setUpdateLevels(g)}var e=this.orbiter.getMessageManager();e.sendUPC(a.user1.orbiter.UPC.OBSERVE_ROOM,f,d);return c};a.user1.orbiter.RoomManager.prototype.watchForRooms=function(d){var c=false;if(d==null){d="";c=true}var e=this.orbiter.getMessageManager();e.sendUPC(a.user1.orbiter.UPC.WATCH_FOR_ROOMS,d,c.toString())};a.user1.orbiter.RoomManager.prototype.stopWatchingForRooms=function(d){var c=false;if(d==null){d="";c=true}var e=this.orbiter.getMessageManager();e.sendUPC(a.user1.orbiter.UPC.STOP_WATCHING_FOR_ROOMS,d,c.toString())};a.user1.orbiter.RoomManager.prototype.isWatchingQualifier=function(c){return a.user1.utils.ArrayUtil.indexOf(this.watchedQualifiers,c)!=-1};a.user1.orbiter.RoomManager.prototype.watchForRoomsResultListener=function(c){if(c.getStatus()==a.user1.orbiter.Status.SUCCESS){this.watchedQualifiers.push(c.getRoomIdQualifier())}};a.user1.orbiter.RoomManager.prototype.stopWatchingForRoomsResultListener=function(d){var c=d.getRoomIdQualifier();var f;if(d.getStatus()==a.user1.orbiter.Status.SUCCESS){f=a.user1.utils.ArrayUtil.indexOf(watchedQualifiers,c);if(f!=-1){watchedQualifiers.splice(f,1)}}};a.user1.orbiter.RoomManager.prototype.sendMessage=function(c,i,e,h){var g=Array.prototype.slice.call(arguments).slice(4);var d;if(c==null||c==""){this.log.warn("[ROOM_MANAGER]  sendMessage() failed. No messageName supplied.");return}var f=this.orbiter.getMessageManager();d=[a.user1.orbiter.UPC.SEND_MESSAGE_TO_ROOMS,c,i.join(a.user1.orbiter.Tokens.RS),String(e),h!=null?h.toXMLString():""];f.sendUPC.apply(f,d.concat(g))};a.user1.orbiter.RoomManager.prototype.joinRoom=function(f,d,g){if(!this.orbiter.isReady()){this.log.warn("[ROOM_MANAGER] Connection not open. Request to join room ["+f+"] could not be sent.");return null}if(!a.user1.orbiter.Validator.isValidResolvedRoomID(f)){this.log.error("[ROOM_MANAGER] Invalid room id supplied to joinRoom(): ["+f+"]. Join request not sent. See net.user1.orbiter.Validator.isValidResolvedRoomID().");return null}var c=this.getRoom(f);if(c!=null){if(c.clientIsInRoom()){this.log.warn("[ROOM_MANAGER] Room join attempt aborted. Already in room: ["+c.getRoomID()+"].");return c}}else{c=this.addCachedRoom(f)}if(d==null){d=""}if(!a.user1.orbiter.Validator.isValidPassword(d)){this.log.error("[ROOM_MANAGER] Invalid room password supplied to joinRoom(): ["+f+"]. Join request not sent. See net.user1.orbiter.Validator.isValidPassword().");return c}if(g!=null){c.setUpdateLevels(g)}var e=this.orbiter.getMessageManager();e.sendUPC(a.user1.orbiter.UPC.JOIN_ROOM,f,d);return c};a.user1.orbiter.RoomManager.prototype.requestRoom=function(e){if(e==""){this.log.warn("[ROOM_MANAGER] requestRoom() failed. Supplied room ID was empty.");return null}var d=this.getRoom(e);if(d!=null){return d}else{this.log.debug("[ROOM_MANAGER] Creating new room object for id: ["+e+"]");var c=this.roomClassRegistry.getRoomClass(e);d=new c(e,this,this.orbiter.getMessageManager(),this.orbiter.getClientManager(),this.orbiter.getAccountManager(),this.log);return d}};a.user1.orbiter.RoomManager.prototype.disposeRoom=function(c){var d=this.getRoom(c);if(d!=null){this.log.debug("[ROOM_MANAGER] Disposing room: "+d);this.removeCachedRoom(c);this.removeWatchedRoom(c);this.removeOccupiedRoom(c);this.removeObservedRoom(c)}else{this.log.debug("[ROOM_MANAGER] disposeRoom() called for unknown room: ["+c+"]")}};a.user1.orbiter.RoomManager.prototype.removeAllRooms=function(){this.log.debug("[ROOM_MANAGER] Removing all local room object references.");this.cachedRooms.removeAll();this.watchedRooms.removeAll();this.occupiedRooms.removeAll();this.observedRooms.removeAll()};a.user1.orbiter.RoomManager.prototype.addCachedRoom=function(c){var d=this.cachedRooms.getByRoomID(c);if(d==null){this.log.debug("[ROOM_MANAGER] Adding cached room: ["+c+"]");return this.cachedRooms.add(this.requestRoom(c))}else{return d}};a.user1.orbiter.RoomManager.prototype.removeCachedRoom=function(c){if(this.cachedRooms.containsRoomID(c)){this.cachedRooms.removeByRoomID(c)}else{throw new Error("[ROOM_MANAGER] Could not remove cached room: ["+c+"]. Room not found.")}};a.user1.orbiter.RoomManager.prototype.hasCachedRoom=function(c){return this.cachedRooms.containsRoomID(c)};a.user1.orbiter.RoomManager.prototype.disposeCachedRooms=function(){var d;var e=cachedRooms.getAll();for(var c=0;c<=e.length;c++){d=e[c];removeCachedRoom(d.getRoomID())}};a.user1.orbiter.RoomManager.prototype.addWatchedRoom=function(c){this.log.debug("[ROOM_MANAGER] Adding watched room: ["+c+"]");var d=this.watchedRooms.add(this.requestRoom(c));d.updateSyncState()};a.user1.orbiter.RoomManager.prototype.removeWatchedRoom=function(c){var d=this.watchedRooms.removeByRoomID(c);if(d!=null){d.updateSyncState()}else{this.log.debug("[ROOM_MANAGER] Request to remove watched room ["+c+"] ignored; room not in watched list.")}};a.user1.orbiter.RoomManager.prototype.removeAllWatchedRooms=function(){var e=this.watchedRooms.getAll();var d;for(var c=0;c<=e.length;c++){d=e[c];removeWatchedRoom(d.getRoomID());d.updateSyncState()}};a.user1.orbiter.RoomManager.prototype.setWatchedRooms=function(f,c){var j=this.getRoomsWithQualifier(f);var h;for(var d=0;d<j.length;d++){h=j[d];if(a.user1.utils.ArrayUtil.indexOf(c,h.getSimpleRoomID())==-1){this.removeWatchedRoom(h.getRoomID())}}var g;var e;for(var d=0;d<c.length;d++){e=c[d];g=f+(f!=""?".":"")+e;if(!this.watchedRooms.containsRoomID(g)){this.addWatchedRoom(g)}}};a.user1.orbiter.RoomManager.prototype.hasWatchedRoom=function(c){return this.watchedRooms.containsRoomID(c)};a.user1.orbiter.RoomManager.prototype.addOccupiedRoom=function(c){this.log.debug("[ROOM_MANAGER] Adding occupied room: ["+c+"]");var d=this.occupiedRooms.add(this.requestRoom(c));d.updateSyncState();return d};a.user1.orbiter.RoomManager.prototype.removeOccupiedRoom=function(c){var d=this.occupiedRooms.removeByRoomID(c);if(d!=null){d.updateSyncState()}else{this.log.debug("[ROOM_MANAGER] Request to remove occupied room ["+c+"] ignored; client is not in room.")}};a.user1.orbiter.RoomManager.prototype.hasOccupiedRoom=function(c){return this.occupiedRooms.containsRoomID(c)};a.user1.orbiter.RoomManager.prototype.addObservedRoom=function(c){this.log.debug("[ROOM_MANAGER] Adding observed room: ["+c+"]");var d=this.observedRooms.add(this.requestRoom(c));d.updateSyncState();return d};a.user1.orbiter.RoomManager.prototype.removeObservedRoom=function(c){var d=this.observedRooms.removeByRoomID(c);if(d!=null){d.updateSyncState()}else{this.log.debug("[ROOM_MANAGER] Request to remove observed room ["+c+"] ignored; client is not observing room.")}};a.user1.orbiter.RoomManager.prototype.hasObservedRoom=function(c){return this.observedRooms.containsRoomID(c)};a.user1.orbiter.RoomManager.prototype.addRoomListener=function(d){var c=d.getItem();if(this.getKnownReferenceCount(c.getRoomID())==1){this.fireRoomAdded(c.getQualifier(),c.getRoomID(),c);this.fireRoomCount(this.getNumRooms())}};a.user1.orbiter.RoomManager.prototype.removeRoomListener=function(f){var d=f.getItem();var c=this.getKnownReferenceCount(d.getRoomID());switch(f.target){case this.occupiedRooms:this.log.debug("[ROOM_MANAGER] Removed occupied room: "+d);if(c==0){this.fireRoomRemoved(d.getQualifier(),d.getRoomID(),d);this.fireRoomCount(this.getNumRooms())}break;case this.observedRooms:this.log.debug("[ROOM_MANAGER] Removed observed room: "+d);if(c==0){this.fireRoomRemoved(d.getQualifier(),d.getRoomID(),d);this.fireRoomCount(this.getNumRooms())}break;case this.watchedRooms:this.log.debug("[ROOM_MANAGER] Removed watched room: "+d);if(c==0){this.fireRoomRemoved(d.getQualifier(),d.getRoomID(),d);this.fireRoomCount(this.getNumRooms())}break;case this.cachedRooms:this.log.debug("[ROOM_MANAGER] Removed cached room: "+d);break}if(c==0&&!this.cachedRooms.contains(d)){d.shutdown()}};a.user1.orbiter.RoomManager.prototype.getKnownReferenceCount=function(c){var d=0;d+=this.hasObservedRoom(c)?1:0;d+=this.hasOccupiedRoom(c)?1:0;d+=this.hasWatchedRoom(c)?1:0;return d};a.user1.orbiter.RoomManager.prototype.getRooms=function(){var c=a.user1.utils.ArrayUtil.combine(this.occupiedRooms.getAll(),this.observedRooms.getAll(),this.watchedRooms.getAll());return c};a.user1.orbiter.RoomManager.prototype.roomIsKnown=function(d){var f=this.getRooms();var e;for(var c=f.length;--c>=0;){e=f[c];if(e.getRoomID()==d){return true}}return false};a.user1.orbiter.RoomManager.prototype.getRoomIDs=function(){var d=new Array();var e=this.getRooms();for(var c=0;c<=e.length;c++){d.push(e[c].getRoomID())}return d};a.user1.orbiter.RoomManager.prototype.getAllRooms=function(){var c=a.user1.utils.ArrayUtil.combine(this.occupiedRooms.getAll(),this.observedRooms.getAll(),this.watchedRooms.getAll(),this.cachedRooms.getAll());return c};a.user1.orbiter.RoomManager.prototype.getRoomsWithQualifier=function(d){if(d==null){return this.getRooms()}var f=[];var g=this.getRooms();var e;for(var c=0;c<g.length;c++){e=g[c];if(a.user1.orbiter.RoomIDParser.getQualifier(e.getRoomID())==d){f.push(e)}}return f};a.user1.orbiter.RoomManager.prototype.getNumRooms=function(c){return this.getRoomsWithQualifier(c).length};a.user1.orbiter.RoomManager.prototype.getRoom=function(d){var f=this.getAllRooms();var e;for(var c=f.length;--c>=0;){e=f[c];if(e.getRoomID()==d){return e}}return null};a.user1.orbiter.RoomManager.prototype.getRoomClassRegistry=function(){return this.roomClassRegistry};a.user1.orbiter.RoomManager.prototype.getAllClients=function(){var d=[];var f=this.getRooms();var e;for(var c=f.length;--c>=0;){e=f[c];d.push(e.getOccupantsInternal());d.push(e.getObserversInternal())}return a.user1.utils.ObjectUtil.combine(d)};a.user1.orbiter.RoomManager.prototype.clientIsKnown=function(g){var d=[];var f=this.getRooms();var e;for(var c=f.length;--c>=0;){e=f[c];d.push(e.getOccupantsInternal());d.push(e.getObserversInternal())}for(var c=d.length;--c>=0;){if(d[c][g]!=null){return true}}return false};a.user1.orbiter.RoomManager.prototype.fireWatchForRoomsResult=function(d,c){var f=new a.user1.orbiter.RoomManagerEvent(a.user1.orbiter.RoomManagerEvent.WATCH_FOR_ROOMS_RESULT,null,c,d);this.dispatchEvent(f)};a.user1.orbiter.RoomManager.prototype.fireStopWatchingForRoomsResult=function(d,c){var f=new a.user1.orbiter.RoomManagerEvent(a.user1.orbiter.RoomManagerEvent.STOP_WATCHING_FOR_ROOMS_RESULT,null,c,d);this.dispatchEvent(f)};a.user1.orbiter.RoomManager.prototype.fireCreateRoomResult=function(d,f,c){var g=new a.user1.orbiter.RoomManagerEvent(a.user1.orbiter.RoomManagerEvent.CREATE_ROOM_RESULT,f,c,d);this.dispatchEvent(g)};a.user1.orbiter.RoomManager.prototype.fireRemoveRoomResult=function(d,f,c){var g=new a.user1.orbiter.RoomManagerEvent(a.user1.orbiter.RoomManagerEvent.REMOVE_ROOM_RESULT,f,c,d);this.dispatchEvent(g)};a.user1.orbiter.RoomManager.prototype.fireRoomAdded=function(d,f,c){var g=new a.user1.orbiter.RoomManagerEvent(a.user1.orbiter.RoomManagerEvent.ROOM_ADDED,f,null,d,c);this.dispatchEvent(g)};a.user1.orbiter.RoomManager.prototype.fireRoomRemoved=function(d,f,c){var g=new a.user1.orbiter.RoomManagerEvent(a.user1.orbiter.RoomManagerEvent.ROOM_REMOVED,f,null,d,c);this.dispatchEvent(g)};a.user1.orbiter.RoomManager.prototype.fireRoomCount=function(c){this.dispatchEvent(new a.user1.orbiter.RoomManagerEvent(a.user1.orbiter.RoomManagerEvent.ROOM_COUNT,null,null,null,null,c))};a.user1.orbiter.RoomManager.prototype.fireJoinRoomResult=function(d,c){this.dispatchEvent(new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.JOIN_RESULT,null,null,c,null,0,d))};a.user1.orbiter.RoomManager.prototype.fireLeaveRoomResult=function(d,c){this.dispatchEvent(new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.LEAVE_RESULT,null,null,c,null,0,d))};a.user1.orbiter.RoomManager.prototype.fireObserveRoomResult=function(d,c){this.dispatchEvent(new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.OBSERVE_RESULT,null,null,c,null,0,d))};a.user1.orbiter.RoomManager.prototype.fireStopObservingRoomResult=function(d,c){this.dispatchEvent(new a.user1.orbiter.RoomEvent(a.user1.orbiter.RoomEvent.STOP_OBSERVING_RESULT,null,null,c,null,0,d))};a.user1.orbiter.RoomManager.prototype.cleanup=function(){this.log.info("[ROOM_MANAGER] Cleaning resources.");this.removeAllRooms();this.watchedQualifiers=[]};a.user1.orbiter.RoomManager.prototype.dispose=function(){this.log.info("[ROOM_MANAGER] Disposing resources.");this.watchedQualifiers=null;var d;var e=this.getAllRooms();for(var c=this.getAllRooms().length;--c>=0;){d=e[c];d.dispose()}this.cachedRooms.removeEventListener(a.user1.orbiter.CollectionEvent.REMOVE_ITEM,this.removeRoomListener,this);this.occupiedRooms.removeEventListener(a.user1.orbiter.CollectionEvent.ADD_ITEM,this.addRoomListener,this);this.occupiedRooms.removeEventListener(a.user1.orbiter.CollectionEvent.REMOVE_ITEM,this.removeRoomListener,this);this.observedRooms.removeEventListener(a.user1.orbiter.CollectionEvent.ADD_ITEM,this.addRoomListener,this);this.observedRooms.removeEventListener(a.user1.orbiter.CollectionEvent.REMOVE_ITEM,this.removeRoomListener,this);this.watchedRooms.removeEventListener(a.user1.orbiter.CollectionEvent.ADD_ITEM,this.addRoomListener,this);this.watchedRooms.removeEventListener(a.user1.orbiter.CollectionEvent.REMOVE_ITEM,this.removeRoomListener,this);this.occupiedRooms=null;this.observedRooms=null;this.watchedRooms=null;this.cachedRooms=null;this.log=null;this.orbiter=null;this.roomClassRegistry=null};a.user1.orbiter.RoomManagerEvent=function(f,e,d,g,h,c){a.user1.events.Event.call(this,f);this.roomID=e;this.status=d;this.roomIdQualifier=g;this.room=h;this.numRooms=c};a.user1.utils.extend(a.user1.orbiter.RoomManagerEvent,a.user1.events.Event);a.user1.orbiter.RoomManagerEvent.CREATE_ROOM_RESULT="CREATE_ROOM_RESULT";a.user1.orbiter.RoomManagerEvent.REMOVE_ROOM_RESULT="REMOVE_ROOM_RESULT";a.user1.orbiter.RoomManagerEvent.WATCH_FOR_ROOMS_RESULT="WATCH_FOR_ROOMS_RESULT";a.user1.orbiter.RoomManagerEvent.STOP_WATCHING_FOR_ROOMS_RESULT="STOP_WATCHING_FOR_ROOMS_RESULT";a.user1.orbiter.RoomManagerEvent.ROOM_ADDED="ROOM_ADDED";a.user1.orbiter.RoomManagerEvent.ROOM_REMOVED="ROOM_REMOVED";a.user1.orbiter.RoomManagerEvent.ROOM_COUNT="ROOM_COUNT";a.user1.orbiter.RoomManagerEvent.prototype.getRoomIdQualifier=function(){if(this.roomIdQualifier==null&&this.room!=null){return this.room.getQualifier()}else{return this.roomIdQualifier}};a.user1.orbiter.RoomManagerEvent.prototype.getRoomID=function(){var d;var c;if(this.room!=null){return this.room.getRoomID()}else{if(this.roomID==null){return null}else{c=this.getRoomIdQualifier();d=c==""||c==null?this.roomID:c+"."+this.roomID;return d}}};a.user1.orbiter.RoomManagerEvent.prototype.getSimpleRoomID=function(){if(this.roomID==null&&this.room!=null){return this.room.getSimpleRoomID()}else{return this.roomID}};a.user1.orbiter.RoomManagerEvent.prototype.getRoom=function(){return this.room};a.user1.orbiter.RoomManagerEvent.prototype.getStatus=function(){return this.status};a.user1.orbiter.RoomManagerEvent.prototype.getNumRooms=function(){return this.numRooms};a.user1.orbiter.RoomManagerEvent.prototype.toString=function(){return"[object RoomManagerEvent]"};a.user1.orbiter.RoomManifest=function(){};a.user1.orbiter.RoomManifest.prototype.deserialize=function(e,d,g,c,f){this.roomID=e;this.attributes=null;this.occupantCount=c;this.observerCount=f;this.occupants=[];this.observers=[];this.deserializeAttributes(d);this.deserializeClientList(g)};a.user1.orbiter.RoomManifest.prototype.deserializeAttributes=function(c){var e=c.split(a.user1.orbiter.Tokens.RS);this.attributes=new a.user1.orbiter.AttributeCollection();for(var d=e.length-2;d>=0;d-=2){this.attributes.setAttribute(e[d],e[d+1],a.user1.orbiter.Tokens.GLOBAL_ATTR)}};a.user1.orbiter.RoomManifest.prototype.deserializeClientList=function(e){var c;for(var d=e.length-5;d>=0;d-=5){c=new a.user1.orbiter.ClientManifest();c.deserialize(e[d],e[d+1],null,null,e[d+3],[this.roomID,e[d+4]]);if(e[d+2]=="0"){this.occupants.push(c)}else{this.observers.push(c)}}};a.user1.orbiter.RoomModules=function(){this.modules=new Array()};a.user1.orbiter.RoomModules.prototype.addModule=function(c,d){this.modules.push([d,c])};a.user1.orbiter.RoomModules.prototype.serialize=function(){var e="";var c=this.modules.length;for(var d=0;d<c;d++){e+=this.modules[d][0]+a.user1.orbiter.Tokens.RS+this.modules[d][1];if(d<c-1){e+=a.user1.orbiter.Tokens.RS}}return e};a.user1.orbiter.RoomModules.prototype.getIdentifiers=function(){var e=new Array();var d;for(var c=0;c<this.modules.length;c++){d=this.modules[c];e.push(d[1])}return e};a.user1.orbiter.RoomSettings=function(){this.removeOnEmpty=null;this.maxClients=null;this.password=null};a.user1.orbiter.RoomSettings.prototype.serialize=function(){var c=a.user1.orbiter.Tokens.RS;var d=a.user1.orbiter.Tokens.REMOVE_ON_EMPTY_ATTR+c+(this.removeOnEmpty==null?"true":this.removeOnEmpty.toString())+c+a.user1.orbiter.Tokens.MAX_CLIENTS_ATTR+c+(this.maxClients==null?"-1":this.maxClients.toString())+c+a.user1.orbiter.Tokens.PASSWORD_ATTR+c+(this.password==null?"":this.password);return d};a.user1.orbiter.snapshot.RoomSnapshot=function(d,c,e){a.user1.orbiter.snapshot.Snapshot.call(this);this.manifest=null;this.method=a.user1.orbiter.UPC.GET_ROOM_SNAPSHOT;this.args=[d,c,e!=null?e.toInt():""];this.hasStatus=true};a.user1.utils.extend(a.user1.orbiter.snapshot.RoomSnapshot,a.user1.orbiter.snapshot.Snapshot);a.user1.orbiter.snapshot.RoomSnapshot.prototype.setManifest=function(c){this.manifest=c};a.user1.orbiter.snapshot.RoomSnapshot.prototype.getAttribute=function(c){if(!this.manifest){return null}return this.manifest.attributes.getAttribute(c,a.user1.orbiter.Tokens.GLOBAL_ATTR)};a.user1.orbiter.snapshot.RoomSnapshot.prototype.getAttributes=function(){if(!this.manifest){return null}return this.manifest.attributes.getByScope(a.user1.orbiter.Tokens.GLOBAL_ATTR)};a.user1.orbiter.snapshot.RoomSnapshot.prototype.getRoomID=function(){if(!this.manifest){return null}return this.manifest.roomID};a.user1.orbiter.snapshot.RoomSnapshot.prototype.getOccupants=function(){return this.manifest.occupants.slice()};a.user1.orbiter.snapshot.RoomSnapshot.prototype.getObservers=function(){return this.manifest.occupants.slice()};a.user1.orbiter.snapshot.RoomSnapshot.prototype.getOccupant=function(e){var c;for(var d=this.manifest.occupants.length;--d>=0;){if(this.manifest.occupants[d].clientID==e){return this.manifest.occupants[d]}}return null};a.user1.orbiter.snapshot.RoomSnapshot.prototype.getObserver=function(e){var c;for(var d=this.manifest.observers.length;--d>=0;){if(this.manifest.observers[d].clientID==e){return this.manifest.observers[d]}}return null};a.user1.orbiter.snapshot.RoomSnapshot.prototype.getNumOccupants=function(){return Math.max(this.manifest.occupants.length,this.manifest.occupantCount)};a.user1.orbiter.snapshot.RoomSnapshot.prototype.getNumObservers=function(){return Math.max(this.manifest.observers.length,this.manifest.observerCount)};a.user1.orbiter.SecurityRole=new Object();a.user1.orbiter.SecurityRole.MODERATOR="MODERATOR";a.user1.orbiter.Server=function(c){a.user1.events.EventDispatcher.call(this);this.orbiter=c;this.version=null;this.upcVersion=null;this.localAgeAtLastSync=NaN;this.lastKnownServerTime=NaN;this._isWatchingForProcessedUPCs=false;this.log=c.getLog();c.addEventListener(a.user1.orbiter.OrbiterEvent.READY,this.readyListener,this)};a.user1.utils.extend(a.user1.orbiter.Server,a.user1.events.EventDispatcher);a.user1.orbiter.Server.prototype.sendMessage=function(c,e,h){var g=Array.prototype.slice.call(arguments).slice(3);var d;if(c==null||c==""){this.log.warn("Server.sendMessage() failed. No messageName supplied.");return}var f=this.orbiter.getMessageManager();d=[a.user1.orbiter.UPC.SEND_MESSAGE_TO_SERVER,c,e.toString(),h!=null?h.toXMLString():""];f.sendUPC.apply(f,d.concat(g))};a.user1.orbiter.Server.prototype.sendModuleMessage=function(g,e,f){var d=[a.user1.orbiter.UPC.SEND_SERVERMODULE_MESSAGE,g,e];for(var c in f){d.push(c+a.user1.orbiter.Tokens.RS+f[c])}this.orbiter.getMessageManager().sendUPC.apply(this.orbiter.getMessageManager(),d)};a.user1.orbiter.Server.prototype.clearModuleCache=function(){this.orbiter.getMessageManager().sendUPC(a.user1.orbiter.UPC.CLEAR_MODULE_CACHE)};a.user1.orbiter.Server.prototype.setVersion=function(c){this.version=c};a.user1.orbiter.Server.prototype.getVersion=function(){return this.version};a.user1.orbiter.Server.prototype.setUPCVersion=function(c){this.upcVersion=c};a.user1.orbiter.Server.prototype.getUPCVersion=function(){return this.upcVersion};a.user1.orbiter.Server.prototype.resetUPCStats=function(){this.orbiter.getMessageManager().sendUPC(UPC.RESET_UPC_STATS)};a.user1.orbiter.Server.prototype.watchForProcessedUPCs=function(){this.orbiter.getMessageManager().sendUPC(a.user1.orbiter.UPC.WATCH_FOR_PROCESSED_UPCS)};a.user1.orbiter.Server.prototype.stopWatchingForProcessedUPCs=function(){this.orbiter.getMessageManager().sendUPC(a.user1.orbiter.UPC.STOP_WATCHING_FOR_PROCESSED_UPCS)};a.user1.orbiter.Server.prototype.isWatchingForProcessedUPCs=function(){return this._isWatchingForProcessedUPCs};a.user1.orbiter.Server.prototype.setIsWatchingForProcessedUPCs=function(c){this._isWatchingForProcessedUPCs=c};a.user1.orbiter.Server.prototype.getServerTime=function(){var c=this.orbiter.self();var d=NaN;var e=NaN;if(c!=null){d=isNaN(this.lastKnownServerTime)?c.getConnectTime():this.lastKnownServerTime;e=isNaN(d)?NaN:(d+(new Date().getTime()-this.localAgeAtLastSync))}if(e==0){log.warn("Server time requested, but is unknown.")}return e};a.user1.orbiter.Server.prototype.syncTime=function(){var c=this.orbiter.getMessageManager();c.sendUPC(a.user1.orbiter.UPC.SYNC_TIME)};a.user1.orbiter.Server.prototype.readyListener=function(c){this.orbiter.getMessageManager().addMessageListener(a.user1.orbiter.UPC.SERVER_TIME_UPDATE,this.u50);this.localAgeAtLastSync=new Date().getTime()};a.user1.orbiter.Server.prototype.fireTimeSync=function(){this.dispatchEvent(new a.user1.orbiter.ServerEvent(ServerEvent.TIME_SYNC))};a.user1.orbiter.Server.prototype.dispatchWatchForProcessedUPCsResult=function(c){this.dispatchEvent(new a.user1.orbiter.ServerEvent(a.user1.orbiter.ServerEvent.WATCH_FOR_PROCESSED_UPCS_RESULT,null,c))};a.user1.orbiter.Server.prototype.dispatchStopWatchingForProcessedUPCsResult=function(c){this.dispatchEvent(new a.user1.orbiter.ServerEvent(a.user1.orbiter.ServerEvent.STOP_WATCHING_FOR_PROCESSED_UPCS_RESULT,null,c))};a.user1.orbiter.Server.prototype.dispatchUPCProcessed=function(c){this.dispatchEvent(new a.user1.orbiter.ServerEvent(a.user1.orbiter.ServerEvent.UPC_PROCESSED,c))};a.user1.orbiter.Server.prototype.dispatchResetUPCStatsResult=function(c){this.dispatchEvent(new a.user1.orbiter.ServerEvent(a.user1.orbiter.ServerEvent.RESET_UPC_STATS_RESULT,null,c))};a.user1.orbiter.Server.prototype.u50=function(c){this.lastKnownServerTime=Number(c);this.localAgeAtLastSync=new Date().getTime();this.fireTimeSync()};a.user1.orbiter.Server.prototype.cleanup=function(){this.log.info("[SERVER] Cleaning resources.");this.setIsWatchingForProcessedUPCs(false)};a.user1.orbiter.snapshot.GatewaysSnapshot=function(){a.user1.orbiter.snapshot.Snapshot.call(this);this.gateways=null;this.method=a.user1.orbiter.UPC.GET_GATEWAYS_SNAPSHOT};a.user1.utils.extend(a.user1.orbiter.snapshot.GatewaysSnapshot,a.user1.orbiter.snapshot.Snapshot);a.user1.orbiter.snapshot.GatewaysSnapshot.prototype.setGateways=function(c){this.gateways=c};a.user1.orbiter.snapshot.GatewaysSnapshot.prototype.getGateways=function(){if(!this.gateways){return[]}return this.gateways.slice()};a.user1.orbiter.ServerEvent=function(d,e,c){a.user1.events.Event.call(this,d);this.upcProcessingRecord=e;this.status=c};a.user1.utils.extend(a.user1.orbiter.ServerEvent,a.user1.events.Event);a.user1.orbiter.ServerEvent.TIME_SYNC="TIME_SYNC";a.user1.orbiter.ServerEvent.UPC_PROCESSED="UPC_PROCESSED";a.user1.orbiter.ServerEvent.WATCH_FOR_PROCESSED_UPCS_RESULT="WATCH_FOR_PROCESSED_UPCS_RESULT";a.user1.orbiter.ServerEvent.STOP_WATCHING_FOR_PROCESSED_UPCS_RESULT="STOP_WATCHING_FOR_PROCESSED_UPCS_RESULT";a.user1.orbiter.ServerEvent.RESET_UPC_STATS_RESULT="RESET_UPC_STATS_RESULT";a.user1.orbiter.ServerEvent.prototype.getUPCProcessingRecord=function(){return upcProcessingRecord};a.user1.orbiter.ServerEvent.prototype.getStatus=function(){return status};a.user1.orbiter.ServerEvent.prototype.toString=function(){return"[object ServerEvent]"};a.user1.orbiter.snapshot.ServerModuleListSnapshot=function(){a.user1.orbiter.snapshot.Snapshot.call(this);this.moduleList=null;this.method=a.user1.orbiter.UPC.GET_SERVERMODULELIST_SNAPSHOT};a.user1.utils.extend(a.user1.orbiter.snapshot.ServerModuleListSnapshot,a.user1.orbiter.snapshot.Snapshot);a.user1.orbiter.snapshot.ServerModuleListSnapshot.prototype.setModuleList=function(c){this.moduleList=c};a.user1.orbiter.snapshot.ServerModuleListSnapshot.prototype.getModuleList=function(){if(!this.moduleList){return null}return this.moduleList.slice()};a.user1.orbiter.upc.SetAttr=function(d,e,c){if(!a.user1.orbiter.Validator.isValidAttributeName(d)){throw new Error("Cannot set attribute. Illegal name (see Validator.isValidAttributeName()).  Illegal attribute is: "+d+"="+e)}if(!a.user1.orbiter.Validator.isValidAttributeValue(e)){throw new Error("Cannot set attribute. Illegal value (see Validator.isValidAttributeValue()).  Illegal attribute is: "+d+"="+e)}if(e==null){e=""}this.name=d;this.value=e;this.options=c};a.user1.orbiter.upc.SetClientAttr=function(e,g,d,f,h,c){a.user1.orbiter.upc.SetAttr.call(this,e,g,d);if(!a.user1.orbiter.Validator.isValidAttributeScope(f)){throw new Error("Cannot set client attribute. Illegal scope (see Validator.isValidAttributeScope()).  Illegal attribute is: "+e+"="+g)}if(f==null){f=a.user1.orbiter.Tokens.GLOBAL_ATTR}this.method=a.user1.orbiter.UPC.SET_CLIENT_ATTR;this.args=[h,c,e,g,f,d.toString()]};a.user1.utils.extend(a.user1.orbiter.upc.SetClientAttr,a.user1.orbiter.upc.SetAttr);a.user1.orbiter.upc.SetRoomAttr=function(d,f,c,e){a.user1.orbiter.upc.SetAttr.call(this,d,f,c);this.method=a.user1.orbiter.UPC.SET_ROOM_ATTR;this.args=[e,d,f,c.toString()]};a.user1.utils.extend(a.user1.orbiter.upc.SetRoomAttr,a.user1.orbiter.upc.SetAttr);a.user1.orbiter.Statistics=function(c){this.statsTimer;this.lastTick=NaN;this.lastTotalMessages=0;this.messagesPerSecond=0;this.peakMessagesPerSecond=0;this.orbiter=null;this.connection=null;this.statsIntervalID=-1;this.init(c)};a.user1.orbiter.Statistics.prototype.init=function(c){this.setOrbiter(c);this.start()};a.user1.orbiter.Statistics.prototype.setOrbiter=function(c){this.orbiter=c};a.user1.orbiter.Statistics.prototype.start=function(){this.stop();this.statsIntervalID=setInterval(statsTimerListener,1000);this.lastTick=new Date().getTime();this.lastTotalMessages=this.getTotalMessages()};a.user1.orbiter.Statistics.prototype.stop=function(){clearInterval(statsIntervalID);this.clearStats()};a.user1.orbiter.Statistics.prototype.clearStats=function(){this.lastTick=0;this.lastTotalMessages=0;this.messagesPerSecond=0;this.peakMessagesPerSecond=0};a.user1.orbiter.Statistics.prototype.getLifetimeNumClientsConnected=function(){return this.orbiter.getClientManager().getLifetimeNumClientsKnown()};a.user1.orbiter.Statistics.prototype.getCurrentNumClientsConnected=function(){return this.orbiter.getClientManager().getNumClients()};a.user1.orbiter.Statistics.prototype.getTotalMessagesReceived=function(){return this.orbiter.getMessageManager().getNumMessagesReceived()};a.user1.orbiter.Statistics.prototype.getTotalMessagesSent=function(){return this.orbiter.getMessageManager().getNumMessagesSent()};a.user1.orbiter.Statistics.prototype.getTotalMessages=function(){return this.getTotalMessagesReceived()+this.getTotalMessagesSent()};a.user1.orbiter.Statistics.prototype.getMessagesPerSecond=function(){return this.messagesPerSecond};a.user1.orbiter.Statistics.prototype.getPeakMessagesPerSecond=function(){return this.peakMessagesPerSecond};a.user1.orbiter.Statistics.prototype.statsTimerListener=function(h){var d=new Date().getTime();var c=d-lastTick;lastTick=d;var g=this.getTotalMessages();var f=g-this.lastTotalMessages;this.lastTotalMessages=g;this.messagesPerSecond=Math.round((1000/c)*f);if(this.messagesPerSecond>this.peakMessagesPerSecond){this.peakMessagesPerSecond=this.messagesPerSecond}};a.user1.orbiter.Status=new Object();a.user1.orbiter.Status.ACCOUNT_EXISTS="ACCOUNT_EXISTS";a.user1.orbiter.Status.ACCOUNT_NOT_FOUND="ACCOUNT_NOT_FOUND";a.user1.orbiter.Status.AUTHORIZATION_REQUIRED="AUTHORIZATION_REQUIRED";a.user1.orbiter.Status.AUTHORIZATION_FAILED="AUTHORIZATION_FAILED";a.user1.orbiter.Status.ALREADY_ASSIGNED="ALREADY_ASSIGNED";a.user1.orbiter.Status.ALREADY_BANNED="ALREADY_BANNED";a.user1.orbiter.Status.ALREADY_IN_ROOM="ALREADY_IN_ROOM";a.user1.orbiter.Status.ALREADY_LOGGED_IN="ALREADY_LOGGED_IN";a.user1.orbiter.Status.ALREADY_OBSERVING="ALREADY_OBSERVING";a.user1.orbiter.Status.ALREADY_SYNCHRONIZED="ALREADY_SYNCHRONIZED";a.user1.orbiter.Status.ALREADY_WATCHING="ALREADY_WATCHING";a.user1.orbiter.Status.ATTR_NOT_FOUND="ATTR_NOT_FOUND";a.user1.orbiter.Status.CLIENT_NOT_FOUND="CLIENT_NOT_FOUND";a.user1.orbiter.Status.ERROR="ERROR";a.user1.orbiter.Status.EVALUATION_FAILED="EVALUATION_FAILED";a.user1.orbiter.Status.DUPLICATE_VALUE="DUPLICATE_VALUE";a.user1.orbiter.Status.IMMUTABLE="IMMUTABLE";a.user1.orbiter.Status.INVALID_QUALIFIER="INVALID_QUALIFIER";a.user1.orbiter.Status.NAME_NOT_FOUND="NAME_NOT_FOUND";a.user1.orbiter.Status.NAME_EXISTS="NAME_EXISTS";a.user1.orbiter.Status.NOT_ASSIGNED="NOT_ASSIGNED";a.user1.orbiter.Status.NOT_BANNED="NOT_BANNED";a.user1.orbiter.Status.NOT_IN_ROOM="NOT_IN_ROOM";a.user1.orbiter.Status.NOT_LOGGED_IN="NOT_LOGGED_IN";a.user1.orbiter.Status.NOT_OBSERVING="NOT_OBSERVING";a.user1.orbiter.Status.NOT_WATCHING="NOT_WATCHING";a.user1.orbiter.Status.PERMISSION_DENIED="PERMISSION_DENIED";a.user1.orbiter.Status.REMOVED="REMOVED";a.user1.orbiter.Status.ROLE_NOT_FOUND="ROLE_NOT_FOUND";a.user1.orbiter.Status.ROOM_EXISTS="ROOM_EXISTS";a.user1.orbiter.Status.ROOM_FULL="ROOM_FULL";a.user1.orbiter.Status.ROOM_NOT_FOUND="ROOM_NOT_FOUND";a.user1.orbiter.Status.SERVER_ONLY="SERVER_ONLY";a.user1.orbiter.Status.SUCCESS="SUCCESS";a.user1.orbiter.SynchronizationState=new Object();a.user1.orbiter.SynchronizationState.SYNCHRONIZED="SYNCHRONIZED";a.user1.orbiter.SynchronizationState.NOT_SYNCHRONIZED="NOT_SYNCHRONIZED";a.user1.orbiter.SynchronizationState.SYNCHRONIZING="SYNCHRONIZING";a.user1.orbiter.UPCProcessingRecord=function(){this.fromClientID=null;this.fromUserID=null;this.fromClientAddress=null;this.processingStartedAt=NaN;this.processingFinishedAt=NaN;this.processingDuration=NaN;this.queuedAt=NaN;this.queueDuration=NaN;this.UPCSource=null};a.user1.orbiter.UPCProcessingRecord.prototype.deserialize=function(c){var g=[];var j=6;var f=[];var e=0;var h=-1;for(var d=0;d<j;d++){e=c.indexOf(a.user1.orbiter.Tokens.RS,h+1);g.push(c.substring(h+1,e));h=e}g.push(c.substring(e+1));this.deserializeParts(g[0],g[1],g[2],g[3],g[4],g[5],g[6])};a.user1.orbiter.UPCProcessingRecord.prototype.deserializeParts=function(e,g,j,i,k,f,c){this.fromClientID=e;this.fromUserID=g;this.fromClientAddress=j;this.processingStartedAt=parseFloat(k);this.processingFinishedAt=parseFloat(f);this.processingDuration=this.processingFinishedAt-this.processingStartedAt;this.queuedAt=parseFloat(i);this.queueDuration=this.processingStartedAt-this.queuedAt;this.UPCSource=c;var h=/<!\(\[CDATA\[/gi;var d=/\]\]\)>/gi;this.UPCSource=this.UPCSource.replace(h,"<![CDATA[");this.UPCSource=this.UPCSource.replace(d,"]]>")};a.user1.orbiter.snapshot.UPCStatsSnapshot=function(){a.user1.orbiter.snapshot.Snapshot.call(this);this.totalUPCsProcessed;this.numUPCsInQueue;this.lastQueueWaitTime;this.longestUPCProcesses;this.method=a.user1.orbiter.UPC.GET_UPC_STATS_SNAPSHOT;this.hasStatus=true};a.user1.utils.extend(a.user1.orbiter.snapshot.UPCStatsSnapshot,a.user1.orbiter.snapshot.Snapshot);a.user1.orbiter.snapshot.UPCStatsSnapshot.prototype.setTotalUPCsProcessed=function(c){this.totalUPCsProcessed=c};a.user1.orbiter.snapshot.UPCStatsSnapshot.prototype.getTotalUPCsProcessed=function(){return this.totalUPCsProcessed};a.user1.orbiter.snapshot.UPCStatsSnapshot.prototype.setNumUPCsInQueue=function(c){this.numUPCsInQueue=c};a.user1.orbiter.snapshot.UPCStatsSnapshot.prototype.getNumUPCsInQueue=function(){return this.numUPCsInQueue};a.user1.orbiter.snapshot.UPCStatsSnapshot.prototype.setLastQueueWaitTime=function(c){this.lastQueueWaitTime=c};a.user1.orbiter.snapshot.UPCStatsSnapshot.prototype.getLastQueueWaitTime=function(){return this.lastQueueWaitTime};a.user1.orbiter.snapshot.UPCStatsSnapshot.prototype.setLongestUPCProcesses=function(c){this.longestUPCProcesses=c};a.user1.orbiter.snapshot.UPCStatsSnapshot.prototype.getLongestUPCProcesses=function(){if(!this.longestUPCProcesses){return null}return this.longestUPCProcesses.slice()};a.user1.orbiter.UpdateLevels=function(){this.restoreDefaults()};a.user1.orbiter.UpdateLevels.FLAG_ROOM_MESSAGES=1;a.user1.orbiter.UpdateLevels.FLAG_SHARED_ROOM_ATTRIBUTES=1<<1;a.user1.orbiter.UpdateLevels.FLAG_OCCUPANT_COUNT=1<<2;a.user1.orbiter.UpdateLevels.FLAG_OBSERVER_COUNT=1<<3;a.user1.orbiter.UpdateLevels.FLAG_OCCUPANT_LIST=1<<4;a.user1.orbiter.UpdateLevels.FLAG_OBSERVER_LIST=1<<5;a.user1.orbiter.UpdateLevels.FLAG_SHARED_OCCUPANT_ATTRIBUTES_ROOM=1<<6;a.user1.orbiter.UpdateLevels.FLAG_SHARED_OBSERVER_ATTRIBUTES_ROOM=1<<7;a.user1.orbiter.UpdateLevels.FLAG_SHARED_OCCUPANT_ATTRIBUTES_GLOBAL=1<<8;a.user1.orbiter.UpdateLevels.FLAG_SHARED_OBSERVER_ATTRIBUTES_GLOBAL=1<<9;a.user1.orbiter.UpdateLevels.FLAG_OCCUPANT_LOGIN_LOGOFF=1<<10;a.user1.orbiter.UpdateLevels.FLAG_OBSERVER_LOGIN_LOGOFF=1<<11;a.user1.orbiter.UpdateLevels.FLAG_ALL_ROOM_ATTRIBUTES=1<<12;a.user1.orbiter.UpdateLevels.prototype.clearAll=function(){this.roomMessages=false;this.sharedRoomAttributes=false;this.occupantCount=false;this.observerCount=false;this.occupantList=false;this.observerList=false;this.sharedOccupantAttributesRoom=false;this.sharedOccupantAttributesGlobal=false;this.sharedObserverAttributesRoom=false;this.sharedObserverAttributesGlobal=false;this.occupantLoginLogoff=false;this.observerLoginLogoff=false;this.allRoomAttributes=false};a.user1.orbiter.UpdateLevels.prototype.restoreDefaults=function(){this.roomMessages=true;this.sharedRoomAttributes=true;this.occupantCount=false;this.observerCount=false;this.occupantList=true;this.observerList=false;this.sharedOccupantAttributesRoom=true;this.sharedOccupantAttributesGlobal=true;this.sharedObserverAttributesRoom=false;this.sharedObserverAttributesGlobal=false;this.occupantLoginLogoff=true;this.observerLoginLogoff=false;this.allRoomAttributes=false};a.user1.orbiter.UpdateLevels.prototype.toInt=function(){var c=(this.roomMessages?a.user1.orbiter.UpdateLevels.FLAG_ROOM_MESSAGES:0)|(this.sharedRoomAttributes?a.user1.orbiter.UpdateLevels.FLAG_SHARED_ROOM_ATTRIBUTES:0)|(this.occupantCount?a.user1.orbiter.UpdateLevels.FLAG_OCCUPANT_COUNT:0)|(this.observerCount?a.user1.orbiter.UpdateLevels.FLAG_OBSERVER_COUNT:0)|(this.occupantList?a.user1.orbiter.UpdateLevels.FLAG_OCCUPANT_LIST:0)|(this.observerList?a.user1.orbiter.UpdateLevels.FLAG_OBSERVER_LIST:0)|(this.sharedOccupantAttributesRoom?a.user1.orbiter.UpdateLevels.FLAG_SHARED_OCCUPANT_ATTRIBUTES_ROOM:0)|(this.sharedOccupantAttributesGlobal?a.user1.orbiter.UpdateLevels.FLAG_SHARED_OCCUPANT_ATTRIBUTES_GLOBAL:0)|(this.sharedObserverAttributesRoom?a.user1.orbiter.UpdateLevels.FLAG_SHARED_OBSERVER_ATTRIBUTES_ROOM:0)|(this.sharedObserverAttributesGlobal?a.user1.orbiter.UpdateLevels.FLAG_SHARED_OBSERVER_ATTRIBUTES_GLOBAL:0)|(this.occupantLoginLogoff?a.user1.orbiter.UpdateLevels.FLAG_OCCUPANT_LOGIN_LOGOFF:0)|(this.observerLoginLogoff?a.user1.orbiter.UpdateLevels.FLAG_OBSERVER_LOGIN_LOGOFF:0)|(this.allRoomAttributes?a.user1.orbiter.UpdateLevels.FLAG_ALL_ROOM_ATTRIBUTES:0);return c};a.user1.orbiter.UpdateLevels.prototype.fromInt=function(c){roomMessages=c&a.user1.orbiter.UpdateLevels.FLAG_ROOM_MESSAGES;sharedRoomAttributes=c&a.user1.orbiter.UpdateLevels.FLAG_SHARED_ROOM_ATTRIBUTES;occupantCount=c&a.user1.orbiter.UpdateLevels.FLAG_OCCUPANT_COUNT;observerCount=c&a.user1.orbiter.UpdateLevels.FLAG_OBSERVER_COUNT;occupantList=c&a.user1.orbiter.UpdateLevels.FLAG_OCCUPANT_LIST;observerList=c&a.user1.orbiter.UpdateLevels.FLAG_OBSERVER_LIST;sharedOccupantAttributesRoom=c&a.user1.orbiter.UpdateLevels.FLAG_SHARED_OCCUPANT_ATTRIBUTES_ROOM;sharedOccupantAttributesGlobal=c&a.user1.orbiter.UpdateLevels.FLAG_SHARED_OCCUPANT_ATTRIBUTES_GLOBAL;sharedObserverAttributesRoom=c&a.user1.orbiter.UpdateLevels.FLAG_SHARED_OBSERVER_ATTRIBUTES_ROOM;sharedObserverAttributesGlobal=c&a.user1.orbiter.UpdateLevels.FLAG_SHARED_OBSERVER_ATTRIBUTES_GLOBAL;occupantLoginLogoff=c&a.user1.orbiter.UpdateLevels.FLAG_OCCUPANT_LOGIN_LOGOFF;observerLoginLogoff=c&a.user1.orbiter.UpdateLevels.FLAG_OBSERVER_LOGIN_LOGOFF;allRoomAttributes=c&a.user1.orbiter.UpdateLevels.FLAG_ALL_ROOM_ATTRIBUTES};a.user1.orbiter.UserAccount=function(e,f,c,g,d){a.user1.events.EventDispatcher.call(this);this.userID=e;this.attributeManager=null;this.connectionState=0;this.password=null;this.lastAttemptedPassword=null;this._client=null;this._accountManager=null;this._clientManager=null;this._roomManager=null;this._log=null;this.setLog(f);this.setAccountManager(c);this.setClientManager(g);this.setRoomManager(d)};a.user1.utils.extend(a.user1.orbiter.UserAccount,a.user1.events.EventDispatcher);a.user1.orbiter.UserAccount.FLAG_MODERATOR=1<<1;a.user1.orbiter.UserAccount.prototype.getAttributeCollection=function(){return this.attributeManager.getAttributeCollection()};a.user1.orbiter.UserAccount.prototype.setAttributeManager=function(c){this.attributeManager=c};a.user1.orbiter.UserAccount.prototype.getAttributeManager=function(){return this.attributeManager};a.user1.orbiter.UserAccount.prototype.getClientManager=function(){return this._clientManager};a.user1.orbiter.UserAccount.prototype.setClientManager=function(c){this._clientManager=c};a.user1.orbiter.UserAccount.prototype.getRoomManager=function(){return this._roomManager};a.user1.orbiter.UserAccount.prototype.setRoomManager=function(c){this._roomManager=c};a.user1.orbiter.UserAccount.prototype.getLog=function(){return this._log};a.user1.orbiter.UserAccount.prototype.setLog=function(c){this._log=c};a.user1.orbiter.UserAccount.prototype.getAccountManager=function(){return this._accountManager};a.user1.orbiter.UserAccount.prototype.setAccountManager=function(c){this._accountManager=c};a.user1.orbiter.UserAccount.prototype.getClient=function(){var c;this.validateClientReference();if(this._client!=null){c=this._client.getCustomClient(null);return c==null?this._client:c}else{return null}};a.user1.orbiter.UserAccount.prototype.getInternalClient=function(){this.validateClientReference();return this._client};a.user1.orbiter.UserAccount.prototype.setClient=function(c){if(c==null){this._client=null}else{if(this._client!=c){this._client=c;this._client.setAccount(this)}}};a.user1.orbiter.UserAccount.prototype.validateClientReference=function(){if(this._client!=null){if(!this._client.isSelf()&&!this._clientManager.isWatchingForClients()&&!this._accountManager.isObservingAccount(this.getUserID())&&!this._clientManager.isObservingClient(this._client.getClientID())&&!this._roomManager.clientIsKnown(this._client.getClientID())){this.setClient(null)}}};a.user1.orbiter.UserAccount.prototype.isSelf=function(){return this._client==null?false:this._client.isSelf()};a.user1.orbiter.UserAccount.prototype.getConnectionState=function(){if(this.getInternalClient()!=null){return a.user1.orbiter.ConnectionState.LOGGED_IN}else{if(!this._accountManager.isObservingAccount(this.getUserID())){return a.user1.orbiter.ConnectionState.NOT_CONNECTED}else{if(this._clientManager.isWatchingForClients()){return a.user1.orbiter.ConnectionState.NOT_CONNECTED}else{return a.user1.orbiter.ConnectionState.UNKNOWN}}}};a.user1.orbiter.UserAccount.prototype.isLoggedIn=function(){return this.getConnectionState()==a.user1.orbiter.ConnectionState.LOGGED_IN};a.user1.orbiter.UserAccount.prototype.getUserID=function(){return this.userID};a.user1.orbiter.UserAccount.prototype.setUserID=function(c){if(this.userID!=c){this.userID=c}};a.user1.orbiter.UserAccount.prototype.logoff=function(c){this._accountManager.logoff(this.getUserID(),c)};a.user1.orbiter.UserAccount.prototype.changePassword=function(d,c){this._accountManager.changePassword(this.getUserID(),d,c)};a.user1.orbiter.UserAccount.prototype.addRole=function(c){this._accountManager.addRole(this.getUserID(),c)};a.user1.orbiter.UserAccount.prototype.removeRole=function(c,d){this._accountManager.removeRole(this.getUserID(),d)};a.user1.orbiter.UserAccount.prototype.isModerator=function(){var c=this.getAttribute(a.user1.orbiter.Tokens.ROLES_ATTR);var d;if(c!=null){return(parseInt(c)&UserAccount.FLAG_MODERATOR)>0}else{this.getLog().warn(this.toString()+" Could not determine moderator status because the account is not synchronized.");return false}};a.user1.orbiter.UserAccount.prototype.doLoginTasks=function(){this.fireLogin()};a.user1.orbiter.UserAccount.prototype.doLogoffTasks=function(){this.setClient(null);this.fireLogoff()};a.user1.orbiter.UserAccount.prototype.observe=function(){this._accountManager.observeAccount(this.getUserID())};a.user1.orbiter.UserAccount.prototype.stopObserving=function(){this._accountManager.stopObservingAccount(this.getUserID())};a.user1.orbiter.UserAccount.prototype.setAttribute=function(c,f,e,d,g){var h=a.user1.orbiter.AttributeOptions.FLAG_PERSISTENT|(d?a.user1.orbiter.AttributeOptions.FLAG_SHARED:0)|(g?a.user1.orbiter.AttributeOptions.FLAG_EVALUATE:0);this.attributeManager.setAttribute(new a.user1.orbiter.upc.SetClientAttr(c,f,h,e,null,this.getUserID()))};a.user1.orbiter.UserAccount.prototype.deleteAttribute=function(c,d){var e=new a.user1.orbiter.upc.RemoveClientAttr(null,this.getUserID(),c,d);this.attributeManager.deleteAttribute(e)};a.user1.orbiter.UserAccount.prototype.getAttribute=function(c,d){return this.attributeManager.getAttribute(c,d)};a.user1.orbiter.UserAccount.prototype.getAttributes=function(){return this.attributeManager.getAttributes()};a.user1.orbiter.UserAccount.prototype.getAttributesByScope=function(c){return this.attributeManager.getAttributesByScope(c)};a.user1.orbiter.UserAccount.prototype.toString=function(){return"[USER_ACCOUNT userid: "+this.getUserID()+", clientid: "+(this._client==null?"":this._client.getClientID())+"]"};a.user1.orbiter.UserAccount.prototype.fireLogin=function(){var c=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.LOGIN,a.user1.orbiter.Status.SUCCESS,this.getUserID(),(this._client==null?null:this._client.getClientID()));this.dispatchEvent(c)};a.user1.orbiter.UserAccount.prototype.fireLogoffResult=function(c){var d=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.LOGOFF_RESULT,c,this.getUserID(),(this._client==null?null:this._client.getClientID()));this.dispatchEvent(d)};a.user1.orbiter.UserAccount.prototype.fireLogoff=function(){var c=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.LOGOFF,a.user1.orbiter.Status.SUCCESS,this.getUserID(),(this._client==null?null:this._client.getClientID()));this.dispatchEvent(c)};a.user1.orbiter.UserAccount.prototype.fireChangePasswordResult=function(c){var d=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.CHANGE_PASSWORD_RESULT,c,this.getUserID(),(this._client==null?null:this._client.getClientID()));this.dispatchEvent(d)};a.user1.orbiter.UserAccount.prototype.fireChangePassword=function(){var c=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.CHANGE_PASSWORD,a.user1.orbiter.Status.SUCCESS,this.getUserID(),(this._client==null?null:this._client.getClientID()));this.dispatchEvent(c)};a.user1.orbiter.UserAccount.prototype.fireSynchronize=function(){var c=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.SYNCHRONIZE,a.user1.orbiter.Status.SUCCESS,this.getUserID(),(this._client==null?null:this._client.getClientID()));this.dispatchEvent(c)};a.user1.orbiter.UserAccount.prototype.fireObserve=function(){var c=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.OBSERVE,a.user1.orbiter.Status.SUCCESS,this.getUserID(),(this._client==null?null:this._client.getClientID()));this.dispatchEvent(c)};a.user1.orbiter.UserAccount.prototype.fireObserveResult=function(c){var d=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.OBSERVE_RESULT,c,this.getUserID(),(this._client==null?null:this._client.getClientID()));this.dispatchEvent(d)};a.user1.orbiter.UserAccount.prototype.fireStopObserving=function(){var c=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.STOP_OBSERVING,a.user1.orbiter.Status.SUCCESS,this.getUserID(),(this._client==null?null:this._client.getClientID()));this.dispatchEvent(c)};a.user1.orbiter.UserAccount.prototype.fireStopObservingResult=function(c){var d=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.STOP_OBSERVING_RESULT,c,this.getUserID(),(this._client==null?null:this._client.getClientID()));this.dispatchEvent(d)};a.user1.orbiter.UserAccount.prototype.fireAddRoleResult=function(f,c){var d=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.ADD_ROLE_RESULT,c,this.getUserID(),(this._client==null?null:this._client.getClientID()),f);this.dispatchEvent(d)};a.user1.orbiter.UserAccount.prototype.fireRemoveRoleResult=function(f,c){var d=new a.user1.orbiter.AccountEvent(a.user1.orbiter.AccountEvent.REMOVE_ROLE_RESULT,c,this.getUserID(),(this._client==null?null:this._client.getClientID()),f);this.dispatchEvent(d)};a.user1.orbiter.Validator=new Object();a.user1.orbiter.Validator.isValidRoomID=function(c){if(c==null||c==""){return false}if(c.indexOf(".")!=-1){return false}if(c.indexOf(a.user1.orbiter.Tokens.RS)!=-1){return false}if(c.indexOf(a.user1.orbiter.Tokens.WILDCARD)!=-1){return false}return true};a.user1.orbiter.Validator.isValidRoomQualifier=function(c){if(c==null||c==""){return false}if(c=="*"){return true}if(c.indexOf(a.user1.orbiter.Tokens.RS)!=-1){return false}if(c.indexOf(a.user1.orbiter.Tokens.WILDCARD)!=-1){return false}return true};a.user1.orbiter.Validator.isValidResolvedRoomID=function(c){if(c==null||c==""){return false}if(c.indexOf(a.user1.orbiter.Tokens.RS)!=-1){return false}if(c.indexOf(a.user1.orbiter.Tokens.WILDCARD)!=-1){return false}return true};a.user1.orbiter.Validator.isValidAttributeName=function(c){if(c==""||c==null){return false}if(c.indexOf(a.user1.orbiter.Tokens.RS)!=-1){return false}return true};a.user1.orbiter.Validator.isValidAttributeValue=function(c){if(typeof c!="string"){c=c.toString()}if(c.indexOf(a.user1.orbiter.Tokens.RS)==-1){return true}else{return false}};a.user1.orbiter.Validator.isValidAttributeScope=function(c){if(c!=null){return this.isValidResolvedRoomID(c)}else{return true}};a.user1.orbiter.Validator.isValidModuleName=function(c){if(c==""){return false}if(c.indexOf(a.user1.orbiter.Tokens.RS)!=-1){return false}return true};a.user1.orbiter.Validator.isValidPassword=function(c){if(c!=null&&c.indexOf(a.user1.orbiter.Tokens.RS)!=-1){return false}return true};a.user1.orbiter.Orbiter=function(c,d){a.user1.events.EventDispatcher.call(this);this.window=typeof window=="undefined"?null:window;d=d==null?true:d;this.useSecureConnect=false;this.statistics=null;this.sessionID=null;this.system=new a.user1.orbiter.System(this.window);this.log=new a.user1.logger.Logger();if(typeof navigator!="undefined"){this.log.info("User Agent: "+navigator.userAgent+" "+navigator.platform)}this.log.info("Union Client Version: "+this.system.getClientType()+" "+this.system.getClientVersion().toStringVerbose());this.log.info("Client UPC Protocol Version: "+this.system.getUPCVersion().toString());this.consoleLogger=null;this.connectionMan=new a.user1.orbiter.ConnectionManager(this);this.roomMan=new a.user1.orbiter.RoomManager(this);this.messageMan=new a.user1.orbiter.MessageManager(this.log,this.connectionMan);this.server=new a.user1.orbiter.Server(this);this.accountMan=new a.user1.orbiter.AccountManager(this.log);this.clientMan=new a.user1.orbiter.ClientManager(this.roomMan,this.accountMan,this.connectionMan,this.messageMan,this.server,this.log);this.accountMan.setClientManager(this.clientMan);this.accountMan.setMessageManager(this.messageMan);this.accountMan.setRoomManager(this.roomMan);this.snapshotMan=new a.user1.orbiter.SnapshotManager(this.messageMan);this.coreMsgListener=new a.user1.orbiter.CoreMessageListener(this);this.coreEventLogger=new a.user1.orbiter.CoreEventLogger(this.log,this.connectionMan,this.roomMan,this.accountMan,this.server,this.clientMan,this);this.connectionMan.addEventListener(a.user1.orbiter.ConnectionManagerEvent.READY,this.readyListener,this);this.connectionMan.addEventListener(a.user1.orbiter.ConnectionManagerEvent.CONNECT_FAILURE,this.connectFailureListener,this);this.connectionMan.addEventListener(a.user1.orbiter.ConnectionManagerEvent.DISCONNECT,this.disconnectListener,this);this.connectionMonitor=new a.user1.orbiter.ConnectionMonitor(this);this.connectionMonitor.restoreDefaults();this.connectionMan.addEventListener(a.user1.orbiter.ConnectionManagerEvent.SELECT_CONNECTION,this.selectConnectionListener,this);this.httpFailoverEnabled=true;if(d){this.enableConsole()}if(c==null||c==""){this.log.info("[ORBITER] Initialization complete.")}else{this.loadConfig(c)}};a.user1.utils.extend(a.user1.orbiter.Orbiter,a.user1.events.EventDispatcher);a.user1.orbiter.Orbiter.prototype.loadConfig=function(d){this.log.info("[ORBITER] Loading config from "+d+".");var e=new XMLHttpRequest();var c=this;e.onerror=function(){c.configErrorListener()};e.onreadystatechange=function(f){if(e.readyState==4){c.configLoadCompleteListener(e)}};e.open("GET",d);e.setRequestHeader("Content-Type","application/x-www-form-urlencoded;charset=UTF-8");e.send(null)};a.user1.orbiter.Orbiter.prototype.getTextForNode=function(c,f){var d=c.getElementsByTagName(f);var e;if(d.length>0){e=d[0]}if(e!=null&&e.firstChild.nodeType==3&&e.firstChild.nodeValue.length>0){return e.firstChild.nodeValue}else{return null}};a.user1.orbiter.Orbiter.prototype.configLoadCompleteListener=function(h){var f=h.responseXML;if((h.status!=200&&h.status!=0)||f==null){this.log.error("[ORBITER] Configuration file failed to load.");return}this.log.error("[ORBITER] Configuration file loaded.");try{var k=this.getTextForNode(f,"logLevel");if(k!=null){this.log.setLevel(k)}var n=this.getTextForNode(f,"autoReconnectFrequency");if(n!=null){this.connectionMonitor.setAutoReconnectFrequency(parseInt(n))}var j=this.getTextForNode(f,"connectionTimeout");if(j!=null){this.connectionMonitor.setConnectionTimeout(parseInt(j))}var q=this.getTextForNode(f,"heartbeatFrequency");if(q!=null){this.connectionMonitor.setHeartbeatFrequency(parseInt(q))}var m=this.getTextForNode(f,"readyTimeout");if(m!=null){this.connectionMan.setReadyTimeout(parseInt(m))}var s=f.getElementsByTagName("connection");if(s.length==0){this.log.error("[ORBITER] No connections specified in Orbiter configuration file.");return}var d;var r;var e;var p;var c;var g;for(var l=0;l<s.length;l++){d=s[l];r=d.getAttribute("host");e=d.getAttribute("port");p=d.getAttribute("type");if(p!=null){p=p.toUpperCase()}c=d.getAttribute("secure");g=d.getAttribute("senddelay");switch(p){case null:if(c==="true"){this.buildConnection(r,e,a.user1.orbiter.ConnectionType.SECURE_WEBSOCKET,-1);this.buildConnection(r,e,a.user1.orbiter.ConnectionType.SECURE_HTTP,g)}else{this.buildConnection(r,e,a.user1.orbiter.ConnectionType.WEBSOCKET,-1);this.buildConnection(r,e,a.user1.orbiter.ConnectionType.HTTP,g)}break;case a.user1.orbiter.ConnectionType.WEBSOCKET:if(c==="true"){this.buildConnection(r,e,a.user1.orbiter.ConnectionType.SECURE_WEBSOCKET,-1)}else{this.buildConnection(r,e,a.user1.orbiter.ConnectionType.WEBSOCKET,-1)}break;case a.user1.orbiter.ConnectionType.HTTP:if(c==="true"){this.buildConnection(r,e,a.user1.orbiter.ConnectionType.SECURE_HTTP,g)}else{this.buildConnection(r,e,a.user1.orbiter.ConnectionType.HTTP,g)}break;default:this.log.error("[ORBITER] Unrecognized connection type in Orbiter configuration file: ["+p+"]. Connection ignored.")}}}catch(o){this.log.error("[ORBITER] Error parsing connection in Orbiter configuration file: \n"+h.responseText+"\n"+o.toString())}this.connect()};a.user1.orbiter.Orbiter.prototype.buildConnection=function(g,d,f,h){var c;switch(f){case a.user1.orbiter.ConnectionType.HTTP:if(this.system.hasHTTPDirectConnection()){c=new a.user1.orbiter.HTTPDirectConnection()}else{c=new a.user1.orbiter.HTTPIFrameConnection()}break;case a.user1.orbiter.ConnectionType.SECURE_HTTP:if(this.system.hasHTTPDirectConnection()){c=new a.user1.orbiter.SecureHTTPDirectConnection()}else{c=new a.user1.orbiter.SecureHTTPIFrameConnection()}break;case a.user1.orbiter.ConnectionType.WEBSOCKET:c=new a.user1.orbiter.WebSocketConnection();break;case a.user1.orbiter.ConnectionType.SECURE_WEBSOCKET:c=new a.user1.orbiter.SecureWebSocketConnection();break;default:throw new Error("[ORBITER] Error at buildConnection(). Invalid type specified: ["+f+"]")}try{c.setServer(g,d)}catch(i){this.log.error("[CONNECTION] "+c.toString()+" "+i)}finally{this.connectionMan.addConnection(c);if(c instanceof a.user1.orbiter.HTTPConnection){if(h!=null&&h!=""){c.setSendDelay(h)}}}};a.user1.orbiter.Orbiter.prototype.configErrorListener=function(c){this.log.fatal("[ORBITER] Configuration file could not be loaded.")};a.user1.orbiter.Orbiter.prototype.connect=function(c){this.useSecureConnect=false;this.doConnect.apply(this,arguments)};a.user1.orbiter.Orbiter.prototype.secureConnect=function(c){this.useSecureConnect=true;this.doConnect.apply(this,arguments)};a.user1.orbiter.Orbiter.prototype.doConnect=function(c){var d=Array.prototype.slice.call(arguments).slice(1);if(c!=null){this.setServer.apply(this,[c].concat(d))}this.log.info("[ORBITER] Connecting to Union...");this.connectionMan.connect()};a.user1.orbiter.Orbiter.prototype.disconnect=function(){this.connectionMan.disconnect()};a.user1.orbiter.Orbiter.prototype.setServer=function(d){var f=Array.prototype.slice.call(arguments).slice(1);if(d!=null&&f.length>0){if(this.connectionMan.getConnections().length>0){this.connectionMan.removeAllConnections()}var e;if(this.system.hasWebSocket()){for(var c=1;c<arguments.length;c++){e=this.useSecureConnect?a.user1.orbiter.ConnectionType.SECURE_WEBSOCKET:a.user1.orbiter.ConnectionType.WEBSOCKET;this.buildConnection(d,arguments[c],e,-1)}}else{this.log.info("[ORBITER] WebSocket not found in host environment. Trying HTTP.")}if(this.isHTTPFailoverEnabled()||!this.system.hasWebSocket()){for(c=1;c<arguments.length;c++){e=this.useSecureConnect?a.user1.orbiter.ConnectionType.SECURE_HTTP:a.user1.orbiter.ConnectionType.HTTP;this.buildConnection(d,arguments[c],e,a.user1.orbiter.HTTPConnection.DEFAULT_SEND_DELAY)}}}else{this.log.error("[ORBITER] setServer() failed. Invalid host ["+d+"] or port ["+f.join(",")+"].")}};a.user1.orbiter.Orbiter.prototype.isReady=function(){return this.connectionMan.isReady()};a.user1.orbiter.Orbiter.prototype.enableHTTPFailover=function(){this.httpFailoverEnabled=true};a.user1.orbiter.Orbiter.prototype.disableHTTPFailover=function(){this.httpFailoverEnabled=false};a.user1.orbiter.Orbiter.prototype.isHTTPFailoverEnabled=function(){return this.httpFailoverEnabled};a.user1.orbiter.Orbiter.prototype.enableStatistics=function(){if(this.statistics==null){this.statistics=new a.user1.orbiter.Statistics(this)}};a.user1.orbiter.Orbiter.prototype.disableStatistics=function(){if(this.statistics!=null){this.statistics.stop()}};a.user1.orbiter.Orbiter.prototype.getStatistics=function(){return this.statistics};a.user1.orbiter.Orbiter.prototype.getSystem=function(){return this.system};a.user1.orbiter.Orbiter.prototype.getRoomManager=function(){return this.roomMan};a.user1.orbiter.Orbiter.prototype.getConnectionManager=function(){return this.connectionMan};a.user1.orbiter.Orbiter.prototype.getClientManager=function(){return this.clientMan};a.user1.orbiter.Orbiter.prototype.getAccountManager=function(){return this.accountMan};a.user1.orbiter.Orbiter.prototype.getMessageManager=function(){return this.messageMan};a.user1.orbiter.Orbiter.prototype.getServer=function(){return this.server};a.user1.orbiter.Orbiter.prototype.getConnectionMonitor=function(){return this.connectionMonitor};a.user1.orbiter.Orbiter.prototype.getCoreMessageListener=function(){return this.coreMsgListener};a.user1.orbiter.Orbiter.prototype.getLog=function(){return this.log};a.user1.orbiter.Orbiter.prototype.self=function(){var c;if(this.clientMan==null||!this.isReady()){return null}else{c=this.clientMan.self().getCustomClient(null);if(c!=null){return c}else{return this.clientMan.self()}}};a.user1.orbiter.Orbiter.prototype.getSnapshotManager=function(){return this.snapshotMan};a.user1.orbiter.Orbiter.prototype.updateSnapshot=function(c){this.snapshotMan.updateSnapshot(c)};a.user1.orbiter.Orbiter.prototype.connectFailureListener=function(c){this.fireClose()};a.user1.orbiter.Orbiter.prototype.disconnectListener=function(c){this.accountMan.cleanup();this.roomMan.cleanup();this.clientMan.cleanup();this.server.cleanup();this.fireClose()};a.user1.orbiter.Orbiter.prototype.readyListener=function(c){this.fireReady()};a.user1.orbiter.Orbiter.prototype.selectConnectionListener=function(c){this.messageMan.addMessageListener(a.user1.orbiter.UPC.SERVER_HELLO,this.u66,this);this.messageMan.addMessageListener(a.user1.orbiter.UPC.CONNECTION_REFUSED,this.u164,this)};a.user1.orbiter.Orbiter.prototype.getClientID=function(){return this.self()?this.self().getClientID():""};a.user1.orbiter.Orbiter.prototype.fireClose=function(){this.dispatchEvent(new a.user1.orbiter.OrbiterEvent(a.user1.orbiter.OrbiterEvent.CLOSE))};a.user1.orbiter.Orbiter.prototype.fireReady=function(){this.dispatchEvent(new a.user1.orbiter.OrbiterEvent(a.user1.orbiter.OrbiterEvent.READY))};a.user1.orbiter.Orbiter.prototype.fireProtocolIncompatible=function(c){this.dispatchEvent(new a.user1.orbiter.OrbiterEvent(a.user1.orbiter.OrbiterEvent.PROTOCOL_INCOMPATIBLE,c))};a.user1.orbiter.Orbiter.prototype.dispatchConnectRefused=function(c){this.dispatchEvent(new a.user1.orbiter.OrbiterEvent(a.user1.orbiter.OrbiterEvent.CONNECT_REFUSED,null,c))};a.user1.orbiter.Orbiter.prototype.u66=function(e,i,h,d,f,g){var c=new a.user1.orbiter.VersionNumber();c.fromVersionString(h);if(d=="false"){this.fireProtocolIncompatible(c)}};a.user1.orbiter.Orbiter.prototype.u164=function(d,c){this.connectionMonitor.setAutoReconnectFrequency(-1);this.dispatchConnectRefused(new a.user1.orbiter.ConnectionRefusal(d,c))};a.user1.orbiter.Orbiter.prototype.getSessionID=function(){return this.sessionID==null?"":this.sessionID};a.user1.orbiter.Orbiter.prototype.setSessionID=function(c){this.sessionID=c};a.user1.orbiter.Orbiter.prototype.enableConsole=function(){if(this.consoleLogger==null){this.consoleLogger=new a.user1.logger.ConsoleLogger(this.log)}};a.user1.orbiter.Orbiter.prototype.disableConsole=function(){if(this.consoleLogger!=null){this.consoleLogger.dispose();this.consoleLogger=null}};a.user1.orbiter.Orbiter.prototype.dispose=function(){this.log.info("[ORBITER] Beginning disposal of all resources...");this.connectionMan.dispose();this.roomMan.dispose();this.connectionMonitor.dispose();this.clientMan.dispose();this.messageMan.dispose();if(this.statistics!=null){this.statistics.stop()}this.log.info("[ORBITER] Disposal complete.")};a.user1.orbiter.ConnectionState=new Object();a.user1.orbiter.ConnectionState.UNKNOWN=-1;a.user1.orbiter.ConnectionState.NOT_CONNECTED=0;a.user1.orbiter.ConnectionState.READY=1;a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS=2;a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS=3;a.user1.orbiter.ConnectionState.LOGGED_IN=4;a.user1.orbiter.ConnectionEvent=function(e,g,f,d,c){a.user1.events.Event.call(this,e);this.upc=g;this.data=f;this.connection=d;this.status=c};a.user1.utils.extend(a.user1.orbiter.ConnectionEvent,a.user1.events.Event);a.user1.orbiter.ConnectionEvent.BEGIN_CONNECT="BEGIN_CONNECT";a.user1.orbiter.ConnectionEvent.BEGIN_HANDSHAKE="BEGIN_HANDSHAKE";a.user1.orbiter.ConnectionEvent.READY="READY";a.user1.orbiter.ConnectionEvent.CONNECT_FAILURE="CONNECT_FAILURE";a.user1.orbiter.ConnectionEvent.CLIENT_KILL_CONNECT="CLIENT_KILL_CONNECT";a.user1.orbiter.ConnectionEvent.SERVER_KILL_CONNECT="SERVER_KILL_CONNECT";a.user1.orbiter.ConnectionEvent.DISCONNECT="DISCONNECT";a.user1.orbiter.ConnectionEvent.RECEIVE_UPC="RECEIVE_UPC";a.user1.orbiter.ConnectionEvent.SEND_DATA="SEND_DATA";a.user1.orbiter.ConnectionEvent.RECEIVE_DATA="RECEIVE_DATA";a.user1.orbiter.ConnectionEvent.SESSION_TERMINATED="SESSION_TERMINATED";a.user1.orbiter.ConnectionEvent.SESSION_NOT_FOUND="SESSION_NOT_FOUND";a.user1.orbiter.ConnectionEvent.prototype.getUPC=function(){return this.upc};a.user1.orbiter.ConnectionEvent.prototype.getData=function(){return this.data};a.user1.orbiter.ConnectionEvent.prototype.getStatus=function(){return this.status};a.user1.orbiter.ConnectionEvent.prototype.toString=function(){return"[object ConnectionEvent]"};a.user1.orbiter.ConnectionType=new Object();a.user1.orbiter.ConnectionType.HTTP="HTTP";a.user1.orbiter.ConnectionType.SECURE_HTTP="SECURE_HTTP";a.user1.orbiter.ConnectionType.WEBSOCKET="WEBSOCKET";a.user1.orbiter.ConnectionType.SECURE_WEBSOCKET="SECURE_WEBSOCKET";a.user1.orbiter.Connection=function(e,c,d){a.user1.events.EventDispatcher.call(this);this.mostRecentConnectAchievedReady=false;this.mostRecentConnectTimedOut=false;this.readyCount=0;this.connectAttemptCount=0;this.connectAbortCount=0;this.readyTimeoutID=0;this.readyTimeout=0;this.orbiter=null;this.disposed=false;this.requestedHost=null;this.setServer(e,c);this.connectionType=d;this.connectionState=a.user1.orbiter.ConnectionState.NOT_CONNECTED};a.user1.utils.extend(a.user1.orbiter.Connection,a.user1.events.EventDispatcher);a.user1.orbiter.Connection.prototype.setOrbiter=function(c){if(this.orbiter!=null){this.orbiter.getMessageManager().removeMessageListener("u63",this.u63);this.orbiter.getMessageManager().removeMessageListener("u66",this.u66);this.orbiter.getMessageManager().removeMessageListener("u84",this.u84);this.orbiter.getMessageManager().removeMessageListener("u85",this.u85)}this.orbiter=c};a.user1.orbiter.Connection.prototype.connect=function(){this.disconnect();this.applyAffinity();this.orbiter.getLog().info(this.toString()+" Attempting connection...");this.connectAttemptCount++;this.mostRecentConnectAchievedReady=false;this.mostRecentConnectTimedOut=false;this.connectionState=a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS;this.startReadyTimer();this.dispatchBeginConnect()};a.user1.orbiter.Connection.prototype.disconnect=function(){var c=this.connectionState;if(c!=a.user1.orbiter.ConnectionState.NOT_CONNECTED){this.deactivateConnection();if(c==a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS){this.connectAbortCount++;this.dispatchConnectFailure("Client closed connection before READY state was achieved.")}else{this.dispatchClientKillConnect()}}};a.user1.orbiter.Connection.prototype.deactivateConnection=function(){this.connectionState=a.user1.orbiter.ConnectionState.NOT_CONNECTED;this.stopReadyTimer();this.orbiter.setSessionID("")};a.user1.orbiter.Connection.prototype.setServer=function(d,c){this.requestedHost=d;if(c<1||c>65536){throw new Error("Illegal port specified ["+c+"]. Must be greater than 0 and less than 65537.")}this.port=c};a.user1.orbiter.Connection.prototype.getRequestedHost=function(){return this.requestedHost};a.user1.orbiter.Connection.prototype.getHost=function(){if(this.host==null){return this.getRequestedHost()}else{return this.host}};a.user1.orbiter.Connection.prototype.getPort=function(){return this.port};a.user1.orbiter.Connection.prototype.getType=function(){return this.connectionType};a.user1.orbiter.Connection.prototype.beginReadyHandshake=function(){this.dispatchBeginHandshake();if(!this.orbiter.getMessageManager().hasMessageListener("u63",this.u63)){this.orbiter.getMessageManager().addMessageListener("u63",this.u63,this);this.orbiter.getMessageManager().addMessageListener("u66",this.u66,this);this.orbiter.getMessageManager().addMessageListener("u84",this.u84,this);this.orbiter.getMessageManager().addMessageListener("u85",this.u85,this)}this.sendHello()};a.user1.orbiter.Connection.prototype.sendHello=function(){var c=this.buildHelloMessage();this.orbiter.getLog().debug(this.toString()+" Sending CLIENT_HELLO: "+c);this.transmitHelloMessage(c)};a.user1.orbiter.Connection.prototype.buildHelloMessage=function(){var c="<U><M>u65</M><L><A>"+this.orbiter.getSystem().getClientType()+"</A><A>"+(typeof navigator!="undefined"?navigator.userAgent+";":"")+this.orbiter.getSystem().getClientVersion().toStringVerbose()+"</A><A>"+this.orbiter.getSystem().getUPCVersion().toString()+"</A></L></U>";return c};a.user1.orbiter.Connection.prototype.transmitHelloMessage=function(c){this.send(c)};a.user1.orbiter.Connection.prototype.readyTimerListener=function(){this.stopReadyTimer();if(this.connectionState==a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS){this.orbiter.getLog().warn("[CONNECTION] "+this.toString()+" Failed to achieve ready state after "+this.readyTimeout+"ms. Aborting connection...");this.mostRecentConnectTimedOut=true;this.disconnect()}};a.user1.orbiter.Connection.prototype.stopReadyTimer=function(){if(this.readyTimeoutID!=-1){clearTimeout(this.readyTimeoutID)}};a.user1.orbiter.Connection.prototype.startReadyTimer=function(){var d=this;var e=this.readyTimerListener;this.stopReadyTimer();this.readyTimeout=this.orbiter.getConnectionManager().getReadyTimeout();var c=this;this.readyTimeoutID=setTimeout(function(){e.call(d)},c.readyTimeout)};a.user1.orbiter.Connection.prototype.getReadyCount=function(){return this.readyCount};a.user1.orbiter.Connection.prototype.isReady=function(){return this.connectionState==a.user1.orbiter.ConnectionState.READY};a.user1.orbiter.Connection.prototype.isValid=function(){if(this.mostRecentConnectAchievedReady){this.orbiter.getLog().debug(this.toString()+" Connection is valid because its last connection attempt succeeded.");return true}if(this.connectAttemptCount==0){this.orbiter.getLog().debug(this.toString()+" Connection is valid because it has either never attempted to connect, or has not attempted to connect since its last successful connection.");return true}if((this.connectAttemptCount>0)&&(this.connectAttemptCount==this.connectAbortCount)&&!this.mostRecentConnectTimedOut){this.orbiter.getLog().debug(this.toString()+" Connection is valid because either all connection attempts ever or all connection attempts since its last successful connection were aborted before the ready timeout was reached.");return true}this.orbiter.getLog().debug(this.toString()+" Connection is not valid; its most recent connection failed to achieve a ready state.");return false};a.user1.orbiter.Connection.prototype.u63=function(){this.stopReadyTimer();this.connectionState=a.user1.orbiter.ConnectionState.READY;this.mostRecentConnectAchievedReady=true;this.readyCount++;this.connectAttemptCount=0;this.connectAbortCount=0;this.dispatchReady()};a.user1.orbiter.Connection.prototype.u66=function(d,h,f,c,e,g){this.orbiter.setSessionID(h)};a.user1.orbiter.Connection.prototype.u84=function(){this.dispatchSessionTerminated()};a.user1.orbiter.Connection.prototype.u85=function(){this.dispatchSessionNotFound()};a.user1.orbiter.Connection.prototype.applyAffinity=function(){var c=this.orbiter.getConnectionManager().getAffinity(this.requestedHost);if(c==this.requestedHost){this.orbiter.getLog().info(this.toString()+" No affinity address found for requested host ["+this.requestedHost+"]. Using requested host for next connection attempt.")}else{this.orbiter.getLog().info(this.toString()+" Applying affinity address ["+c+"] for supplied host ["+this.requestedHost+"].")}this.host=c};a.user1.orbiter.Connection.prototype.toString=function(){var c="["+this.connectionType+", requested host: "+this.requestedHost+", host: "+(this.host==null?"":this.host)+", port: "+this.port+"]";return c};a.user1.orbiter.Connection.prototype.dispatchSendData=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.SEND_DATA,null,c,this))};a.user1.orbiter.Connection.prototype.dispatchReceiveData=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.RECEIVE_DATA,null,c,this))};a.user1.orbiter.Connection.prototype.dispatchConnectFailure=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.CONNECT_FAILURE,null,null,this,c))};a.user1.orbiter.Connection.prototype.dispatchBeginConnect=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.BEGIN_CONNECT,null,null,this))};a.user1.orbiter.Connection.prototype.dispatchBeginHandshake=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.BEGIN_HANDSHAKE,null,null,this))};a.user1.orbiter.Connection.prototype.dispatchReady=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.READY,null,null,this))};a.user1.orbiter.Connection.prototype.dispatchServerKillConnect=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.SERVER_KILL_CONNECT,null,null,this));this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.DISCONNECT,null,null,this))};a.user1.orbiter.Connection.prototype.dispatchClientKillConnect=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.CLIENT_KILL_CONNECT,null,null,this));this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.DISCONNECT,null,null,this))};a.user1.orbiter.Connection.prototype.dispatchSessionTerminated=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.SESSION_TERMINATED,null,null,this))};a.user1.orbiter.Connection.prototype.dispatchSessionNotFound=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.SESSION_NOT_FOUND,null,null,this))};a.user1.orbiter.Connection.prototype.dispose=function(){this.disposed=true;this.messageManager.removeMessageListener("u63",this.u63);this.messageManager.removeMessageListener("u66",this.u66);this.messageManager.removeMessageListener("u84",this.u84);this.messageManager.removeMessageListener("u85",this.u85);this.stopReadyTimer();this.readyTimer=null;this.orbiter=null};a.user1.orbiter.WebSocketConnection=function(e,c,d){a.user1.orbiter.Connection.call(this,e,c,d||a.user1.orbiter.ConnectionType.WEBSOCKET);this.socket=null};a.user1.utils.extend(a.user1.orbiter.WebSocketConnection,a.user1.orbiter.Connection);a.user1.orbiter.WebSocketConnection.prototype.getNewSocket=function(){this.deactivateSocket(this.socket);if(typeof MozWebSocket!="undefined"){this.socket=new MozWebSocket(this.buildURL())}else{this.socket=new WebSocket(this.buildURL())}var c=this;this.socket.onopen=function(d){c.connectListener(d)};this.socket.onmessage=function(d){c.dataListener(d)};this.socket.onclose=function(d){c.closeListener(d)};this.socket.onerror=function(d){c.ioErrorListener(d)}};a.user1.orbiter.WebSocketConnection.prototype.buildURL=function(){return"ws://"+this.host+":"+this.port};a.user1.orbiter.WebSocketConnection.prototype.deactivateSocket=function(c){if(c==null){return}this.socket.onopen=null;this.socket.onmessage=null;this.socket.onclose=null;this.socket.onerror=null;try{c.close()}catch(d){}this.socket=null};a.user1.orbiter.WebSocketConnection.prototype.connect=function(){a.user1.orbiter.Connection.prototype.connect.call(this);try{this.getNewSocket()}catch(c){this.deactivateConnection();this.dispatchConnectFailure(c.toString())}};a.user1.orbiter.WebSocketConnection.prototype.deactivateConnection=function(){this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Deactivating...");this.connectionState=a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS;this.deactivateSocket(this.socket);a.user1.orbiter.Connection.prototype.deactivateConnection.call(this)};a.user1.orbiter.WebSocketConnection.prototype.connectListener=function(c){if(this.disposed){return}this.orbiter.getLog().debug(this.toString()+" Socket connected.");this.beginReadyHandshake()};a.user1.orbiter.WebSocketConnection.prototype.closeListener=function(d){if(this.disposed){return}var c=this.connectionState;this.deactivateConnection();if(c==a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS){this.dispatchConnectFailure("WebSocket onclose: Server closed connection before READY state was achieved.")}else{this.dispatchServerKillConnect()}};a.user1.orbiter.WebSocketConnection.prototype.ioErrorListener=function(d){if(this.disposed){return}var c=this.connectionState;this.deactivateConnection();if(c==a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS){this.dispatchConnectFailure("WebSocket onerror: Server closed connection before READY state was achieved.")}else{this.dispatchServerKillConnect()}};a.user1.orbiter.WebSocketConnection.prototype.dataListener=function(d){if(this.disposed){return}var c=d.data;this.dispatchReceiveData(c);if(c.indexOf("<U>")==0){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.RECEIVE_UPC,c))}else{this.orbiter.getLog().error(this.toString()+" Received invalid message (not UPC or malformed UPC): "+c)}};a.user1.orbiter.WebSocketConnection.prototype.send=function(c){this.dispatchSendData(c);this.socket.send(c)};a.user1.orbiter.WebSocketConnection.prototype.dispose=function(){a.user1.orbiter.Connection.prototype.dispose.call(this);this.deactivateSocket(this.socket)};a.user1.orbiter.SecureWebSocketConnection=function(d,c){a.user1.orbiter.WebSocketConnection.call(this,d,c,a.user1.orbiter.ConnectionType.SECURE_WEBSOCKET)};a.user1.utils.extend(a.user1.orbiter.SecureWebSocketConnection,a.user1.orbiter.WebSocketConnection);a.user1.orbiter.SecureWebSocketConnection.prototype.buildURL=function(){return"wss://"+this.host+":"+this.port};a.user1.orbiter.HTTPConnection=function(e,c,d){a.user1.orbiter.Connection.call(this,e,c,d||a.user1.orbiter.ConnectionType.HTTP);this.url="";this.sendDelayTimerEnabled=true;this.sendDelayTimeoutID=-1;this.sendDelayTimerRunning=false;this.sendDelay=a.user1.orbiter.HTTPConnection.DEFAULT_SEND_DELAY;this.messageQueue=new Array();this.retryDelay=500;this.retryHelloTimeoutID=-1;this.retryIncomingTimeoutID=-1;this.retryOutgoingTimeoutID=-1;this.helloResponsePending=false;this.outgoingResponsePending=false;this.addEventListener(a.user1.orbiter.ConnectionEvent.SESSION_TERMINATED,this.sessionTerminatedListener,this);this.addEventListener(a.user1.orbiter.ConnectionEvent.SESSION_NOT_FOUND,this.sessionNotFoundListener,this)};a.user1.utils.extend(a.user1.orbiter.HTTPConnection,a.user1.orbiter.Connection);a.user1.orbiter.HTTPConnection.DEFAULT_SEND_DELAY=300;a.user1.orbiter.HTTPConnection.prototype.doRequestDeactivation=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.doSendHello=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.doRetryHello=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.doSendOutgoing=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.doRetryOutgoing=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.doSendIncoming=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.doRetryIncoming=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.doDispose=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.connect=function(){a.user1.orbiter.Connection.prototype.connect.call(this)};a.user1.orbiter.HTTPConnection.prototype.deactivateConnection=function(){this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Deactivating...");this.connectionState=a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS;this.stopSendDelayTimer();if(this.retryHelloTimeoutID!=-1){this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Cancelling scheduled hello-request retry.");clearTimeout(this.retryHelloTimeoutID);this.retryHelloTimeoutID=-1}if(this.retryIncomingTimeoutID!=-1){this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Cancelling scheduled incoming-request retry.");clearTimeout(this.retryIncomingTimeoutID);this.retryIncomingTimeoutID=-1}if(this.retryOutgoingTimeoutID!=-1){this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Cancelling scheduled outgoing-request retry.");clearTimeout(this.retryOutgoingTimeoutID);this.retryOutgoingTimeoutID=-1}this.deactivateHTTPRequests();a.user1.orbiter.Connection.prototype.deactivateConnection.call(this)};a.user1.orbiter.HTTPConnection.prototype.deactivateHTTPRequests=function(){this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Closing all pending HTTP requests.");this.doRequestDeactivation();this.helloResponsePending=false;this.outgoingResponsePending=false};a.user1.orbiter.HTTPConnection.prototype.sessionTerminatedListener=function(d){var c=this.connectionState;this.deactivateConnection();if(c==a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS){this.dispatchConnectFailure("Server terminated session before READY state was achieved.")}else{this.dispatchServerKillConnect()}};a.user1.orbiter.HTTPConnection.prototype.sessionNotFoundListener=function(d){var c=this.connectionState;this.deactivateConnection();if(c==a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS){this.dispatchConnectFailure("Client attempted to reestablish an expired session or establish an unknown session.")}else{this.dispatchServerKillConnect()}};a.user1.orbiter.HTTPConnection.prototype.setServer=function(d,c){try{a.user1.orbiter.Connection.prototype.setServer.call(this,d,c)}finally{this.buildURL()}};a.user1.orbiter.HTTPConnection.prototype.buildURL=function(){this.url="http://"+this.host+":"+this.port};a.user1.orbiter.HTTPConnection.prototype.sendDelayTimerListener=function(){this.sendDelayTimerRunning=false;if(this.messageQueue.length>0){this.flushMessageQueue()}else{}};a.user1.orbiter.HTTPConnection.prototype.stopSendDelayTimer=function(){this.sendDelayTimerRunning=false;if(this.sendDelayTimeoutID!=-1){clearTimeout(this.sendDelayTimeoutID)}this.sendDelayTimeoutID=-1};a.user1.orbiter.HTTPConnection.prototype.startSendDelayTimer=function(){this.stopSendDelayTimer();var c=this;var d=this.sendDelayTimerListener;this.sendDelayTimerRunning=true;this.sendDelayTimeoutID=setTimeout(function(){d.call(c)},this.sendDelay)};a.user1.orbiter.HTTPConnection.prototype.setSendDelay=function(c){if(c>0){if((c!=this.sendDelay)){this.sendDelay=c;this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Send delay set to: ["+c+"].")}this.sendDelayTimerEnabled=true}else{if(c==-1){this.orbiter.getLog().debug("[CONNECTION] "+toString()+" Send delay disabled.");this.sendDelayTimerEnabled=false;this.stopSendDelayTimer()}else{throw new Error("[CONNECTION]"+this.toString()+" Invalid send-delay specified: ["+c+"].")}}};a.user1.orbiter.HTTPConnection.prototype.getSendDelay=function(){return this.sendDelay};a.user1.orbiter.HTTPConnection.prototype.setRetryDelay=function(c){if(c>-1){if(c!=this.retryDelay){this.retryDelay=c;this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Retry delay set to: ["+c+"].")}}else{throw new Error("[CONNECTION]"+this.toString()+" Invalid retry delay specified: ["+c+"].")}};a.user1.orbiter.HTTPConnection.prototype.send=function(c){if(!this.sendDelayTimerRunning){this.messageQueue.push(c);this.flushMessageQueue()}else{this.messageQueue.push(c)}};a.user1.orbiter.HTTPConnection.prototype.flushMessageQueue=function(){if(!this.outgoingResponsePending){this.openNewOutgoingRequest(this.messageQueue.join(""));this.messageQueue=new Array()}else{}};a.user1.orbiter.HTTPConnection.prototype.transmitHelloMessage=function(c){this.dispatchSendData(c);this.helloResponsePending=true;this.doSendHello(c)};a.user1.orbiter.HTTPConnection.prototype.helloCompleteListener=function(d){if(this.disposed){return}if(this.helloResponsePending){this.helloResponsePending=false;this.processIncomingData(d);var c=this;setTimeout(function(){c.openNewIncomingRequest()},0)}else{if(this.connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED){this.orbiter.getLog().error("[CONNECTION]"+toString()+" u66 (SERVER_HELLO) received, but client is not connected. Ignoring.")}else{this.orbiter.getLog().error("[CONNECTION]"+toString()+" Redundant u66 (SERVER_HELLO) received. Ignoring.")}}};a.user1.orbiter.HTTPConnection.prototype.helloErrorListener=function(){if(this.disposed){return}if(this.retryHelloTimeoutID!=-1){return}if(this.connectionState!=a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS){this.orbiter.getLog().error("[CONNECTION]"+this.toString()+" u65 (CLIENT_HELLO) request failed. Connection is no longer in progress, so no retry scheduled.");return}this.orbiter.getLog().error("[CONNECTION]"+this.toString()+" u65 (CLIENT_HELLO) request failed. Retrying in "+this.retryDelay+"ms.");var c=this;this.retryHelloTimeoutID=setTimeout(function(){c.retryHelloTimeoutID=-1;c.doRetryHello()},this.retryDelay)};a.user1.orbiter.HTTPConnection.prototype.openNewOutgoingRequest=function(c){this.dispatchSendData(c);this.outgoingResponsePending=true;this.doSendOutgoing(c);if(this.sendDelayTimerEnabled==true){this.startSendDelayTimer()}};a.user1.orbiter.HTTPConnection.prototype.outgoingCompleteListener=function(){if(this.disposed){return}this.outgoingResponsePending=false;if(!this.sendDelayTimerRunning&&this.messageQueue.length>0){var c=this;setTimeout(function(){c.flushMessageQueue()},0)}};a.user1.orbiter.HTTPConnection.prototype.outgoingErrorListener=function(){if(this.disposed){return}if(this.retryOutgoingTimeoutID!=-1){return}if(this.connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED||this.connectionState==a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS){this.orbiter.getLog().error("[CONNECTION]"+this.toString()+" Outgoing request failed. Connection is closed, so no retry scheduled.");return}this.orbiter.getLog().error("[CONNECTION]"+this.toString()+" Outgoing request failed. Retrying in "+this.retryDelay+"ms.");var c=this;this.retryOutgoingTimeoutID=setTimeout(function(){c.retryOutgoingTimeoutID=-1;if(c.disposed||c.connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED||c.connectionState==a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS){return}c.doRetryOutgoing()},this.retryDelay)};a.user1.orbiter.HTTPConnection.prototype.openNewIncomingRequest=function(){this.doSendIncoming()};a.user1.orbiter.HTTPConnection.prototype.incomingCompleteListener=function(d){if(this.disposed||this.connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED||this.connectionState==a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS){return}var c=this;setTimeout(function(){c.processIncomingData(d);if(c.disposed||c.connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED||c.connectionState==a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS){return}c.openNewIncomingRequest()},0)};a.user1.orbiter.HTTPConnection.prototype.incomingErrorListener=function(){if(this.disposed){return}if(this.retryIncomingTimeoutID!=-1){return}if(this.connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED||this.connectionState==a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS){this.orbiter.getLog().error("[CONNECTION]"+this.toString()+" Incoming request failed. Connection is closed, so no retry scheduled.");return}this.orbiter.getLog().error("[CONNECTION]"+this.toString()+" Incoming request failed. Retrying in "+this.retryDelay+"ms.");var c=this;this.retryIncomingTimeoutID=setTimeout(function(){c.retryIncomingTimeoutID=-1;if(c.disposed||c.connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED||c.connectionState==a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS){return}c.doRetryIncoming()},this.retryDelay)};a.user1.orbiter.HTTPConnection.prototype.processIncomingData=function(f){if(this.disposed){return}var e;this.dispatchReceiveData(f);var g=new Array();var c=f.indexOf("</U>");if(c==-1&&f.length>0){this.orbiter.getLog().error("Invalid message received. No UPC found: ["+f+"]");if(!this.isReady()){this.disconnect();return}}while(c!=-1){g.push(f.substring(0,c+4));f=f.substring(c+4);c=f.indexOf("</U>")}for(var d=0;d<g.length;d++){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.RECEIVE_UPC,g[d]))}};a.user1.orbiter.HTTPConnection.prototype.applyAffinity=function(c){a.user1.orbiter.Connection.prototype.applyAffinity.call(this);this.buildURL()};a.user1.orbiter.HTTPConnection.prototype.toString=function(){var c="["+this.connectionType+", requested host: "+this.requestedHost+", host: "+(this.host==null?"":this.host)+", port: "+this.port+", send-delay: "+this.getSendDelay()+"]";return c};a.user1.orbiter.HTTPConnection.prototype.dispose=function(){this.doDispose();this.stopSendDelayTimer();a.user1.orbiter.Connection.prototype.dispose.call(this)};a.user1.orbiter.HTTPIFrameConnection=function(e,c,d){a.user1.orbiter.HTTPConnection.call(this,e,c,d||a.user1.orbiter.ConnectionType.HTTP);this.postMessageInited=false;this.iFrameReady=false};a.user1.utils.extend(a.user1.orbiter.HTTPIFrameConnection,a.user1.orbiter.HTTPConnection);a.user1.orbiter.HTTPIFrameConnection.prototype.initPostMessage=function(){if(this.postMessageInited){throw new Error("[HTTPIFrameConnection] Illegal duplicate initialization attempt.")}var c=this;var f=this.orbiter.window;var e=null;if(f==null){e="[HTTPIFrameConnection] Unable to create connection. No window object found."}else{if(typeof f.addEventListener!="undefined"){f.addEventListener("message",d,false)}else{if(typeof f.attachEvent!="undefined"){f.attachEvent("onmessage",d)}else{e="[HTTPIFrameConnection] Unable to create connection. No event listener registration method found on window object."}}}if(e!=null){this.orbiter.getLog().error(e);throw new Error(e)}function d(g){if(g.origin.indexOf("//"+c.host+(c.port==80?"":(":"+c.port)))==-1&&g.origin.indexOf("//"+c.requestedHost+(c.port==80?"":(":"+c.port)))==-1){c.orbiter.getLog().error("[CONNECTION] "+c.toString()+" Ignored message from unknown origin: "+g.origin);return}c.processPostMessage(g.data)}this.postMessageInited=true};a.user1.orbiter.HTTPIFrameConnection.prototype.makeIFrame=function(){if(typeof this.orbiter.window.document=="undefined"){var c="[HTTPIFrameConnection] Unable to create connection. No document object found.";this.orbiter.getLog().error(c);throw new Error(c)}var d=this.orbiter.window.document;this.iFrameReady=false;if(this.iframe!=null){this.postToIFrame("dispose");d.body.removeChild(this.iframe)}this.iframe=d.createElement("iframe");this.iframe.width="0px";this.iframe.height="0px";this.iframe.border="0px";this.iframe.frameBorder="0";this.iframe.style.visibility="hidden";this.iframe.style.display="none";this.iframe.src=this.url+"/orbiter";d.body.appendChild(this.iframe)};a.user1.orbiter.HTTPIFrameConnection.prototype.onIFrameReady=function(){this.beginReadyHandshake()};a.user1.orbiter.HTTPIFrameConnection.prototype.postToIFrame=function(d,c){if(this.iframe&&this.iFrameReady){c=c==undefined?"":c;this.iframe.contentWindow.postMessage(d+","+c,this.iframe.contentWindow.location.href)}};a.user1.orbiter.HTTPIFrameConnection.prototype.processPostMessage=function(c){var f=c.indexOf(",");var e=c.substring(0,f);var d=c.substring(f+1);switch(e){case"ready":this.iFrameReady=true;this.onIFrameReady();break;case"hellocomplete":this.helloCompleteListener(d);break;case"helloerror":this.helloErrorListener();break;case"outgoingcomplete":this.outgoingCompleteListener();break;case"outgoingerror":this.outgoingErrorListener();break;case"incomingcomplete":this.incomingCompleteListener(d);break;case"incomingerror":this.incomingErrorListener();break}};a.user1.orbiter.HTTPIFrameConnection.prototype.connect=function(){if(!this.postMessageInited){this.initPostMessage()}a.user1.orbiter.HTTPConnection.prototype.connect.call(this);this.makeIFrame()};a.user1.orbiter.HTTPIFrameConnection.prototype.doRequestDeactivation=function(){this.postToIFrame("deactivate")};a.user1.orbiter.HTTPIFrameConnection.prototype.u66=function(d,f,e,c){a.user1.orbiter.Connection.prototype.u66.call(this,d,f,e,c);if(this.iframe!=null){this.postToIFrame("sessionid",f)}};a.user1.orbiter.HTTPIFrameConnection.prototype.doSendHello=function(c){this.postToIFrame("sendhello",c)};a.user1.orbiter.HTTPIFrameConnection.prototype.doRetryHello=function(){this.postToIFrame("retryhello")};a.user1.orbiter.HTTPIFrameConnection.prototype.doSendOutgoing=function(c){this.postToIFrame("sendoutgoing",c)};a.user1.orbiter.HTTPIFrameConnection.prototype.doRetryOutgoing=function(){this.postToIFrame("retryoutgoing")};a.user1.orbiter.HTTPIFrameConnection.prototype.doSendIncoming=function(){this.postToIFrame("sendincoming")};a.user1.orbiter.HTTPIFrameConnection.prototype.doRetryIncoming=function(){this.postToIFrame("retryincoming")};a.user1.orbiter.HTTPIFrameConnection.prototype.toString=function(){var c="[HTTPIFrameConnection, requested host: "+this.requestedHost+", host: "+(this.host==null?"":this.host)+", port: "+this.port+", send-delay: "+this.getSendDelay()+"]";return c};a.user1.orbiter.HTTPIFrameConnection.prototype.doDispose=function(){this.postToIFrame("dispose")};a.user1.orbiter.HTTPDirectConnection=function(e,c,d){a.user1.orbiter.HTTPConnection.call(this,e,c,d||a.user1.orbiter.ConnectionType.HTTP);this.outgoingRequestID=0;this.incomingRequestID=0;this.lastOutgoingPostData=null;this.lastIncomingPostData=null;this.lastHelloPostData=null;this.pendingRequests=[]};a.user1.utils.extend(a.user1.orbiter.HTTPDirectConnection,a.user1.orbiter.HTTPConnection);a.user1.orbiter.HTTPDirectConnection.prototype.connect=function(){a.user1.orbiter.HTTPConnection.prototype.connect.call(this);this.beginReadyHandshake()};a.user1.orbiter.HTTPDirectConnection.prototype.doSendHello=function(c){this.newHelloRequest(c)};a.user1.orbiter.HTTPDirectConnection.prototype.doRetryHello=function(){this.retryHello()};a.user1.orbiter.HTTPDirectConnection.prototype.newHelloRequest=function(c){this.lastHelloPostData=this.createHelloPostData(encodeURIComponent(c));this.transmitRequest(this.lastHelloPostData,a.user1.orbiter.HTTPDirectConnection.helloRequestReadystatechangeListener,a.user1.orbiter.HTTPDirectConnection.helloRequestErrorListener)};a.user1.orbiter.HTTPDirectConnection.prototype.createHelloPostData=function(c){return"mode=d&data="+c};a.user1.orbiter.HTTPDirectConnection.prototype.retryHello=function(){this.transmitRequest(this.lastHelloPostData,a.user1.orbiter.HTTPDirectConnection.helloRequestReadystatechangeListener,a.user1.orbiter.HTTPDirectConnection.helloRequestErrorListener)};a.user1.orbiter.HTTPDirectConnection.helloRequestReadystatechangeListener=function(d,c){if(d.readyState==4){c.removePendingRequest(d);if(d.status>=200&&d.status<=299){c.helloCompleteListener(d.responseText)}else{c.helloErrorListener()}}};a.user1.orbiter.HTTPDirectConnection.helloRequestErrorListener=function(d,c){c.removePendingRequest(d);c.helloErrorListener()};a.user1.orbiter.HTTPDirectConnection.prototype.doSendOutgoing=function(c){this.newOutgoingRequest(c)};a.user1.orbiter.HTTPDirectConnection.prototype.doRetryOutgoing=function(){this.retryOutgoing()};a.user1.orbiter.HTTPDirectConnection.prototype.newOutgoingRequest=function(c){this.lastOutgoingPostData=this.createOutgoingPostData(encodeURIComponent(c));this.transmitRequest(this.lastOutgoingPostData,a.user1.orbiter.HTTPDirectConnection.outgoingRequestReadystatechangeListener,a.user1.orbiter.HTTPDirectConnection.outgoingRequestErrorListener)};a.user1.orbiter.HTTPDirectConnection.prototype.createOutgoingPostData=function(c){this.outgoingRequestID++;return"rid="+this.outgoingRequestID+"&sid="+this.orbiter.getSessionID()+"&mode=s&data="+c};a.user1.orbiter.HTTPDirectConnection.prototype.retryOutgoing=function(){this.transmitRequest(this.lastOutgoingPostData,a.user1.orbiter.HTTPDirectConnection.outgoingRequestReadystatechangeListener,a.user1.orbiter.HTTPDirectConnection.outgoingRequestErrorListener)};a.user1.orbiter.HTTPDirectConnection.outgoingRequestReadystatechangeListener=function(d,c){if(d.readyState==4){c.removePendingRequest(d);if(d.status>=200&&d.status<=299){c.outgoingCompleteListener()}else{c.outgoingErrorListener()}}};a.user1.orbiter.HTTPDirectConnection.outgoingRequestErrorListener=function(d,c){c.removePendingRequest(d);c.outgoingErrorListener()};a.user1.orbiter.HTTPDirectConnection.prototype.doSendIncoming=function(){this.newIncomingRequest()};a.user1.orbiter.HTTPDirectConnection.prototype.doRetryIncoming=function(){this.retryIncoming()};a.user1.orbiter.HTTPDirectConnection.prototype.newIncomingRequest=function(){this.lastIncomingPostData=this.createIncomingPostData();this.transmitRequest(this.lastIncomingPostData,a.user1.orbiter.HTTPDirectConnection.incomingRequestReadystatechangeListener,a.user1.orbiter.HTTPDirectConnection.incomingRequestErrorListener)};a.user1.orbiter.HTTPDirectConnection.prototype.createIncomingPostData=function(){this.incomingRequestID++;return"rid="+this.incomingRequestID+"&sid="+this.orbiter.getSessionID()+"&mode=c"};a.user1.orbiter.HTTPDirectConnection.prototype.retryIncoming=function(){this.transmitRequest(this.lastIncomingPostData,a.user1.orbiter.HTTPDirectConnection.incomingRequestReadystatechangeListener,a.user1.orbiter.HTTPDirectConnection.incomingRequestErrorListener)};a.user1.orbiter.HTTPDirectConnection.incomingRequestReadystatechangeListener=function(d,c){if(d.readyState==4){c.removePendingRequest(d);if(d.status>=200&&d.status<=299){c.incomingCompleteListener(d.responseText)}else{c.incomingErrorListener()}}};a.user1.orbiter.HTTPDirectConnection.incomingRequestErrorListener=function(d,c){c.removePendingRequest(d);c.incomingErrorListener()};a.user1.orbiter.HTTPDirectConnection.prototype.transmitRequest=function(f,e,g){var c=this;var d;if(typeof XDomainRequest!="undefined"){d=new XDomainRequest();d.onload=function(){d.readyState=4;d.status=200;e(this,c)};d.onerror=function(){g(this,c)};d.ontimeout=function(){g(this,c)};d.onprogress=function(){}}else{var d=new XMLHttpRequest();this.pendingRequests.push(d);d.onreadystatechange=function(){e(this,c)};d.onerror=function(){g(this,c)}}d.open("POST",this.url);if(typeof d.setRequestHeader!="undefined"){d.setRequestHeader("Content-Type","text/plain;charset=UTF-8")}d.send(f)};a.user1.orbiter.HTTPDirectConnection.prototype.removePendingRequest=function(d){for(var c=this.pendingRequests.length;--c>=0;){if(this.pendingRequests[c]===d){this.pendingRequests.splice(c,1)}}};a.user1.orbiter.HTTPDirectConnection.prototype.doRequestDeactivation=function(){for(var c=this.pendingRequests.length;--c>=0;){try{this.pendingRequests[c].abort()}catch(d){}}this.pendingRequests=[]};a.user1.orbiter.HTTPDirectConnection.prototype.toString=function(){var c="[HTTPDirectConnection, requested host: "+this.requestedHost+", host: "+(this.host==null?"":this.host)+", port: "+this.port+", send-delay: "+this.getSendDelay()+"]";return c};a.user1.orbiter.HTTPDirectConnection.prototype.doDispose=function(){this.deactivateHTTPRequests()};a.user1.orbiter.SecureHTTPDirectConnection=function(d,c){a.user1.orbiter.HTTPDirectConnection.call(this,d,c,a.user1.orbiter.ConnectionType.SECURE_HTTP)};a.user1.utils.extend(a.user1.orbiter.SecureHTTPDirectConnection,a.user1.orbiter.HTTPDirectConnection);a.user1.orbiter.SecureHTTPDirectConnection.prototype.buildURL=function(){this.url="https://"+this.host+":"+this.port};a.user1.orbiter.SecureHTTPDirectConnection.prototype.toString=function(){var c="[SecureHTTPDirectConnection, requested host: "+this.requestedHost+", host: "+(this.host==null?"":this.host)+", port: "+this.port+", send-delay: "+this.getSendDelay()+"]";return c};a.user1.orbiter.SecureHTTPIFrameConnection=function(d,c){a.user1.orbiter.HTTPIFrameConnection.call(this,d,c,a.user1.orbiter.ConnectionType.SECURE_HTTP)};a.user1.utils.extend(a.user1.orbiter.SecureHTTPIFrameConnection,a.user1.orbiter.HTTPIFrameConnection);a.user1.orbiter.SecureHTTPIFrameConnection.prototype.buildURL=function(){this.url="https://"+this.host+":"+this.port};a.user1.orbiter.SecureHTTPIFrameConnection.prototype.toString=function(){var c="[SecureHTTPIFrameConnection, requested host: "+this.requestedHost+", host: "+(this.host==null?"":this.host)+", port: "+this.port+", send-delay: "+this.getSendDelay()+"]";return c};a.user1.orbiter.MessageListener=function(e,d,c){this.listener=e;this.forRoomIDs=d;this.thisArg=c};a.user1.orbiter.MessageListener.prototype.getListenerFunction=function(){return this.listener};a.user1.orbiter.MessageListener.prototype.getForRoomIDs=function(){return this.forRoomIDs};a.user1.orbiter.MessageListener.prototype.getThisArg=function(){return this.thisArg};a.user1.orbiter.MessageListener.prototype.toString=function(){return"[object MessageListener]"};a.user1.orbiter.MessageManager=function(c,d){this.log=c;this.messageListeners=new Object();this.removeListenersOnDisconnect=true;this.numMessagesSent=0;this.numMessagesReceived=0;this.currentConnection=null;this.connectionManager=d;this.connectionManager.addEventListener(a.user1.orbiter.ConnectionManagerEvent.SELECT_CONNECTION,this.selectConnectionListener,this)};a.user1.orbiter.MessageManager.prototype.getNumMessagesReceived=function(){return this.numMessagesReceived};a.user1.orbiter.MessageManager.prototype.getNumMessagesSent=function(){return this.numMessagesSent};a.user1.orbiter.MessageManager.prototype.getTotalMessages=function(){return this.numMessagesSent+this.numMessagesReceived};a.user1.orbiter.MessageManager.prototype.selectConnectionListener=function(c){if(this.currentConnection!=null){this.currentConnection.removeEventListener(a.user1.orbiter.ConnectionEvent.RECEIVE_UPC,this.upcReceivedListener,this);this.currentConnection.removeEventListener(a.user1.orbiter.ConnectionEvent.DISCONNECT,this.disconnectListener,this);this.currentConnection.removeEventListener(a.user1.orbiter.ConnectionEvent.CONNECT_FAILURE,this.connectFailureListener,this)}this.currentConnection=c.getConnection();this.currentConnection.addEventListener(a.user1.orbiter.ConnectionEvent.RECEIVE_UPC,this.upcReceivedListener,this);this.currentConnection.addEventListener(a.user1.orbiter.ConnectionEvent.DISCONNECT,this.disconnectListener,this);this.currentConnection.addEventListener(a.user1.orbiter.ConnectionEvent.CONNECT_FAILURE,this.connectFailureListener,this)};a.user1.orbiter.MessageManager.prototype.disconnectListener=function(c){this.cleanupAfterClosedConnection(c.target)};a.user1.orbiter.MessageManager.prototype.connectFailureListener=function(c){this.cleanupAfterClosedConnection(c.target)};a.user1.orbiter.MessageManager.prototype.cleanupAfterClosedConnection=function(c){var f;if(this.removeListenersOnDisconnect){this.log.info("[MESSAGE_MANAGER] Removing registered message listeners.");for(var d in this.messageListeners){f=this.messageListeners[d];for(var e in f){this.removeMessageListener(d,f[e].getListenerFunction())}}}else{this.log.warn("[MESSAGE_MANAGER] Leaving message listeners registered. \nBe sure to remove any unwanted message listeners manually.")}this.numMessagesReceived=0;this.numMessagesSent=0};a.user1.orbiter.MessageManager.prototype.sendUPC=function(f){if(!this.connectionManager.isReady()){this.log.warn("[MESSAGE_MANAGER] Connection not ready. UPC not sent. Message: "+f);return}var d="<U><M>"+f+"</M>";var c;if(arguments.length>1){d+="<L>";for(var e=1;e<arguments.length;e++){c=arguments[e];c=c==undefined?"":c.toString();if(c.indexOf("<")!=-1){if(c.indexOf("<f t=")!=0){c="<![CDATA["+c+"]]>"}}d+="<A>"+c+"</A>"}d+="</L>"}d+="</U>";this.numMessagesSent++;this.log.debug("[MESSAGE_MANAGER] UPC sent: "+d);this.connectionManager.getActiveConnection().send(d)};a.user1.orbiter.MessageManager.prototype.sendUPCObject=function(d){var c=d.args.slice();c.unshift(d.method);this.sendUPC.apply(this,c)};a.user1.orbiter.MessageManager.prototype.upcReceivedListener=function(j){this.numMessagesReceived++;var i=j.getUPC();this.log.debug("[MESSAGE_MANAGER] UPC received: "+i);var k;var d=new Array();var g=i.indexOf("</M>");k=i.substring(6,g);var h=i.indexOf("<A>",g);var f;var c;while(h!=-1){f=i.indexOf("</A>",h);c=i.substring(h+3,f);if(c.indexOf("<![CDATA[")==0){c=c.substr(9,c.length-12)}d.push(c);h=i.indexOf("<A>",f)}this.notifyMessageListeners(k,d)};a.user1.orbiter.MessageManager.prototype.addMessageListener=function(h,i,e,d){if(d!=null){var g=Object.prototype.toString.call(d);if(g!="[object Array]"){throw new Error("[MESSAGE_MANAGER] Illegal argument type "+g+" supplied for addMessageListener()'s forRoomIDs parameter. Value must be an Array.")}}if(this.messageListeners[h]===undefined){this.messageListeners[h]=new Array()}var c=this.messageListeners[h];if(this.hasMessageListener(h,i)){return false}var f=new a.user1.orbiter.MessageListener(i,d===undefined?null:d,e);c.push(f);return true};a.user1.orbiter.MessageManager.prototype.removeMessageListener=function(f,g){var c=this.messageListeners[f];if(c==null){return false}var d;for(var e=0;e<c.length;e++){if(c[e].getListenerFunction()==g){d=true;c.splice(e,1);break}}if(c.length==0){delete this.messageListeners[f]}return d};a.user1.orbiter.MessageManager.prototype.hasMessageListener=function(e,f){var c=this.messageListeners[e];if(c==null){return false}for(var d=0;d<c.length;d++){if(c[d].getListenerFunction()==f){return true}}return false};a.user1.orbiter.MessageManager.prototype.getMessageListeners=function(c){return this.messageListeners[c]!=undefined?this.messageListeners[c]:[]};a.user1.orbiter.MessageManager.prototype.notifyMessageListeners=function(g,d){var f=this.messageListeners[g];if(f===undefined){if(!(g.charAt(0)=="u"&&parseInt(g.substring(1))>1)){this.log.warn("Message delivery failed. No listeners found. Message: "+g+". Arguments: "+d.join())}return}else{f=f.slice(0)}var c=f.length;for(var e=0;e<c;e++){f[e].getListenerFunction().apply(f[e].getThisArg(),d)}};a.user1.orbiter.MessageManager.prototype.dispose=function(){this.log.info("[MESSAGE_MANAGER] Disposing resources.");this.log=null;this.orbiter=null;this.messageListeners=null;this.numMessagesSent=0;this.numMessagesReceived=0;this.currentConnection=null};a.user1.orbiter.MessageManager.prototype.toString=function(){return"[object MessageManager]"};a.user1.orbiter.UPC=new Object();a.user1.orbiter.UPC.SEND_MESSAGE_TO_ROOMS="u1";a.user1.orbiter.UPC.SEND_MESSAGE_TO_CLIENTS="u2";a.user1.orbiter.UPC.SET_CLIENT_ATTR="u3";a.user1.orbiter.UPC.JOIN_ROOM="u4";a.user1.orbiter.UPC.SET_ROOM_ATTR="u5";a.user1.orbiter.UPC.LEAVE_ROOM="u10";a.user1.orbiter.UPC.CREATE_ACCOUNT="u11";a.user1.orbiter.UPC.REMOVE_ACCOUNT="u12";a.user1.orbiter.UPC.CHANGE_ACCOUNT_PASSWORD="u13";a.user1.orbiter.UPC.LOGIN="u14";a.user1.orbiter.UPC.GET_CLIENTCOUNT_SNAPSHOT="u18";a.user1.orbiter.UPC.SYNC_TIME="u19";a.user1.orbiter.UPC.GET_ROOMLIST_SNAPSHOT="u21";a.user1.orbiter.UPC.CREATE_ROOM="u24";a.user1.orbiter.UPC.REMOVE_ROOM="u25";a.user1.orbiter.UPC.WATCH_FOR_ROOMS="u26";a.user1.orbiter.UPC.STOP_WATCHING_FOR_ROOMS="u27";a.user1.orbiter.UPC.GET_ROOM_SNAPSHOT="u55";a.user1.orbiter.UPC.SEND_MESSAGE_TO_SERVER="u57";a.user1.orbiter.UPC.OBSERVE_ROOM="u58";a.user1.orbiter.UPC.STOP_OBSERVING_ROOM="u61";a.user1.orbiter.UPC.SET_ROOM_UPDATE_LEVELS="u64";a.user1.orbiter.UPC.CLIENT_HELLO="u65";a.user1.orbiter.UPC.REMOVE_ROOM_ATTR="u67";a.user1.orbiter.UPC.REMOVE_CLIENT_ATTR="u69";a.user1.orbiter.UPC.SEND_ROOMMODULE_MESSAGE="u70";a.user1.orbiter.UPC.SEND_SERVERMODULE_MESSAGE="u71";a.user1.orbiter.UPC.TERMINATE_SESSION="u83";a.user1.orbiter.UPC.LOGOFF="u86";a.user1.orbiter.UPC.GET_CLIENTLIST_SNAPSHOT="u91";a.user1.orbiter.UPC.WATCH_FOR_CLIENTS="u92";a.user1.orbiter.UPC.STOP_WATCHING_FOR_CLIENTS="u93";a.user1.orbiter.UPC.GET_CLIENT_SNAPSHOT="u94";a.user1.orbiter.UPC.OBSERVE_CLIENT="u95";a.user1.orbiter.UPC.STOP_OBSERVING_CLIENT="u96";a.user1.orbiter.UPC.GET_ACCOUNTLIST_SNAPSHOT="u97";a.user1.orbiter.UPC.WATCH_FOR_ACCOUNTS="u98";a.user1.orbiter.UPC.STOP_WATCHING_FOR_ACCOUNTS="u99";a.user1.orbiter.UPC.GET_ACCOUNT_SNAPSHOT="u100";a.user1.orbiter.UPC.OBSERVE_ACCOUNT="u121";a.user1.orbiter.UPC.STOP_OBSERVING_ACCOUNT="u122";a.user1.orbiter.UPC.ADD_ROLE="u133";a.user1.orbiter.UPC.REMOVE_ROLE="u135";a.user1.orbiter.UPC.KICK_CLIENT="u149";a.user1.orbiter.UPC.BAN="u137";a.user1.orbiter.UPC.UNBAN="u139";a.user1.orbiter.UPC.GET_BANNED_LIST_SNAPSHOT="u141";a.user1.orbiter.UPC.WATCH_FOR_BANNED_ADDRESSES="u143";a.user1.orbiter.UPC.STOP_WATCHING_FOR_BANNED_ADDRESSES="u145";a.user1.orbiter.UPC.GET_NODELIST_SNAPSHOT="u165";a.user1.orbiter.UPC.GET_GATEWAYS_SNAPSHOT="u167";a.user1.orbiter.UPC.JOINED_ROOM="u6";a.user1.orbiter.UPC.RECEIVE_MESSAGE="u7";a.user1.orbiter.UPC.CLIENT_ATTR_UPDATE="u8";a.user1.orbiter.UPC.ROOM_ATTR_UPDATE="u9";a.user1.orbiter.UPC.CLIENT_METADATA="u29";a.user1.orbiter.UPC.CREATE_ROOM_RESULT="u32";a.user1.orbiter.UPC.REMOVE_ROOM_RESULT="u33";a.user1.orbiter.UPC.CLIENTCOUNT_SNAPSHOT="u34";a.user1.orbiter.UPC.CLIENT_ADDED_TO_ROOM="u36";a.user1.orbiter.UPC.CLIENT_REMOVED_FROM_ROOM="u37";a.user1.orbiter.UPC.ROOMLIST_SNAPSHOT="u38";a.user1.orbiter.UPC.ROOM_ADDED="u39";a.user1.orbiter.UPC.ROOM_REMOVED="u40";a.user1.orbiter.UPC.WATCH_FOR_ROOMS_RESULT="u42";a.user1.orbiter.UPC.STOP_WATCHING_FOR_ROOMS_RESULT="u43";a.user1.orbiter.UPC.LEFT_ROOM="u44";a.user1.orbiter.UPC.CHANGE_ACCOUNT_PASSWORD_RESULT="u46";a.user1.orbiter.UPC.CREATE_ACCOUNT_RESULT="u47";a.user1.orbiter.UPC.REMOVE_ACCOUNT_RESULT="u48";a.user1.orbiter.UPC.LOGIN_RESULT="u49";a.user1.orbiter.UPC.SERVER_TIME_UPDATE="u50";a.user1.orbiter.UPC.ROOM_SNAPSHOT="u54";a.user1.orbiter.UPC.OBSERVED_ROOM="u59";a.user1.orbiter.UPC.GET_ROOM_SNAPSHOT_RESULT="u60";a.user1.orbiter.UPC.STOPPED_OBSERVING_ROOM="u62";a.user1.orbiter.UPC.CLIENT_READY="u63";a.user1.orbiter.UPC.SERVER_HELLO="u66";a.user1.orbiter.UPC.JOIN_ROOM_RESULT="u72";a.user1.orbiter.UPC.SET_CLIENT_ATTR_RESULT="u73";a.user1.orbiter.UPC.SET_ROOM_ATTR_RESULT="u74";a.user1.orbiter.UPC.GET_CLIENTCOUNT_SNAPSHOT_RESULT="u75";a.user1.orbiter.UPC.LEAVE_ROOM_RESULT="u76";a.user1.orbiter.UPC.OBSERVE_ROOM_RESULT="u77";a.user1.orbiter.UPC.STOP_OBSERVING_ROOM_RESULT="u78";a.user1.orbiter.UPC.ROOM_ATTR_REMOVED="u79";a.user1.orbiter.UPC.REMOVE_ROOM_ATTR_RESULT="u80";a.user1.orbiter.UPC.CLIENT_ATTR_REMOVED="u81";a.user1.orbiter.UPC.REMOVE_CLIENT_ATTR_RESULT="u82";a.user1.orbiter.UPC.SESSION_TERMINATED="u84";a.user1.orbiter.UPC.SESSION_NOT_FOUND="u85";a.user1.orbiter.UPC.LOGOFF_RESULT="u87";a.user1.orbiter.UPC.LOGGED_IN="u88";a.user1.orbiter.UPC.LOGGED_OFF="u89";a.user1.orbiter.UPC.ACCOUNT_PASSWORD_CHANGED="u90";a.user1.orbiter.UPC.CLIENTLIST_SNAPSHOT="u101";a.user1.orbiter.UPC.CLIENT_ADDED_TO_SERVER="u102";a.user1.orbiter.UPC.CLIENT_REMOVED_FROM_SERVER="u103";a.user1.orbiter.UPC.CLIENT_SNAPSHOT="u104";a.user1.orbiter.UPC.OBSERVE_CLIENT_RESULT="u105";a.user1.orbiter.UPC.STOP_OBSERVING_CLIENT_RESULT="u106";a.user1.orbiter.UPC.WATCH_FOR_CLIENTS_RESULT="u107";a.user1.orbiter.UPC.STOP_WATCHING_FOR_CLIENTS_RESULT="u108";a.user1.orbiter.UPC.WATCH_FOR_ACCOUNTS_RESULT="u109";a.user1.orbiter.UPC.STOP_WATCHING_FOR_ACCOUNTS_RESULT="u110";a.user1.orbiter.UPC.ACCOUNT_ADDED="u111";a.user1.orbiter.UPC.ACCOUNT_REMOVED="u112";a.user1.orbiter.UPC.JOINED_ROOM_ADDED_TO_CLIENT="u113";a.user1.orbiter.UPC.JOINED_ROOM_REMOVED_FROM_CLIENT="u114";a.user1.orbiter.UPC.GET_CLIENT_SNAPSHOT_RESULT="u115";a.user1.orbiter.UPC.GET_ACCOUNT_SNAPSHOT_RESULT="u116";a.user1.orbiter.UPC.OBSERVED_ROOM_ADDED_TO_CLIENT="u117";a.user1.orbiter.UPC.OBSERVED_ROOM_REMOVED_FROM_CLIENT="u118";a.user1.orbiter.UPC.CLIENT_OBSERVED="u119";a.user1.orbiter.UPC.STOPPED_OBSERVING_CLIENT="u120";a.user1.orbiter.UPC.OBSERVE_ACCOUNT_RESULT="u123";a.user1.orbiter.UPC.ACCOUNT_OBSERVED="u124";a.user1.orbiter.UPC.STOP_OBSERVING_ACCOUNT_RESULT="u125";a.user1.orbiter.UPC.STOPPED_OBSERVING_ACCOUNT="u126";a.user1.orbiter.UPC.ACCOUNT_LIST_UPDATE="u127";a.user1.orbiter.UPC.UPDATE_LEVELS_UPDATE="u128";a.user1.orbiter.UPC.CLIENT_OBSERVED_ROOM="u129";a.user1.orbiter.UPC.CLIENT_STOPPED_OBSERVING_ROOM="u130";a.user1.orbiter.UPC.ROOM_OCCUPANTCOUNT_UPDATE="u131";a.user1.orbiter.UPC.ROOM_OBSERVERCOUNT_UPDATE="u132";a.user1.orbiter.UPC.ADD_ROLE_RESULT="u134";a.user1.orbiter.UPC.REMOVE_ROLE_RESULT="u136";a.user1.orbiter.UPC.BAN_RESULT="u138";a.user1.orbiter.UPC.UNBAN_RESULT="u140";a.user1.orbiter.UPC.BANNED_LIST_SNAPSHOT="u142";a.user1.orbiter.UPC.WATCH_FOR_BANNED_ADDRESSES_RESULT="u144";a.user1.orbiter.UPC.STOP_WATCHING_FOR_BANNED_ADDRESSES_RESULT="u146";a.user1.orbiter.UPC.BANNED_ADDRESS_ADDED="u147";a.user1.orbiter.UPC.BANNED_ADDRESS_REMOVED="u148";a.user1.orbiter.UPC.KICK_CLIENT_RESULT="u150";a.user1.orbiter.UPC.SERVERMODULELIST_SNAPSHOT="u152";a.user1.orbiter.UPC.GET_UPC_STATS_SNAPSHOT_RESULT="u155";a.user1.orbiter.UPC.UPC_STATS_SNAPSHOT="u156";a.user1.orbiter.UPC.RESET_UPC_STATS_RESULT="u158";a.user1.orbiter.UPC.WATCH_FOR_PROCESSED_UPCS_RESULT="u160";a.user1.orbiter.UPC.PROCESSED_UPC_ADDED="u161";a.user1.orbiter.UPC.STOP_WATCHING_FOR_PROCESSED_UPCS_RESULT="u163";a.user1.orbiter.UPC.CONNECTION_REFUSED="u164";a.user1.orbiter.UPC.NODELIST_SNAPSHOT="u166";a.user1.orbiter.UPC.GATEWAYS_SNAPSHOT="u168";a.user1.orbiter.LOADED=true})((typeof window=="undefined")?this:window);
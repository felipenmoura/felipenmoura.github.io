{"name":"parse_url","purpose":"Parse a URL and return its components","manualid":"function.parse-url","version":"PHP 4, PHP 5","params":[{"name":"url","type":"string","optional":"false"},{"name":"component","type":"int","optional":"true","initializer":"-1"}],"return":{"type":"mixed","description":"On seriously malformed URLs, parse_url may return\n   FALSE and emit a E_WARNING. Otherwise an associative\n   array is returned, whose components may be (at least one):\n   \n    \n     \n      scheme - e.g. http\n     \n    \n    \n     \n      host \n     \n    \n    \n     \n      port\n     \n    \n    \n     \n      user\n     \n    \n    \n     \n      pass\n     \n    \n    \n     \n      path\n     \n    \n    \n     \n      query - after the question mark ?\n     \n    \n    \n     \n      fragment - after the hashmark #If the component parameter is specified a\n   string is returned instead of an array."},"errors":null,"notes":[{"type":"note","description":"This function doesn't work with relative URLs."},{"type":"note","description":"This function is intended specifically for the purpose of parsing URLs\n    and not URIs. However, to comply with PHP's backwards compatibility\n    requirements it makes an exception for the file:\/\/ scheme where triple\n    slashes (file:\/\/\/...) are allowed. For any other scheme this is invalid."}],"changelog":[{"version":"5.1.2","change":"Added the component parameter"}],"seealso":[{"type":"function","name":"pathinfo"},{"type":"function","name":"parse_str"},{"type":"function","name":"http_build_query"},{"type":"function","name":"http_build_url"},{"type":"function","name":"dirname"},{"type":"function","name":"basename"}]}
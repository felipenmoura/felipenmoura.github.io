{"name":"mysql_fetch_array","purpose":"Fetch a result row as an associative array, a numeric array, or both","manualid":"function.mysql-fetch-array","version":"PHP 4, PHP 5","params":[{"name":"result","type":"resource","optional":"false"},{"name":"result_type","type":"int","optional":"true","initializer":"MYSQL_BOTH"}],"return":{"type":"array","description":"Returns an array of strings that corresponds to the fetched row, or FALSE\n   if there are no more rows. The type of returned array depends on\n   how result_type is defined. By using \n   MYSQL_BOTH (default), you'll get an array with both \n   associative and number indices. Using MYSQL_ASSOC, you \n   only get associative indices (as mysql_fetch_assoc \n   works), using MYSQL_NUM, you only get number indices \n   (as mysql_fetch_row works).If two or more columns of the result have the same field names,\n   the last column will take precedence. To access the other column(s)\n   of the same name, you must use the numeric index of the column or\n   make an alias for the column. For aliased columns, you cannot\n   access the contents with the original column name."},"errors":null,"notes":[{"type":"note","description":"An important thing to note is that using \n    mysql_fetch_array is not \n    significantly slower than using\n    mysql_fetch_row, while it provides\n    a significant added value."},{"type":"note","description":"Field names returned by this function\nare case-sensitive."},{"type":"note","description":"This function sets NULL fields to\nthe PHP NULL value."}],"changelog":[],"seealso":[{"type":"function","name":"mysql_fetch_row"},{"type":"function","name":"mysql_fetch_assoc"},{"type":"function","name":"mysql_data_seek"},{"type":"function","name":"mysql_query"}]}
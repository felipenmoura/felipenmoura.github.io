{"name":"array_merge","purpose":"Merge one or more arrays","manualid":"function.array-merge","version":"PHP 4, PHP 5","params":[{"name":"array1","type":"array","optional":"false"},{"name":"array2","type":"array","optional":"true"},{"name":"...","type":"array","optional":"true"}],"return":{"type":"array","description":"Returns the resulting array."},"errors":null,"notes":[],"changelog":[{"version":"5.0.0","change":"The behavior of array_merge was modified in PHP 5. Unlike PHP 4, array_merge\n          now only accepts parameters of type array. However, you can use typecasting\n          to merge other types. See the example below for details.\n         \n         \n          \n           array_merge PHP 5 example\n           \n\n<?php\n$beginning = 'foo';\n$end = array(1 => 'bar');\n$result = array_merge((array)$beginning, (array)$end);\nprint_r($result);\n?>\n\n           \n           The above example will output:\n           \n    \n    Array\n    (\n        [0] => foo\n        [1] => bar\n    )"}],"seealso":[{"type":"function","name":"array_merge_recursive"},{"type":"function","name":"array_combine"},{"type":false,"name":false}]}
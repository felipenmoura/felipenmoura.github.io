{"name":"dbx_query","purpose":"Send a query and fetch all results (if any)","manualid":"function.dbx-query","version":"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0","params":[{"name":"link_identifier","type":"object","optional":"false"},{"name":"sql_statement","type":"string","optional":"false"},{"name":"flags","type":"int","optional":"true"}],"return":{"type":"mixed","description":"dbx_query returns an object or 1 \n   on success, and 0 on failure. The result object is \n   returned only if the query given in sql_statement\n   produces a result set (i.e. a SELECT query, even if the result set is\n   empty).The returned object has four or five\n   properties depending on flags:\n   \n    \n     \n      handle\n     \n     \n      \n       It is a valid handle for the connected database, and as such it can be\n       used in module specific functions (if required).\n       \n        \n\n<?php\n$result = dbx_query($link, \"SELECT id FROM table\");\nmysql_field_len($result->handle, 0);\n?>cols and rows\n     \n     \n      \n       These contain the number of columns (or fields) and rows (or records)\n       respectively.\n       \n        \n\n<?php\n$result = dbx_query($link, 'SELECT id FROM table');\necho $result->rows; \/\/ number of records\necho $result->cols; \/\/ number of fields \n?>info (optional)\n     \n     \n      \n       It is returned only if either DBX_RESULT_INFO or\n       DBX_RESULT_ASSOC is specified in the\n       flags parameter. It is a 2 dimensional array,\n       that has two named rows (name and \n       type) to retrieve column information.\n      \n      \n       lists each field's name and type\n       \n\n<?php\n$result = dbx_query($link, 'SELECT id FROM table',\n                     DBX_RESULT_INDEX | DBX_RESULT_INFO);\n\nfor ($i = 0; $i < $result->cols; $i++ ) {\n    echo $result->info['name'][$i] . \"\\n\";\n    echo $result->info['type'][$i] . \"\\n\";  \n}\n?>data\n     \n     \n      \n       This property contains the actual resulting data, possibly associated \n       with column names as well depending on flags.\n       If DBX_RESULT_ASSOC is set, it is possible to use\n       $result->data[2][\"field_name\"].\n      \n      \n       outputs the content of data property into HTML table\n       \n\n<?php\n$result = dbx_query($link, 'SELECT id, parentid, description FROM table');\n\necho \"<table>\\n\";\nforeach ($result->data as $row) {\n    echo \"<tr>\\n\";\n    foreach ($row as $field) {\n        echo \"<td>$field<\/td>\";\n    }\n    echo \"<\/tr>\\n\";\n}\necho \"<\/table>\\n\";\n?>\n\n       \n      \n      \n       How to handle UNBUFFERED queries\n       \n\n<?php\n\n$result = dbx_query ($link, 'SELECT id, parentid, description FROM table', DBX_RESULT_UNBUFFERED);\n\necho \"<table>\\n\";\nwhile ($row = dbx_fetch_row($result)) {\n    echo \"<tr>\\n\";\n    foreach ($row as $field) {\n        echo \"<td>$field<\/td>\";\n    }\n    echo \"<\/tr>\\n\";\n}\necho \"<\/table>\\n\";\n\n?>"},"errors":null,"notes":[{"type":"note","description":"Always refer to the module-specific documentation as well.Column names for queries on an Oracle database are returned in lowercase."}],"changelog":[{"version":"5.0.0","change":"Introduced DBX_RESULT_UNBUFFERED."},{"version":"4.3.0","change":"Introduced DBX_COLNAMES_UNCHANGED,\n        DBX_COLNAMES_UPPERCASE, and\n        DBX_COLNAMES_LOWERCASE."}],"seealso":[{"type":"function","name":"dbx_escape_string"},{"type":"function","name":"dbx_fetch_row"},{"type":"function","name":"dbx_connect"}]}
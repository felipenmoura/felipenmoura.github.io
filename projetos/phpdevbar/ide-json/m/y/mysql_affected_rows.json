{"name":"mysql_affected_rows","purpose":"Get number of affected rows in previous MySQL operation","manualid":"function.mysql-affected-rows","version":"PHP 4, PHP 5","params":[{"name":"link_identifier","type":"resource","optional":"true"}],"return":{"type":"int","description":"Returns the number of affected rows on success, and -1 if the last query\n   failed.If the last query was a DELETE query with no WHERE clause, all\n   of the records will have been deleted from the table but this\n   function will return zero with MySQL versions prior to 4.1.2.When using UPDATE, MySQL will not update columns where the new value is the \n   same as the old value.  This creates the possibility that \n   mysql_affected_rows may not actually equal the number \n   of rows matched, only the number of rows that were literally affected by \n   the query.The REPLACE statement first deletes the record with the same primary key \n   and then inserts the new record. This function returns the number of \n   deleted records plus the number of inserted records."},"errors":null,"notes":[{"type":"note","description":"If you are using transactions, you need to call\n    mysql_affected_rows after your INSERT, UPDATE, or \n    DELETE query, not after the COMMIT."},{"type":"note","description":"To retrieve the number of rows returned by a SELECT, it is possible to\n    use mysql_num_rows."},{"type":"note","description":"mysql_affected_rows does not count rows affected\n     implicitly through the use of ON DELETE CASCADE and\/or ON UPDATE CASCADE \n     in foreign key constraints."}],"changelog":[],"seealso":[{"type":"function","name":"mysql_num_rows"},{"type":"function","name":"mysql_info"}]}
{"name":"oci_execute","purpose":"Executes a statement","manualid":"function.oci-execute","version":"PHP 5, PECL OCI8 >= 1.1.0","params":[{"name":"statement","type":"resource","optional":"false"},{"name":"mode","type":"int","optional":"true","initializer":"OCI_COMMIT_ON_SUCCESS"}],"return":{"type":"bool","description":"Returns TRUE on success or FALSE on failure."},"errors":null,"notes":[{"type":"note","description":"Transactions are automatically rolled back when connections are\n    closed, or when the script ends, whichever is soonest.  Explicitly\n    call oci_commit to commit a transaction.Any call to oci_execute that uses\n    OCI_COMMIT_ON_SUCCESS mode explicitly or by\n    default will commit any previous uncommitted transaction.Any Oracle DDL statement such as CREATE\n    or DROP will automatically commit any\n    uncommitted transaction."},{"type":"note","description":"Because the oci_execute function generally\n    sends the statement to the\n    database, oci_execute can identify some\n    statement syntax errors that the lightweight,\n    local oci_parse function does not."},{"type":"note","description":"In PHP versions before 5.0.0 use ociexecute\n    instead.  The old function name can still be used\nin current versions, however it is deprecated and not recommended."}],"changelog":[],"seealso":[{"type":"function","name":"oci_parse"}]}
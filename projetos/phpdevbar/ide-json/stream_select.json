{"name":"stream_select","purpose":"Runs the equivalent of the select() system call on the given\n   arrays of streams with a timeout specified by tv_sec and tv_usec","manualid":"function.stream-select","version":"PHP 4 >= 4.3.0, PHP 5","params":[{"name":"read","type":"array","optional":"false"},{"name":"write","type":"array","optional":"false"},{"name":"except","type":"array","optional":"false"},{"name":"tv_sec","type":"int","optional":"false"},{"name":"tv_usec","type":"int","optional":"true"}],"return":{"type":"int","description":"On success stream_select returns the number of\n   stream resources contained in the modified arrays, which may be zero if\n   the timeout expires before anything interesting happens. On error FALSE\n   is returned and a warning raised (this can happen if the system call is\n   interrupted by an incoming signal)."},"errors":null,"notes":[{"type":"note","description":"Due to a limitation in the current Zend Engine it is not possible to pass a\n    constant modifier like NULL directly as a parameter to a function\n    which expects this parameter to be passed by reference. Instead use a\n    temporary variable or an expression with the leftmost member being a\n    temporary variable:\n    \n\n<?php\n$e = NULL;\nstream_select($r, $w, $e, 0);\n?>"},{"type":"note","description":"Be sure to use the === operator when checking for an\n   error. Since the stream_select may return 0 the\n   comparison with == would evaluate to TRUE:\n   \n\n<?php\n$e = NULL;\nif (false === stream_select($r, $w, $e, 0)) {\n    echo \"stream_select() failed\\n\";\n}\n?>"},{"type":"note","description":"If you read\/write to a stream returned in the arrays be aware that\n    they do not necessarily read\/write the full amount of data you have\n    requested. Be prepared to even only be able to read\/write a single\n    byte."},{"type":"note","description":"Windows compatibility: stream_select used on a\n    pipe returned from proc_open may cause data loss\n    under Windows 98.Use of stream_select on\n    file descriptors returned by proc_open will fail\n    and return FALSE under Windows."}],"changelog":[],"seealso":[{"type":"function","name":"stream_set_blocking"}]}